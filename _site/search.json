[
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "",
    "text": "Some parts of this document have hidden codes that are kept PRIVATE for now. They contain confidential codes which I will ONLY be disclosing them on 1 March 2024 (week 9).\nI will ONLY provide explanations for the exercise right now, and it is subjected to change during the duration of this exercise.\nIt is important to be honest and fair in our work, and respect the privacy of the work of others, so as to uphold academic integrity throughout the duration of this take-home exercise."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#setting-the-scene",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#setting-the-scene",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Setting the Scene",
    "text": "Setting the Scene\nDengue Hemorrhagic Fever (in short dengue fever) is one of the most widespread mosquito-borne diseases in the most tropical and subtropical regions. It is an acute disease caused by dengue virus infection which is transmitted by female Aedes aegypti and Aedes albopictus mosquitoes. In 2015, Taiwan had recorded the most severe dengue fever outbreak with more than 43,000 dengue cases and 228 deaths. Since then, the annual reported dengue fever cases were maintained at the level of not more than 200 cases. However, in 2023, Taiwan recorded 26703 dengue fever cases. Figure below reveals that more than 25,000 cases were reported at Tainan City."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#objectives",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#objectives",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "Objectives",
    "text": "Objectives\nAs a curious geospatial analytics green horn, you are interested to discover:\n\nif the distribution of dengue fever outbreak at Tainan City, Taiwan are independent from space and space and time.\nIf the outbreak is indeed spatial and spatio-temporal dependent, then, you would like to detect where are the clusters and outliers, and the emerging hot spot/cold spot areas."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#install-maptools",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#install-maptools",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "1 Install maptools",
    "text": "1 Install maptools\n\n\nCode\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\nInstalling the required tools for the analysis (e.g. sf, tidyverse, maptools, etc)\n\n\nCode\npacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse, arrow, lubridate, dplyr, spNetwork, spacetime, spdep, sfdep)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-import-and-wrangling",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-import-and-wrangling",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "2 Data Import and Wrangling",
    "text": "2 Data Import and Wrangling\nThis is where we import the data and prepare it before analysis``.\nLet’s use st_read() of sf package to import these two geospatial data sets into R. And we will be using other functions to prepare our data upon importing them.\nThe 2 data sets are:\n\nTAIWAN_VILLAGE_2020, a geospatial data of village boundary of Taiwan. It is in ESRI shapefile format. The data is in Taiwan Geographic Coordinate System. (Source: Historical map data of the village boundary: TWD97 longitude and latitude)\nDengue_Daily.csv, an aspatial data of reported dengue cases in Taiwan since 1998. (Source: Dengue Daily Confirmed Cases Since 1998. Below are selected fields that are useful for this study:\n\n發病日: Onset date\n最小統計區中心點X: x-coordinate\n最小統計區中心點Y: y-coordinate\n\n\n\n2.1 Taiwan Village Data (taiwan_village_sf)\n\n2.1.1 Import the csv data (TAINAN_VILLAGE.shp)\nFirstly, we will import the data for the Taiwan Village Data\n\n\nCode\ntaiwan_village_sf &lt;- st_read(dsn = \"data/geospatial\", layer = \"TAINAN_VILLAGE\")\n\n\nLet’s check the referencing system info of this taiwan_village_sf\n\n\nCode\nst_crs(taiwan_village_sf)\n\n\n\n\n2.1.2 Filtering the taiwan_village_sf.\nCurrently, we have 649 rows of data in taiwan_village_sf.\n\nTherefore, we have to filter the taiwan_village_sf for village level of D01, D02, D04, D06, D07, D08, D32, and D39 of the Tainan City, Taiwan\nNow, filtered_taiwan_village_sf will consist of 258 rows of data. This will help to reduce the amount of data that is needed to be processed in the later parts.\n\n\n\n2.1.3 Saving it to RDS\nSince we’re happy with the dataset for filtered_taiwan_village_sf, let’s save it to a rds so that it would be easier for us to retrieve it in the future\nImport the filtered_taiwan_village_sf rds data\n\n\n2.1.4 Visualise the dataset by plotting it\nLet’s visualise how filtered_taiwan_village_sf looks like when we plot it\n\n\n\n\n\n\n\n\n2.2 Dengue Data (dengue_sf)\n\n2.2.1 Import the csv data (Dengue_Daily.csv)\nFirstly, we will import the data for the Dengue Data\n\n\nCode\ndengue_sf &lt;- read_csv(\"data/aspatial/Dengue_Daily.csv\")\n\n\nAs dengue_sf consists of 106861 rows of data, with 26 types of variables, as shown below. Therefore we need to filter it\n\n\n\n2.2.2 Filtering the dengue_sf\nLet’s filter dengue_sf for fever cases that are confined to epidemiology week 31-50 of 2023, as well as the selected variables which we will be working with (發病日: Onset date, 居住縣市: County, 居住鄉鎮: Town, 居住村里: Village, 最小統計區中心點X: x-coordinate, 最小統計區中心點Y: y-coordinate)\nIn the code chunk above, we filtered the specific data that falls under the weeks that we are interested to look into. Moreover, we also use the “select” line to select the specific variables that we deemed useful for our research.\nAfter filtering dengue_sf, and storing it in filtered_dengue_sf, the amount of data has reduced significantly from 106861 rows of data in dengue_sf, to 25480 rows of data in filtered_dengue_sf (with 3 types of variables).\n\nLet’s check the data type of each variable before we proceed to performing left-join\nLet’s transform some of our variables and prepare it for the left-join operation in step 2.3\n\nSince the X and Y coordinates are in string format, we need to convert it to numeric.\nThis is the same for onset date where we need to convert it to date format\n\nLet’s create 3 different variables that stores the week number, month and day respectively. This is to facilitate our research and analysis in the later parts of this take-home exercise.\nHowever, in our dengue dataset, we have noticed that there are rows of data with no village name. As our research is focused mainly on the village level, we will remove the rows with village name = “None”.\n\n\n\n2.2.3 Saving it to RDS\nSince we’re happy with the dataset for filtered_taiwan_village_sf, let’s save it to a rds so that it would be easier for us to retrieve it in the future\nImport the filtered_taiwan_village_sf rds data\nLet’s take a look at our filtered_dengue_sf dataset :)\n\nI have included the 居住縣市 (County), 居住鄉鎮 (Town) and 居住村里 (Village) into the data set for easier future reference.\n\n\n\n\n\n2.3 Performing Left-Join to combine both data sets\nLet’s perform a left-join to combine the variables in filtered_taiwan_village_sf and filtered_dengue_sf.\nOur goal is to perform left-join to the filtered_dengue_sf and supplement it with the specific geospatial and relevant variable. We will be operate the left-join operation based on the Village Name of both dataset as we want to retrieve the distinct geospatial infromation from filtered_taiwan_village_sf for each dengue cases.\n\n2.3.1 Left-Join Operation and Outcome\nThe left-join dataset would be named taiwan_village_dengue\nAfter performing the left-join operation, the taiwan_village_dengue dataset seems to have “NA” values. This is due to the fact that the village name (居住村里) value in the filtered_dengue_sf is not found in the list of village name (VILLNAME) in filtered_taiwan_village_sf.\n\n\n2.3.2 Dealing with Null (NA) values\nApparently, the “NA” values were due to the fact that the cases were captured in other counties, apart from the Tainan City, of which one of the NA data were in Yunlin County. As we have already filtered the filtered_taiwan_village_sf to only keep data pertaining to the counties of Tainan City, the left-join would result in cases that fall in county outside of Tainan city to be “NA”.\nTherefore, we have to remove the “NA” values as we would not be focusing on cases which are not within Tainan City.\nNow, we have 17732 rows of data for the cases within the counties of Tainan City, and within the weeks which we are focusing on.\n\n\n\n2.3.3 Saving it to RDS\nSince we are happy with our finalised taiwan_village_dengue dataset, let’s keep it in our rds for easy reference in the future\nImport the filtered_taiwan_village_sf rds data\nLet’s take a look at our taiwan_village_dengue dataset :)\n\n\n\n\n2.4 Analyzing the taiwan_village_dengue dataset\n\n2.4.1 Analyse number of cases per day\n\n2.4.1.1 Sorting and Counting the cases\nLet’s create a table to view the number of cases per day. We will be using groupy() to sort the dataset, and n() to count the cases.\nWe can see the total number of cases for each day without looking through the original dataset. (this is just a snippet of the first 5 rows of the dataset)\n\n\n\n2.4.1.2 Saving it to RDS\nSince we are happy with our finalised daily_dengue_numbers dataset, let’s keep it in our rds for easy reference in the future\nImport the daily_dengue_numbers rds data\n\n\n\n2.4.2 Analyse number of cases per week\n\n2.4.2.1 Sorting and Counting the cases\nLet’s create a table to view the number of cases per week. We will be using groupy() to sort the dataset, and n() to count the cases.\nWe can see the total number of cases for each week without looking through the original dataset. (this is just a snippet of the first 5 rows of the dataset)\n\n\n\n2.4.2.2 Saving it to RDS\nSince we are happy with our finalised weekly_dengue_numbers dataset, let’s keep it in our rds for easy reference in the future\nImport the weekly_dengue_numbers rds data\n\n\n\n2.4.3 Analyse number of cases per week in each village\n\n2.4.3.1 Sorting and Counting the cases\nFinally, for our research focus, let’s create a table to view the number of cases per week in each village. We will be using groupy() to sort the dataset, and n() to count the cases.\nWe can see the total number of cases for each week for each village, without looking through the original dataset. (this is just a snippet of the first 5 rows of the dataset)\n\n\n\n2.4.2.3 Saving it to RDS\nSince we are happy with our finalised weekly_dengue_numbers_in_each_village dataset, let’s keep it in our rds for easy reference in the future\nImport the weekly_dengue_numbers_in_each_village rds data"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#global-spatial-autocorrelation-analysis-by-using-sfdep-methods",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#global-spatial-autocorrelation-analysis-by-using-sfdep-methods",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "3 Global Spatial Autocorrelation Analysis by using sfdep methods",
    "text": "3 Global Spatial Autocorrelation Analysis by using sfdep methods\n\n3.1 Visualizing taiwan_village_dengue\nLet’s visualize taiwan_village_dengue before we move on to performing global spatial autocorrelation analysis\n\n\n\n\n\n\n\n3.2 Global Measures of Spatial Autocorrelation\nWe will be performing Global Measures of Spatial Autocorrelation in this section.\n\n3.2.1 Computing Contiguity Spatial Weights\nBefore we can perform the global spatial autocorrelation analysis, we need to construct the spatial weights of the study area. The spatial weights is used to define the neighbourhood relationships between the geographical units.\nWe have to prepare our dataset before computing the spatial weights\nThe code calculates a spatial weights matrix using the queen contiguity criterion for the villages in Taiwan represented by polygons in the taiwan_village_dengue dataset, and then provides a summary of this matrix.\n\n\nSimple feature collection with 2885 features and 16 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\nFirst 10 features:\n                                                                                                                                                                                                                                                                                                                                                nb\n1                                                                                                                                                                                                                                                                                    2, 33, 34, 35, 36, 37, 38, 1533, 1534, 2070, 2071, 2072, 2073\n1.1                                                                                                                                                                                                                                                                                  1, 33, 34, 35, 36, 37, 38, 1533, 1534, 2070, 2071, 2072, 2073\n2   4, 5, 6, 7, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 2150, 2151, 2152, 2153, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497\n2.1 3, 5, 6, 7, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 2150, 2151, 2152, 2153, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497\n2.2 3, 4, 6, 7, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 2150, 2151, 2152, 2153, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497\n2.3 3, 4, 5, 7, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 2150, 2151, 2152, 2153, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497\n2.4 3, 4, 5, 6, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 2150, 2151, 2152, 2153, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497\n3                                       9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 2155, 2156, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315\n3.1                                     8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 2155, 2156, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315\n3.2                                      8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 2155, 2156, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    wt\nnnnnnnnnnn       VILLCODE COUNTYNAME TOWNNAME VILLNAME      VILLENG COUNTYID COUNTYCODE\n1   67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n1.1 67000350032     臺南市   安南區   青草里 Qingcao Vil.        D      67000\n2   67000270011     臺南市   仁德區   保安里  Bao'an Vil.        D      67000\n2.1 67000270011     臺南市   仁德區   保安里  Bao'an Vil.        D      67000\n2.2 67000270011     臺南市   仁德區   保安里  Bao'an Vil.        D      67000\n2.3 67000270011     臺南市   仁德區   保安里  Bao'an Vil.        D      67000\n2.4 67000270011     臺南市   仁德區   保安里  Bao'an Vil.        D      67000\n3   67000370005     臺南市   中西區   赤嵌里 Chihkan Vil.        D      67000\n3.1 67000370005     臺南市   中西區   赤嵌里 Chihkan Vil.        D      67000\n3.2 67000370005     臺南市   中西區   赤嵌里 Chihkan Vil.        D      67000\n    TOWNID TOWNCODE NOTE epi_week_num Village Num_Cases\n1      D06 67000350 &lt;NA&gt;           37  青草里         1\n1.1    D06 67000350 &lt;NA&gt;           41  青草里         1\n2      D32 67000270 &lt;NA&gt;           31  保安里         1\n2.1    D32 67000270 &lt;NA&gt;           37  保安里         3\n2.2    D32 67000270 &lt;NA&gt;           41  保安里         5\n2.3    D32 67000270 &lt;NA&gt;           41  安康里        12\n2.4    D32 67000270 &lt;NA&gt;           45  安東里         7\n3      D08 67000370 &lt;NA&gt;           35  赤嵌里         4\n3.1    D08 67000370 &lt;NA&gt;           36  赤嵌里         1\n3.2    D08 67000370 &lt;NA&gt;           37  赤嵌里         4\n                          geometry spatial_weights\n1   POLYGON ((120.1176 23.08387...             Inf\n1.1 POLYGON ((120.1176 23.08387...             Inf\n2   POLYGON ((120.2304 22.93544...      0.01851852\n2.1 POLYGON ((120.2304 22.93544...      0.01851852\n2.2 POLYGON ((120.2304 22.93544...      0.01851852\n2.3 POLYGON ((120.2304 22.93544...      0.01851852\n2.4 POLYGON ((120.2304 22.93544...      0.01851852\n3   POLYGON ((120.2012 22.99966...       0.0212766\n3.1 POLYGON ((120.2012 22.99966...       0.0212766\n3.2 POLYGON ((120.2012 22.99966...       0.0212766\n\n\n\n\n\n3.3 Global Measures of Spatial Autocorrelation: Moran’s I\n\n3.3.1 Compute Global Moran’s I\nWe will compute the Global Moran’s I value\n\n\nList of 2\n $ I: num 0.136\n $ K: num 15.1\n\n\n\n\n3.3.2 Global Moran’s I Test\nWe will be using Moran’s I statistics to test our taiwan_village_dengue dataset.\n\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 45.35, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     1.360062e-01     -3.467406e-04      9.040175e-06 \n\n\nBased on the output, the Moran I statistic standard deviate measures the degree of spatial autocorrelation in the variable, Num_cases, in the taiwan_viilage_dengue dataset. In this case, it is 25.476, which indicates a high level of spatial autocorrelation.\nIn addition, the p-value is very low, at less than 2.2e-16, which indicates that the the spatial correlation is statistically significant. This rejects the null hypothesis that there is no spatial autocorrelation in the data.\nThe Moran I statistic of 0.073 also indicates that there is a positive spatial autocorrelation.\nBased on the above explanation, it suggests that the areas with high number of dengue cases tend to be clustered together geographically.\n\n\n3.3.3 Computing Global Monte Carlo Moran’s I\nLet’s perform simulation on our Moran’s I test\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.13601, observed rank = 1000, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nThe result indicates that the spatial autocorrelation is statistically significant with the p-value of less than 0.01.\n\n\n3.3.4 Visualising Global Monte Carlo Moran’s I\nLet’s display our findings in a histogram so that we can visualise it better\nFirstly, we can get a statistical summary of the Monte Carlo Moran’s I output\n\n\n      Min.    1st Qu.     Median       Mean    3rd Qu.       Max. \n-0.0088665 -0.0025018 -0.0002897 -0.0001968  0.0017910  0.0094111 \n\n\nNow, we can plot the histogram"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#local-spatial-autocorrelation-analysis-by-using-sfdep-methods",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#local-spatial-autocorrelation-analysis-by-using-sfdep-methods",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "4 Local Spatial Autocorrelation Analysis by using sfdep methods",
    "text": "4 Local Spatial Autocorrelation Analysis by using sfdep methods\n\n4.1 Compute Local Moran’s I\nWe will compute the Local Moran’s I value\nThe above code would create a new sf file called “lisa” which stores the important information for the local moran’s I values (such as ii, eii, var_ii, etc)\n\n\n\n4.2 Visualising local Moran’s I and p-value\nFor effective comparison, it will be better for us to plot both maps next to each other as shown below.\nWe will create a choropeth map by using the values in the “ii” field in lisa sf for the local Moran’s I, and the values in the “p_ii_sim” field in lisa sf for the p-value.\n\n\n\n\n\n\n\n4.3 Visualising LISA map\nWe will plot the LISA map to check for any kinds of outliers and clusters. It is done by combining the Local Moran’s I of the different areas and their respective p-values.\n\n\n\n\n\nBased on the above map, and comparing it with our initial distribution map (below), we can observe that:\n\n\nAreas highlighted in red as classified as High-High Clusters (red), where there are a high number of dengue cases, and it could also indicate that it is surrounded by areas with high dengue case counts. Comparing it to our initial distribution map that we plot in the beginning (in our join-operation), we can see that the areas with higher dengue cases are situated in area where it is highlighted in a darker shade of blue (ranging from 76.2 to 616.0 cases)\n\nThis means that local authorities should focus on the public health efforts in these areas as they are more prone to an outbreak or transmission.\n\nAreas highlighted in red as classified as Low-Low Clusters (green), where there are a lower number of dengue cases, and it could also indicate that it is surrounded by areas with low dengue case counts. Comparing to the initial distribution map (shown before this), we can see that the Low-Low Clusters are mostly situated at areas where there are lower number of cases (below 47.8)\n\nThis means that public health efforts in these areas are well-maintained and there may be prevention measures in place when there is an outbreak or transmission.\n\nFor both types of outliers, the High-Low (highlighted in yellow) and Low-High (highlighted in purple) outlier areas, they are a high and low number of cases respectively. However, they are surrounded by areas where there is a low or high number of cases respectively, which is contradictory to the actual situation in their areas.\n\nFor High-Low outlier areas, it means that local authorities should seriously look into these areas as they are more prone to an outbreak or transmission, even though they are surrounded by areas with low case counts.\nFor Low-High outlier areas, it means that the area is well-prepared with preventive measures when there is an outbreak or transmission. This means that it is worth looking into the preventive strategies that they have in-place, which could be adopted by the areas with high case counts in the future.\n\n\n\n\n4.4 Conclusion for Local Spatial Autocorrelation\n\nIt is interesting to gain more insights into the different areas by filtering the areas based on the Moran’s I test and p-value, which has significantly helped in identifying clusters which have a high or low number of cases.\nIt is also able to identify outlier areas which is interesting to dive into as it indicates which area is more prone to an outbreak, or area where preventive measures are in-place, despite being surrounded by areas which has a different case counts."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#analyising-emerging-hotspot-analysis-by-using-sfdep-methods",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#analyising-emerging-hotspot-analysis-by-using-sfdep-methods",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "5 Analyising Emerging Hotspot Analysis by using sfdep methods",
    "text": "5 Analyising Emerging Hotspot Analysis by using sfdep methods"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/data/geospatial/TAINAN_VILLAGE.html",
    "href": "Take-home_Ex/Take-home_Ex02/data/geospatial/TAINAN_VILLAGE.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“TWD97”,DATUM[“Taiwan Datum 1997”,ELLIPSOID[“GRS 1980”,6378137,298.257222101,LENGTHUNIT[“metre”,1]]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“Taiwan, Republic of China - onshore and offshore - Taiwan Island, Penghu (Pescadores) Islands.”],BBOX[17.36,114.32,26.96,123.61]],ID[“EPSG”,3824]] +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs 27230 3824 EPSG:3824 TWD97 longlat EPSG:7019 true"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "href": "Take-home_Ex/Take-home_Ex01/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "Add new GWModel with the other packages\n\n\nCode\npacman::p_load(sf, spdep, tmap, tidyverse, knitr,GWmodel)\n\n\nimport the hunan data\n\n\nCode\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\n\nReading layer `Hunan' from data source \n  `C:\\glimjw\\IS415-GAA\\In-class_Ex\\In-class_Ex04\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\nCode\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\nCode\nhunan &lt;- left_join(hunan, hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\nConvert hunan into sp format (cos GWModel only accepts sp format)\n\n\nCode\nhunan_sp &lt;- hunan %&gt;%\n  as_Spatial()\n\n\ncompute the summary statistics\nbw is the bandwidth\nbw is the number of neighbours IF adaptive = TRUE / bw is the dist IF adaptive = FALSE\n\n\nCode\ngwstat &lt;- gwss(data = hunan_sp,\n               vars = \"GDPPC\",\n               bw = 6,\n               kernel = \"bisquare\",\n               adaptive = TRUE,\n               longlat = T)\n\n\nplot the diff data types first .. GDPPC_LM, etc under hunan_sp\nOTHERS [exploratory codes]\n\n\nCode\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\n\nWe do the same for latitude with one key difference. We access the second value per each centroid with [[2]].\n\n\nCode\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\n\nNow that we have latitude and longitude, we use cbind to put longitude and latitude into the same object.\n\n\nCode\ncoords &lt;- cbind(longitude, latitude)\n\n\nWe check the first few observations to see if things are formatted correctly.\n\n\nCode\nhead(coords)\n\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\n\nCode\nk1 &lt;- knn2nb(knearneigh(coords))\n\n\n\n\nCode\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-NKDE.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-NKDE.html",
    "title": "Network Constrained Spatial Point Patterns Analysis",
    "section": "",
    "text": "Code\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\n\n\nCode\npacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse, spNetwork, classInt, viridis)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-NKDE.html#install-maptools",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-NKDE.html#install-maptools",
    "title": "Network Constrained Spatial Point Patterns Analysis",
    "section": "",
    "text": "Code\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\n\n\nCode\npacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse, spNetwork, classInt, viridis)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-NKDE.html#data-import-and-preparation",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-NKDE.html#data-import-and-preparation",
    "title": "Network Constrained Spatial Point Patterns Analysis",
    "section": "Data Import and Preparation",
    "text": "Data Import and Preparation\n\n\nCode\nnetwork &lt;- st_read(dsn=\"data/geospatial\",                   layer=\"Punggol_St\")\n\n\nReading layer `Punggol_St' from data source \n  `C:\\glimjw\\IS415-GAA\\In-class_Ex\\In-class_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\nCode\nchildcare &lt;- st_read(dsn=\"data/geospatial\",\n                     layer=\"Punggol_CC\")\n\n\nReading layer `Punggol_CC' from data source \n  `C:\\glimjw\\IS415-GAA\\In-class_Ex\\In-class_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n\n\nWe can examine the structure of the output SpatialDataFrame in RStudio. Alternative, code chunk below can be used to print the content of network SpatialLineDataFrame and childcare SpatialPointsDataFrame by using the code chunk below.\n\n\nCode\nstr(network)\n\n\nClasses 'sf' and 'data.frame':  2642 obs. of  3 variables:\n $ LINK_ID : num  1.16e+08 1.16e+08 1.16e+08 1.16e+08 1.16e+08 ...\n $ ST_NAME : chr  \"PUNGGOL RD\" \"PONGGOL TWENTY-FOURTH AVE\" \"PONGGOL SEVENTEENTH AVE\" \"PONGGOL SEVENTEENTH AVE\" ...\n $ geometry:sfc_LINESTRING of length 2642; first list element:  'XY' num [1:2, 1:2] 36547 36559 44575 44614\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA\n  ..- attr(*, \"names\")= chr [1:2] \"LINK_ID\" \"ST_NAME\"\n\n\nCode\nstr(childcare)\n\n\nClasses 'sf' and 'data.frame':  61 obs. of  2 variables:\n $ Name    : chr  \"kml_10\" \"kml_99\" \"kml_100\" \"kml_101\" ...\n $ geometry:sfc_POINT of length 61; first list element:  'XYZ' num  36174 42550 0\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA\n  ..- attr(*, \"names\")= chr \"Name\"\n\n\nWhen I exploring spNetwork’s functions, it came to my attention that spNetwork is expecting the geospatial data contains complete CRS information.\nIn the code chunk below, spTransform() of sp package is used to assign EPSG code to the SpatialDataFrames. The epsg:3414 is the code for svy21.\nPlot - static map View - interactive map (zoom in and out)\n\n\nCode\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots() +\n  tm_shape(network) +\n  tm_lines()\n\n\n\n\n\n\n\nCode\ntmap_mode('plot')\n\n\n\n\nCode\nlixels &lt;- lixelize_lines(network, 750, mindist = 375)\n\n\nmindist is the middle dist\n\n\nCode\nsamples &lt;- lines_center(lixels)\n\n\n\n\nCode\ndensities &lt;- nkde(network, events = childcare, w = rep(1,nrow(childcare)), samples = samples, kernel_name = \"quartic\", bw = 300, div= \"bw\", method= \"simple\", digits = 1, tol = 1, grid_shape = c(1,1), max_depth = 8, agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html",
    "title": "Hands-on-Exercise 5.2: Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to compute Global and Local Measure of Spatial Autocorrelation (GLSA) by using spdep package. By the end to this hands-on exercise, you will be able to:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute Global Spatial Autocorrelation (GSA) statistics by using appropriate functions of spdep package,\n\nplot Moran scatterplot,\ncompute and plot spatial correlogram using appropriate function of spdep package.\n\ncompute Local Indicator of Spatial Association (LISA) statistics for detecting clusters and outliers by using appropriate functions spdep package;\ncompute Getis-Ord’s Gi-statistics for detecting hot spot or/and cold spot area by using appropriate functions of spdep package; and\nto visualise the analysis output by using tmap package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#overview",
    "title": "Hands-on-Exercise 5.2: Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to compute Global and Local Measure of Spatial Autocorrelation (GLSA) by using spdep package. By the end to this hands-on exercise, you will be able to:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute Global Spatial Autocorrelation (GSA) statistics by using appropriate functions of spdep package,\n\nplot Moran scatterplot,\ncompute and plot spatial correlogram using appropriate function of spdep package.\n\ncompute Local Indicator of Spatial Association (LISA) statistics for detecting clusters and outliers by using appropriate functions spdep package;\ncompute Getis-Ord’s Gi-statistics for detecting hot spot or/and cold spot area by using appropriate functions of spdep package; and\nto visualise the analysis output by using tmap package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#getting-started",
    "title": "Hands-on-Exercise 5.2: Local Measures of Spatial Autocorrelation",
    "section": "10.2 Getting Started",
    "text": "10.2 Getting Started\n\n10.2.1 The analytical question\nIn spatial policy, one of the main development objective of the local govenment and planners is to ensure equal distribution of development in the province. Our task in this study, hence, is to apply appropriate spatial statistical methods to discover if development are even distributed geographically. If the answer is No. Then, our next question will be “is there sign of spatial clustering?”. And, if the answer for this question is yes, then our next question will be “where are these clusters?”\nIn this case study, we are interested to examine the spatial pattern of a selected development indicator (i.e. GDP per capita) of Hunan Provice, People Republic of China.(https://en.wikipedia.org/wiki/Hunan)\n\n\n10.2.2 The Study Area and Data\nTwo data sets will be used in this hands-on exercise, they are:\n\nHunan province administrative boundary layer at county level. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012.\n\n\n\n10.2.3 Setting the Analytical Toolls\nBefore we get started, we need to ensure that spdep, sf, tmap and tidyverse packages of R are currently installed in your R.\n\nsf is use for importing and handling geospatial data in R,\ntidyverse is mainly use for wrangling attribute data in R,\nspdep will be used to compute spatial weights, global and local spatial autocorrelation statistics, and\ntmap will be used to prepare cartographic quality chropleth map.\n\nThe code chunk below is used to perform the following tasks:\n\ncreating a package list containing the necessary R packages,\nchecking if the R packages in the package list have been installed in R,\n\nif they have yet to be installed, RStudio will installed the missing packages,\n\nlaunching the packages into R environment.\n\n\npacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#getting-the-data-into-r-environment",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#getting-the-data-into-r-environment",
    "title": "Hands-on-Exercise 5.2: Local Measures of Spatial Autocorrelation",
    "section": "10.3 Getting the Data Into R Environment",
    "text": "10.3 Getting the Data Into R Environment\nIn this section, you will learn how to bring a geospatial data and its associated attribute table into R environment. The geospatial data is in ESRI shapefile format and the attribute table is in csv fomat.\n\n10.3.1 Import shapefile into r environment\nThe code chunk below uses st_read() of sf package to import Hunan shapefile into R. The imported shapefile will be simple features Object of sf.\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\glimjw\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n10.3.2 Import csv file into r environment\nNext, we will import Hunan_2012.csv into R by using read_csv() of readr package. The output is R data frame class.\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n10.3.3 Performing relational join\nThe code chunk below will be used to update the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of dplyr package.\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\n\n10.3.4 Visualising Regional Development Indicator\nNow, we are going to prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#global-spatial-autocorrelation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#global-spatial-autocorrelation",
    "title": "Hands-on-Exercise 5.2: Local Measures of Spatial Autocorrelation",
    "section": "10.4 Global Spatial Autocorrelation",
    "text": "10.4 Global Spatial Autocorrelation\nIn this section, you will learn how to compute global spatial autocorrelation statistics and to perform spatial complete randomness test for global spatial autocorrelation.\n\n10.4.1 Computing Contiguity Spatial Weights\nBefore we can compute the global spatial autocorrelation statistics, we need to construct a spatial weights of the study area. The spatial weights is used to define the neighbourhood relationships between the geographical units (i.e. county) in the study area.\nIn the code chunk below, poly2nb() of spdep package is used to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. If you look at the documentation you will see that you can pass a “queen” argument that takes TRUE or FALSE as options. If you do not specify this argument the default is set to TRUE, that is, if you don’t specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.\nMore specifically, the code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one neighbours.\n\n\n10.4.2 Row-standardised weights matrix\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors’ values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\nThe input of nb2listw() must be an object of class nb. The syntax of the function has two major arguments, namely style and zero.poly.\n\nstyle can take values “W”, “B”, “C”, “U”, “minmax” and “S”. B is the basic binary coding, W is row standardised (sums over all links to n), C is globally standardised (sums over all links to n), U is equal to C divided by the number of neighbours (sums over all links to unity), while S is the variance-stabilizing coding scheme proposed by Tiefelsdorf et al. 1999, p. 167-168 (sums over all links to n).\nIf zero policy is set to TRUE, weights vectors of zero length are inserted for regions without neighbour in the neighbours list. These will in turn generate lag values of zero, equivalent to the sum of products of the zero row t(rep(0, length=length(neighbours))) %*% x, for arbitrary numerical vector x of length length(neighbours). The spatially lagged value of x for the zero-neighbour region will then be zero, which may (or may not) be a sensible choice.\n\n\n\n10.4.3 Global Spatial Autocorrelation: Moran’s I\nIn this section, you will learn how to perform Moran’s I statistics testing by using moran.test() of spdep.\n\n\n10.4.4 Maron’s I test\nThe code chunk below performs Moran’s I statistical testing using moran.test() of spdep.\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\nQuestion: What statistical conclusion can you draw from the output above?\n\nWe can confidently reject the null hypothesis of spatial randomness and conclude that there is a positive spatial autocorrelation in the distribution of hunan$GDPPC values in the geographic area under consideration.\n\n\n\n10.4.4.1 Computing Monte Carlo Moran’s I\nThe code chunk below performs permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\nQuestion: What statistical conclustion can you draw from the output above?\n\nThe small p-value (0.001) provides strong evidence against the null hypothesis of spatial randomness. Therefore, based on the Monte Carlo simulation, we can conclude that there is a statistically significant positive spatial autocorrelation in the distribution of hunan$GDPPC values in the geographic area under consideration.\n\n\n\n\n10.4.4.2 Visualising Monte Carlo Moran’s I\nIt is always a good practice for us the examine the simulated Moran’s I test statistics in greater detail. This can be achieved by plotting the distribution of the statistical values as a histogram by using the code chunk below.\nIn the code chunk below hist() and abline() of R Graphics are used.\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\nQuestion: What statistical observation can you draw from the output above?\n\nThe mean close to zero indicates that, on average, the simulated Moran’s I statistics tend to be centered around zero.\n\n\n\n\n\n10.4.5 Global Spatial Autocorrelation: Geary’s\nIn this section, you will learn how to perform Geary’s c statistics testing by using appropriate functions of spdep package.\n\n10.4.5.1 Geary’s C test\nThe code chunk below performs Geary’s C test for spatial autocorrelation by using geary.test() of spdep.\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\nQuestion: What statistical conclusion can you draw from the output above?\n\nThe Geary C statistic is a measure of spatial autocorrelation. In this case, the observed Geary C statistic is 0.6907, and the associated p-value is very small (0.0001526). The small p-value indicates that there is evidence to reject the null hypothesis of no spatial autocorrelation.\n\n\n\n\n10.4.5.2 Computing Monte Carlo Geary’s C\nThe code chunk below performs permutation test for Geary’s C statistic by using geary.mc() of spdep.\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\nQuestion: What statistical conclusion can you draw from the output above?\n\nThe Geary C test results, along with the Monte Carlo simulation, continue to support the conclusion that the spatial distribution of the variable (GDPPC) exhibits significant positive spatial autocorrelation. The expectation being greater than the observed statistic indicates that similar values are clustered together in space\n\n\n\n\n10.4.5.3 Visualising the Monte Carlo Geary’s C\nNext, we will plot a histogram to reveal the distribution of the simulated values by using the code chunk below.\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\") \n\n\n\n\n\nQuestion: What statistical observation can you draw from the output?\n\nThe mean of the simulated Geary C values is close to 1. This is consistent with the expected value of 1 under the null hypothesis of complete spatial randomness (CSR)\nThe distribution of simulated values is centered around 1, which is expected under CSR\nThe observed Geary C statistic of 1 falls within the range of simulated values, indicating that the observed spatial pattern is consistent with the null hypothesis"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#spatial-correlogram",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#spatial-correlogram",
    "title": "Hands-on-Exercise 5.2: Local Measures of Spatial Autocorrelation",
    "section": "10.5 Spatial Correlogram",
    "text": "10.5 Spatial Correlogram\nSpatial correlograms are great to examine patterns of spatial autocorrelation in your data or model residuals. They show how correlated are pairs of spatial observations when you increase the distance (lag) between them - they are plots of some index of autocorrelation (Moran’s I or Geary’s c) against distance.Although correlograms are not as fundamental as variograms (a keystone concept of geostatistics), they are very useful as an exploratory and descriptive tool. For this purpose they actually provide richer information than variograms.\n\n10.5.1 Compute Moran’s I correlogram\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. The plot() of base Graph is then used to plot the output.\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\nBy plotting the output might not allow us to provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important for us to examine the full analysis report by printing out the analysis results as in the code chunk below.\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nQuestion: What statistical observation can you draw from the plot above?\n\nThe spatial correlogram reveals the presence of spatial autocorrelation in the variable hunan$GDPPC at different distance lags. The significance codes indicate the strength and significance of the autocorrelation at each lag. The interpretation of these results depends on the specific values and patterns observed in the correlogram.\n\n\n\n\n10.5.2 Compute Geary’s C correlogram and plot\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary’s C. The plot() of base Graph is then used to plot the output.\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\nSimilar to the previous step, we will print out the analysis report by using the code chunk below.\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#cluster-and-outlier-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#cluster-and-outlier-analysis",
    "title": "Hands-on-Exercise 5.2: Local Measures of Spatial Autocorrelation",
    "section": "10.6 Cluster and Outlier Analysis",
    "text": "10.6 Cluster and Outlier Analysis\nLocal Indicators of Spatial Association or LISA are statistics that evaluate the existence of clusters in the spatial arrangement of a given variable. For instance if we are studying cancer rates among census tracts in a given city local clusters in the rates mean that there are areas that have higher or lower rates than is to be expected by chance alone; that is, the values occurring are above or below those of a random distribution in space.\nIn this section, you will learn how to apply appropriate Local Indicators for Spatial Association (LISA), especially local Moran’I to detect cluster and/or outlier from GDP per capita 2012 of Hunan Province, PRC.\n\n10.6.1 Computing local Moran’s I\nTo compute local Moran’s I, the localmoran() function of spdep will be used. It computes Ii values, given a set of zi values and a listw object providing neighbour weighting information for the polygon associated with the zi values.\nThe code chunks below are used to compute local Moran’s I of GDPPC2012 at the county level.\n\nfips &lt;- order(hunan$County)\nlocalMI &lt;- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\nlocalmoran() function returns a matrix of values whose columns are:\n\nIi: the local Moran’s I statistics\nE.Ii: the expectation of local moran statistic under the randomisation hypothesis\nVar.Ii: the variance of local moran statistic under the randomisation hypothesis\nZ.Ii:the standard deviate of local moran statistic\nPr(): the p-value of local moran statistic\n\nThe code chunk below list the content of the local Moran matrix derived by using printCoefmat().\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\n10.6.1.1 Mapping the local Moran’s I\nBefore mapping the local Moran’s I map, it is wise to append the local Moran’s I dataframe (i.e. localMI) onto hunan SpatialPolygonDataFrame. The code chunks below can be used to perform the task. The out SpatialPolygonDataFrame is called hunan.localMI.\n\nhunan.localMI &lt;- cbind(hunan,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n\n10.6.1.2 Mapping local Moran’s I values\nUsing choropleth mapping functions of tmap package, we can plot the local Moran’s I values by using the code chinks below.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n10.6.1.3 Mapping local Moran’s I p-values\nThe choropleth shows there is evidence for both positive and negative Ii values. However, it is useful to consider the p-values for each of these values, as consider above.\nThe code chunks below produce a choropleth map of Moran’s I p-values by using functions of tmap package.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n10.6.1.4 Mapping both local Moran’s I values and p-values\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#creating-a-lisa-cluster-map",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#creating-a-lisa-cluster-map",
    "title": "Hands-on-Exercise 5.2: Local Measures of Spatial Autocorrelation",
    "section": "10.7 Creating a LISA Cluster Map",
    "text": "10.7 Creating a LISA Cluster Map\nThe LISA Cluster Map shows the significant locations color coded by type of spatial autocorrelation. The first step before we can generate the LISA cluster map is to plot the Moran scatterplot.\n\n10.7.1 Plotting Moran scatterplot\nThe Moran scatterplot is an illustration of the relationship between the values of the chosen attribute at each location and the average value of the same attribute at neighboring locations.\nThe code chunk below plots the Moran scatterplot of GDPPC 2012 by using moran.plot() of spdep.\n\nnci &lt;- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\nNotice that the plot is split in 4 quadrants. The top right corner belongs to areas that have high GDPPC and are surrounded by other areas that have the average level of GDPPC. This are the high-high locations in the lesson slide.\n\n\n10.7.2 Plotting Moran scatterplot with standardised variable\nFirst we will use scale() to centers and scales the variable. Here centering is done by subtracting the mean (omitting NAs) the corresponding columns, and scaling is done by dividing the (centered) variable by their standard deviations.\n\nhunan$Z.GDPPC &lt;- scale(hunan$GDPPC) %&gt;% \n  as.vector \n\nThe as.vector() added to the end is to make sure that the data type we get out of this is a vector, that map neatly into out dataframe.\nNow, we are ready to plot the Moran scatterplot again by using the code chunk below.\n\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n10.7.3 Preparing LISA map classes\nThe code chunks below show the steps to prepare a LISA cluster map.\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\nNext, derives the spatially lagged variable of interest (i.e. GDPPC) and centers the spatially lagged variable around its mean.\n\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\nThis is follow by centering the local Moran’s around the mean.\n\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\nNext, we will set a statistical significance level for the local Moran.\n\nsignif &lt;- 0.05       \n\nThese four command lines define the low-low (1), low-high (2), high-low (3) and high-high (4) categories.\n\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4      \n\nLastly, places non-significant Moran in the category 0.\n\nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\nIn fact, we can combined all the steps into one single code chunk as shown below:\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I &lt;- localMI[,1]   \nsignif &lt;- 0.05       \nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4    \nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\n\n10.7.4 Plotting LISA map\nNow, we can build the LISA map by using the code chunks below.\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)\n\n\n\n\n\nQuestion: What statistical observations can you draw from the LISA map above?"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#hot-spot-and-cold-spot-area-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Hands-on-Exercise 5.2: Local Measures of Spatial Autocorrelation",
    "section": "10.8 Hot Spot and Cold Spot Area Analysis",
    "text": "10.8 Hot Spot and Cold Spot Area Analysis\nBeside detecting cluster and outliers, localised spatial statistics can be also used to detect hot spot and/or cold spot areas.\nThe term ‘hot spot’ has been used generically across disciplines to describe a region or value that is higher relative to its surroundings (Lepers et al 2005, Aben et al 2012, Isobe et al 2015).\n\n10.8.1 Getis and Ord’s G-Statistics\nAn alternative spatial statistics to detect spatial anomalies is the Getis and Ord’s G-statistics (Getis and Ord, 1972; Ord and Getis, 1995). It looks at neighbours within a defined proximity to identify where either high or low values clutser spatially. Here, statistically significant hot-spots are recognised as areas of high values where other areas within a neighbourhood range also share high values too.\nThe analysis consists of three steps:\n\nDeriving spatial weight matrix\nComputing Gi statistics\nMapping Gi statistics\n\n\n\n10.8.2 Deriving distance-based weight matrix\nFirst, we need to define a new set of neighbours. Whist the spatial autocorrelation considered units which shared borders, for Getis-Ord we are defining neighbours based on distance.\nThere are two type of distance-based proximity matrix, they are:\n\nfixed distance weight matrix; and\nadaptive distance weight matrix.\n\n\n10.8.2.1 Deriving the centroid\nWe will need points to associate with each polygon before we can make our connectivity graph. It will be a little more complicated than just running st_centroid() on the sf object: us.bound. We need the coordinates in a separate data frame for this to work. To do this we will use a mapping function. The mapping function applies a given function to each element of a vector and returns a vector of the same length. Our input vector will be the geometry column of us.bound. Our function will be st_centroid(). We will be using map_dbl variation of map from the purrr package. For more documentation, check out map documentation\nTo get our longitude values we map the st_centroid() function over the geometry column of us.bound and access the longitude value through double bracket notation [[]] and 1. This allows us to get only the longitude, which is the first value in each centroid.\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\nWe do the same for latitude with one key difference. We access the second value per each centroid with [[2]].\n\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\nNow that we have latitude and longitude, we use cbind to put longitude and latitude into the same object.\n\ncoords &lt;- cbind(longitude, latitude)\n\n\n\n10.8.2.2 Determine the cut-off distance\nFirstly, we need to determine the upper limit for distance band by using the steps below:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\n#coords &lt;- coordinates(hunan)\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\n\n10.8.2.3 Computing fixed distance weight matrix\nNow, we will compute the distance weight matrix by using dnearneigh() as shown in the code chunk below.\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\nThe output spatial weights object is called wm62_lw.\n\n\n\n10.8.3 Computing adaptive distance weight matrix\nOne of the characteristics of fixed distance weight matrix is that more densely settled areas (usually the urban areas) tend to have more neighbours and the less densely settled areas (usually the rural counties) tend to have lesser neighbours. Having many neighbours smoothes the neighbour relationship across more neighbours.\nIt is possible to control the numbers of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry as shown in the code chunk below.\n\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#computing-gi-statistics",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_2.html#computing-gi-statistics",
    "title": "Hands-on-Exercise 5.2: Local Measures of Spatial Autocorrelation",
    "section": "10.9 Computing Gi statistics",
    "text": "10.9 Computing Gi statistics\n\n10.9.1 Gi statistics using fixed distance\n\nfips &lt;- order(hunan$County)\ngi.fixed &lt;- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe output of localG() is a vector of G or Gstar values, with attributes “gstari” set to TRUE or FALSE, “call” set to the function call, and class “localG”.\nThe Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\nNext, we will join the Gi values to their corresponding hunan sf data frame by using the code chunk below.\n\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\nIn fact, the code chunk above performs three tasks. First, it convert the output vector (i.e. gi.fixed) into r matrix object by using as.matrix(). Next, cbind() is used to join hunan@data and gi.fixed matrix to produce a new SpatialPolygonDataFrame called hunan.gi. Lastly, the field name of the gi values is renamed to gstat_fixed by using rename().\n\n\n10.9.2 Mapping Gi values with fixed distance weights\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\n\n\n\n\n\n10.9.3 Gi statistics using adaptive distance\nThe code chunk below are used to compute the Gi values for GDPPC2012 by using an adaptive distance weight matrix (i.e knb_lw).\n\nfips &lt;- order(hunan$County)\ngi.adaptive &lt;- localG(hunan$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n\n10.9.4 Mapping Gi values with adaptive distance weights\nIt is time for us to visualise the locations of hot spot and cold spot areas. The choropleth mapping functions of tmap package will be used to map the Gi values.\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc&lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on-Exercise 4: Spatial Weights and Applications",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to compute spatial weights using R. By the end to this hands-on exercise, you will be able to:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute spatial weights using appropriate functions of spdep package, and\ncalculate spatially lagged variables using appropriate functions of spdep package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#overview",
    "title": "Hands-on-Exercise 4: Spatial Weights and Applications",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to compute spatial weights using R. By the end to this hands-on exercise, you will be able to:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute spatial weights using appropriate functions of spdep package, and\ncalculate spatially lagged variables using appropriate functions of spdep package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#the-study-area-and-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#the-study-area-and-data",
    "title": "Hands-on-Exercise 4: Spatial Weights and Applications",
    "section": "8.2 The Study Area and Data",
    "text": "8.2 The Study Area and Data\nTwo data sets will be used in this hands-on exercise, they are:\n\nHunan county boundary layer. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012.\n\n\n8.2.1 Getting Started\nBefore we get started, we need to ensure that spdep, sf, tmap and tidyverse packages of R are currently installed in your R.\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-the-data-into-r-environment",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-the-data-into-r-environment",
    "title": "Hands-on-Exercise 4: Spatial Weights and Applications",
    "section": "8.3 Getting the Data Into R Environment",
    "text": "8.3 Getting the Data Into R Environment\nIn this section, you will learn how to bring a geospatial data and its associated attribute table into R environment. The geospatial data is in ESRI shapefile format and the attribute table is in csv fomat.\n\n8.3.1 Import shapefile into r environment\nThe code chunk below uses st_read() of sf package to import Hunan shapefile into R. The imported shapefile will be simple features Object of sf.\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\glimjw\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex04\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n8.3.2 Import csv file into r environment\nNext, we will import Hunan_2012.csv into R by using read_csv() of readr package. The output is R dataframe class.\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n8.3.3 Performing relational join\nThe code chunk below will be used to update the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of dplyr package.\n\nhunan &lt;- left_join(hunan,hunan2012)%&gt;%\n  select(1:4, 7, 15)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regional-development-indicator",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-regional-development-indicator",
    "title": "Hands-on-Exercise 4: Spatial Weights and Applications",
    "section": "8.4 Visualising Regional Development Indicator",
    "text": "8.4 Visualising Regional Development Indicator\nNow, we are going to prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\nbasemap &lt;- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.5)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-contiguity-spatial-weights",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-contiguity-spatial-weights",
    "title": "Hands-on-Exercise 4: Spatial Weights and Applications",
    "section": "8.5 Computing Contiguity Spatial Weights",
    "text": "8.5 Computing Contiguity Spatial Weights\nIn this section, you will learn how to use poly2nb() of spdep package to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. If you look at the documentation you will see that you can pass a “queen” argument that takes TRUE or FALSE as options. If you do not specify this argument the default is set to TRUE, that is, if you don’t specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.\n\n8.5.1 Computing (QUEEN) contiguity based neighbours\nThe code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q &lt;- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one heighbours.\nFor each polygon in our polygon object, wm_q lists all neighboring polygons. For example, to see the neighbors for the first polygon in the object, type:\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\n\nPolygon 1 has 5 neighbors. The numbers represent the polygon IDs as stored in hunan SpatialPolygonsDataFrame class.\nWe can retrive the county name of Polygon ID=1 by using the code chunk below:\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n\nThe output reveals that Polygon ID=1 is Anxiang county.\nTo reveal the county names of the five neighboring polygons, the code chunk will be used:\n\nhunan$NAME_3[c(2,3,4,57,85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\nWe can retrieve the GDPPC of these five countries by using the code chunk below.\n\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nThe printed output above shows that the GDPPC of the five nearest neighbours based on Queen’s method are 20981, 34592, 24473, 21311 and 22879 respectively.\nYou can display the complete weight matrix by using str().\n\nstr(wm_q)\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE\n\n\nBe warned: The output might cut across several pages. Save the trees if you are going to print out the report.\n\n\n8.5.2 Creating (ROOK) contiguity based neighbours\nThe code chunk below is used to compute Rook contiguity weight matrix.\n\nwm_r &lt;- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connect area unit has 10 neighbours. There are two area units with only one heighbours.\n\n\n8.5.3 Visualising contiguity weights\nA connectivity graph takes a point and displays a line to each neighboring point. We are working with polygons at the moment, so we will need to get points in order to make our connectivity graphs. The most typically method for this will be polygon centroids. We will calculate these in the sf package before moving onto the graphs. Getting Latitude and Longitude of Polygon Centroids\nWe will need points to associate with each polygon before we can make our connectivity graph. It will be a little more complicated than just running st_centroid on the sf object: us.bound. We need the coordinates in a separate data frame for this to work. To do this we will use a mapping function. The mapping function applies a given function to each element of a vector and returns a vector of the same length. Our input vector will be the geometry column of us.bound. Our function will be st_centroid. We will be using map_dbl variation of map from the purrr package. For more documentation, check out map documentation\nTo get our longitude values we map the st_centroid function over the geometry column of us.bound and access the longitude value through double bracket notation [[]] and 1. This allows us to get only the longitude, which is the first value in each centroid.\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\nWe do the same for latitude with one key difference. We access the second value per each centroid with [[2]].\n\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\nNow that we have latitude and longitude, we use cbind to put longitude and latitude into the same object.\n\ncoords &lt;- cbind(longitude, latitude)\n\nWe check the first few observations to see if things are formatted correctly.\n\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\n8.5.3.1 Plotting Queen contiguity based neighbours map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\n\n8.5.3.2 Plotting Rook contiguity based neighbours map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n8.5.3.3 Plotting both Queen and Rook contiguity based neighbours maps\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"Queen Contiguity\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\nplot(hunan$geometry, border=\"lightgrey\", main=\"Rook Contiguity\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-distance-based-neighbours",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#computing-distance-based-neighbours",
    "title": "Hands-on-Exercise 4: Spatial Weights and Applications",
    "section": "8.6 Computing distance based neighbours",
    "text": "8.6 Computing distance based neighbours\nIn this section, you will learn how to derive distance-based weight matrices by using dnearneigh() of spdep package.\nThe function identifies neighbours of region points by Euclidean distance with a distance band with lower d1= and upper d2= bounds controlled by the bounds= argument. If unprojected coordinates are used and either specified in the coordinates object x or with x as a two column matrix and longlat=TRUE, great circle distances in km will be calculated assuming the WGS84 reference ellipsoid.\n\n8.6.1 Determine the cut-off distance\nFirstly, we need to determine the upper limit for distance band by using the steps below:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\n#coords &lt;- coordinates(hunan)\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nThe summary report shows that the largest first nearest neighbour distance is 61.79 km, so using this as the upper threshold gives certainty that all units will have at least one neighbour.\n\n\n8.6.2 Computing fixed distance weight matrix\nNow, we will compute the distance weight matrix by using dnearneigh() as shown in the code chunk below.\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nQuiz: What is the meaning of “Average number of links: 3.681818” shown above?\nThe “Average number of links: 3.681818” means that, on average, each region (or unit) in your spatial dataset is connected to approximately 3.68 other regions. These connections or links represent spatial relationships or interactions between neighboring regions.\nNext, we will use str() to display the content of wm_d62 weight matrix.\n\nstr(wm_d62)\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n\n\nAnother way to display the structure of the weight matrix is to combine table() and card() of spdep.\n\ntable(hunan$County, card(wm_d62))\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0\n\n\n\nn_comp &lt;- n.comp.nb(wm_d62)\nn_comp$nc\n\n[1] 1\n\n\n\ntable(n_comp$comp.id)\n\n\n 1 \n88 \n\n\n\n8.6.2.1 Plotting fixed distance weight matrix\nNext, we will plot the distance weight matrix by using the code chunk below.\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE)\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\n\n\n\n\nThe red lines show the links of 1st nearest neighbours and the black lines show the links of neighbours within the cut-off distance of 62km.\nAlternatively, we can plot both of them next to each other by using the code chunk below.\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"1st nearest neighbours\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\nplot(hunan$geometry, border=\"lightgrey\", main=\"Distance link\")\nplot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6)\n\n\n\n\n\n\n\n8.6.3 Computing adaptive distance weight matrix\nOne of the characteristics of fixed distance weight matrix is that more densely settled areas (usually the urban areas) tend to have more neighbours and the less densely settled areas (usually the rural counties) tend to have lesser neighbours. Having many neighbours smoothes the neighbour relationship across more neighbours.\nIt is possible to control the numbers of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry as shown in the code chunk below.\n\nknn6 &lt;- knn2nb(knearneigh(coords, k=6))\nknn6\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\nSimilarly, we can display the content of the matrix by using str().\n\nstr(knn6)\n\nList of 88\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n $ : int [1:6] 9 66 67 71 74 84\n $ : int [1:6] 9 46 47 78 80 86\n $ : int [1:6] 8 46 66 68 84 86\n $ : int [1:6] 16 19 22 70 72 73\n $ : int [1:6] 10 14 16 17 70 72\n $ : int [1:6] 13 15 60 61 63 83\n $ : int [1:6] 12 15 60 61 63 83\n $ : int [1:6] 11 15 16 17 72 83\n $ : int [1:6] 12 13 14 17 60 83\n $ : int [1:6] 10 11 17 22 72 83\n $ : int [1:6] 10 11 14 16 72 83\n $ : int [1:6] 20 22 23 63 77 83\n $ : int [1:6] 10 20 21 73 74 82\n $ : int [1:6] 18 19 21 22 23 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:6] 10 16 18 19 20 83\n $ : int [1:6] 18 20 41 77 79 82\n $ : int [1:6] 25 28 31 52 54 81\n $ : int [1:6] 24 28 31 33 54 81\n $ : int [1:6] 25 27 29 33 42 81\n $ : int [1:6] 26 29 30 37 42 81\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:6] 26 27 37 42 43 81\n $ : int [1:6] 26 27 28 33 49 81\n $ : int [1:6] 24 25 36 39 40 54\n $ : int [1:6] 24 31 50 54 55 56\n $ : int [1:6] 25 26 28 30 49 81\n $ : int [1:6] 36 40 41 45 56 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:6] 26 27 29 42 43 44\n $ : int [1:6] 23 43 44 62 77 79\n $ : int [1:6] 25 40 42 43 44 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:6] 26 27 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:6] 37 38 39 42 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:6] 8 9 35 47 78 86\n $ : int [1:6] 8 21 35 46 80 86\n $ : int [1:6] 49 50 51 52 53 55\n $ : int [1:6] 28 33 48 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:6] 28 48 49 50 52 54\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:6] 48 50 51 52 55 75\n $ : int [1:6] 24 28 49 50 51 52\n $ : int [1:6] 32 48 50 52 53 75\n $ : int [1:6] 32 34 36 78 80 85\n $ : int [1:6] 1 2 3 58 64 68\n $ : int [1:6] 2 57 64 66 68 78\n $ : int [1:6] 12 13 60 61 87 88\n $ : int [1:6] 12 13 59 61 63 87\n $ : int [1:6] 12 13 60 62 63 87\n $ : int [1:6] 12 38 61 63 77 87\n $ : int [1:6] 12 18 60 61 62 83\n $ : int [1:6] 1 3 57 58 68 76\n $ : int [1:6] 58 64 66 67 68 76\n $ : int [1:6] 9 58 67 68 76 84\n $ : int [1:6] 7 65 66 68 76 84\n $ : int [1:6] 9 57 58 66 78 84\n $ : int [1:6] 4 5 6 32 75 85\n $ : int [1:6] 10 16 19 22 72 73\n $ : int [1:6] 7 19 73 74 84 86\n $ : int [1:6] 10 11 14 16 17 70\n $ : int [1:6] 10 19 21 70 71 74\n $ : int [1:6] 19 21 71 73 84 86\n $ : int [1:6] 6 32 50 53 55 69\n $ : int [1:6] 58 64 65 66 67 68\n $ : int [1:6] 18 23 38 61 62 63\n $ : int [1:6] 2 8 9 46 58 68\n $ : int [1:6] 38 40 41 43 44 45\n $ : int [1:6] 34 35 36 41 45 47\n $ : int [1:6] 25 26 28 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:6] 12 13 15 16 22 63\n $ : int [1:6] 7 9 66 68 71 74\n $ : int [1:6] 2 3 4 5 56 69\n $ : int [1:6] 8 9 21 46 47 74\n $ : int [1:6] 59 60 61 62 63 88\n $ : int [1:6] 59 60 61 62 63 87\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n\n\nNotice that each county has six neighbours, no less no more!\n\n8.6.3.1 Plotting distance based neighbours\nWe can plot the weight matrix using the code chunk below.\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#weights-based-on-idw",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#weights-based-on-idw",
    "title": "Hands-on-Exercise 4: Spatial Weights and Applications",
    "section": "8.7 Weights based on IDW",
    "text": "8.7 Weights based on IDW\nIn this section, you will learn how to derive a spatial weight matrix based on Inversed Distance method.\nFirst, we will compute the distances between areas by using nbdists() of spdep.\n\ndist &lt;- nbdists(wm_q, coords, longlat = TRUE)\nids &lt;- lapply(dist, function(x) 1/(x))\nids\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n[[2]]\n[1] 0.01535405 0.01764308 0.01925924 0.02323898 0.01719350\n\n[[3]]\n[1] 0.03916350 0.02822040 0.03695795 0.01395765\n\n[[4]]\n[1] 0.01820896 0.02822040 0.03414741 0.01539065\n\n[[5]]\n[1] 0.03695795 0.03414741 0.01524598 0.01618354\n\n[[6]]\n[1] 0.015390649 0.015245977 0.021748129 0.011883901 0.009810297\n\n[[7]]\n[1] 0.01708612 0.01473997 0.01150924 0.01872915\n\n[[8]]\n[1] 0.02022144 0.03453056 0.02529256 0.01036340 0.02284457 0.01500600 0.01515314\n\n[[9]]\n[1] 0.02022144 0.01574888 0.02109502 0.01508028 0.02902705 0.01502980\n\n[[10]]\n[1] 0.02281552 0.01387777 0.01538326 0.01346650 0.02100510 0.02631658 0.01874863\n[8] 0.01500046\n\n[[11]]\n[1] 0.01882869 0.02243492 0.02247473\n\n[[12]]\n[1] 0.02779227 0.02419652 0.02333385 0.02986130 0.02335429\n\n[[13]]\n[1] 0.02779227 0.02650020 0.02670323 0.01714243\n\n[[14]]\n[1] 0.01882869 0.01233868 0.02098555\n\n[[15]]\n[1] 0.02650020 0.01233868 0.01096284 0.01562226\n\n[[16]]\n[1] 0.02281552 0.02466962 0.02765018 0.01476814 0.01671430\n\n[[17]]\n[1] 0.01387777 0.02243492 0.02098555 0.01096284 0.02466962 0.01593341 0.01437996\n\n[[18]]\n[1] 0.02039779 0.02032767 0.01481665 0.01473691 0.01459380\n\n[[19]]\n[1] 0.01538326 0.01926323 0.02668415 0.02140253 0.01613589 0.01412874\n\n[[20]]\n[1] 0.01346650 0.02039779 0.01926323 0.01723025 0.02153130 0.01469240 0.02327034\n\n[[21]]\n[1] 0.02668415 0.01723025 0.01766299 0.02644986 0.02163800\n\n[[22]]\n[1] 0.02100510 0.02765018 0.02032767 0.02153130 0.01489296\n\n[[23]]\n[1] 0.01481665 0.01469240 0.01401432 0.02246233 0.01880425 0.01530458 0.01849605\n\n[[24]]\n[1] 0.02354598 0.01837201 0.02607264 0.01220154 0.02514180\n\n[[25]]\n[1] 0.02354598 0.02188032 0.01577283 0.01949232 0.02947957\n\n[[26]]\n[1] 0.02155798 0.01745522 0.02212108 0.02220532\n\n[[27]]\n[1] 0.02155798 0.02490625 0.01562326\n\n[[28]]\n[1] 0.01837201 0.02188032 0.02229549 0.03076171 0.02039506\n\n[[29]]\n[1] 0.02490625 0.01686587 0.01395022\n\n[[30]]\n[1] 0.02090587\n\n[[31]]\n[1] 0.02607264 0.01577283 0.01219005 0.01724850 0.01229012 0.01609781 0.01139438\n[8] 0.01150130\n\n[[32]]\n[1] 0.01220154 0.01219005 0.01712515 0.01340413 0.01280928 0.01198216 0.01053374\n[8] 0.01065655\n\n[[33]]\n[1] 0.01949232 0.01745522 0.02229549 0.02090587 0.01979045\n\n[[34]]\n[1] 0.03113041 0.03589551 0.02882915\n\n[[35]]\n[1] 0.01766299 0.02185795 0.02616766 0.02111721 0.02108253 0.01509020\n\n[[36]]\n[1] 0.01724850 0.03113041 0.01571707 0.01860991 0.02073549 0.01680129\n\n[[37]]\n[1] 0.01686587 0.02234793 0.01510990 0.01550676\n\n[[38]]\n[1] 0.01401432 0.02407426 0.02276151 0.01719415\n\n[[39]]\n[1] 0.01229012 0.02172543 0.01711924 0.02629732 0.01896385\n\n[[40]]\n[1] 0.01609781 0.01571707 0.02172543 0.01506473 0.01987922 0.01894207\n\n[[41]]\n[1] 0.02246233 0.02185795 0.02205991 0.01912542 0.01601083 0.01742892\n\n[[42]]\n[1] 0.02212108 0.01562326 0.01395022 0.02234793 0.01711924 0.01836831 0.01683518\n\n[[43]]\n[1] 0.01510990 0.02629732 0.01506473 0.01836831 0.03112027 0.01530782\n\n[[44]]\n[1] 0.01550676 0.02407426 0.03112027 0.01486508\n\n[[45]]\n[1] 0.03589551 0.01860991 0.01987922 0.02205991 0.02107101 0.01982700\n\n[[46]]\n[1] 0.03453056 0.04033752 0.02689769\n\n[[47]]\n[1] 0.02529256 0.02616766 0.04033752 0.01949145 0.02181458\n\n[[48]]\n[1] 0.02313819 0.03370576 0.02289485 0.01630057 0.01818085\n\n[[49]]\n[1] 0.03076171 0.02138091 0.02394529 0.01990000\n\n[[50]]\n[1] 0.01712515 0.02313819 0.02551427 0.02051530 0.02187179\n\n[[51]]\n[1] 0.03370576 0.02138091 0.02873854\n\n[[52]]\n[1] 0.02289485 0.02394529 0.02551427 0.02873854 0.03516672\n\n[[53]]\n[1] 0.01630057 0.01979945 0.01253977\n\n[[54]]\n[1] 0.02514180 0.02039506 0.01340413 0.01990000 0.02051530 0.03516672\n\n[[55]]\n[1] 0.01280928 0.01818085 0.02187179 0.01979945 0.01882298\n\n[[56]]\n[1] 0.01036340 0.01139438 0.01198216 0.02073549 0.01214479 0.01362855 0.01341697\n\n[[57]]\n[1] 0.028079221 0.017643082 0.031423501 0.029114131 0.013520292 0.009903702\n\n[[58]]\n[1] 0.01925924 0.03142350 0.02722997 0.01434859 0.01567192\n\n[[59]]\n[1] 0.01696711 0.01265572 0.01667105 0.01785036\n\n[[60]]\n[1] 0.02419652 0.02670323 0.01696711 0.02343040\n\n[[61]]\n[1] 0.02333385 0.01265572 0.02343040 0.02514093 0.02790764 0.01219751 0.02362452\n\n[[62]]\n[1] 0.02514093 0.02002219 0.02110260\n\n[[63]]\n[1] 0.02986130 0.02790764 0.01407043 0.01805987\n\n[[64]]\n[1] 0.02911413 0.01689892\n\n[[65]]\n[1] 0.02471705\n\n[[66]]\n[1] 0.01574888 0.01726461 0.03068853 0.01954805 0.01810569\n\n[[67]]\n[1] 0.01708612 0.01726461 0.01349843 0.01361172\n\n[[68]]\n[1] 0.02109502 0.02722997 0.03068853 0.01406357 0.01546511\n\n[[69]]\n[1] 0.02174813 0.01645838 0.01419926\n\n[[70]]\n[1] 0.02631658 0.01963168 0.02278487\n\n[[71]]\n[1] 0.01473997 0.01838483 0.03197403\n\n[[72]]\n[1] 0.01874863 0.02247473 0.01476814 0.01593341 0.01963168\n\n[[73]]\n[1] 0.01500046 0.02140253 0.02278487 0.01838483 0.01652709\n\n[[74]]\n[1] 0.01150924 0.01613589 0.03197403 0.01652709 0.01342099 0.02864567\n\n[[75]]\n[1] 0.011883901 0.010533736 0.012539774 0.018822977 0.016458383 0.008217581\n\n[[76]]\n[1] 0.01352029 0.01434859 0.01689892 0.02471705 0.01954805 0.01349843 0.01406357\n\n[[77]]\n[1] 0.014736909 0.018804247 0.022761507 0.012197506 0.020022195 0.014070428\n[7] 0.008440896\n\n[[78]]\n[1] 0.02323898 0.02284457 0.01508028 0.01214479 0.01567192 0.01546511 0.01140779\n\n[[79]]\n[1] 0.01530458 0.01719415 0.01894207 0.01912542 0.01530782 0.01486508 0.02107101\n\n[[80]]\n[1] 0.01500600 0.02882915 0.02111721 0.01680129 0.01601083 0.01982700 0.01949145\n[8] 0.01362855\n\n[[81]]\n[1] 0.02947957 0.02220532 0.01150130 0.01979045 0.01896385 0.01683518\n\n[[82]]\n[1] 0.02327034 0.02644986 0.01849605 0.02108253 0.01742892\n\n[[83]]\n[1] 0.023354289 0.017142433 0.015622258 0.016714303 0.014379961 0.014593799\n[7] 0.014892965 0.018059871 0.008440896\n\n[[84]]\n[1] 0.01872915 0.02902705 0.01810569 0.01361172 0.01342099 0.01297994\n\n[[85]]\n [1] 0.011451133 0.017193502 0.013957649 0.016183544 0.009810297 0.010656545\n [7] 0.013416965 0.009903702 0.014199260 0.008217581 0.011407794\n\n[[86]]\n[1] 0.01515314 0.01502980 0.01412874 0.02163800 0.01509020 0.02689769 0.02181458\n[8] 0.02864567 0.01297994\n\n[[87]]\n[1] 0.01667105 0.02362452 0.02110260 0.02058034\n\n[[88]]\n[1] 0.01785036 0.02058034\n\n\n\n8.7.1 Row-standardised weights matrix\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors’ values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\nrswm_q &lt;- nb2listw(wm_q, style=\"W\", zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\nThe zero.policy=TRUE option allows for lists of non-neighbors. This should be used with caution since the user may not be aware of missing neighbors in their dataset however, a zero.policy of FALSE would return an error.\nTo see the weight of the first polygon’s eight neighbors type:\n\nrswm_q$weights[10]\n\n[[1]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n\nEach neighbor is assigned a 0.125 of the total weight. This means that when R computes the average neighboring income values, each neighbor’s income will be multiplied by 0.2 before being tallied.\nUsing the same method, we can also derive a row standardised distance weight matrix by using the code chunk below.\n\nrswm_ids &lt;- nb2listw(wm_q, glist=ids, style=\"B\", zero.policy=TRUE)\nrswm_ids\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn       S0        S1     S2\nB 88 7744 8.786867 0.3776535 3.8137\n\n\n\nrswm_ids$weights[1]\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n\n\nsummary(unlist(rswm_ids$weights))\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.008218 0.015088 0.018739 0.019614 0.022823 0.040338"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#application-of-spatial-weight-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#application-of-spatial-weight-matrix",
    "title": "Hands-on-Exercise 4: Spatial Weights and Applications",
    "section": "8.8 Application of Spatial Weight Matrix",
    "text": "8.8 Application of Spatial Weight Matrix\nIn this section, you will learn how to create four different spatial lagged variables, they are:\n\nspatial lag with row-standardized weights,\nspatial lag as a sum of neighbouring values,\nspatial window average, and\nspatial window sum.\n\n\n8.8.1 Spatial lag with row-standardized weights\nFinally, we’ll compute the average neighbor GDPPC value for each polygon. These values are often referred to as spatially lagged values.\n\nGDPPC.lag &lt;- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\nRecalled in the previous section, we retrieved the GDPPC of these five countries by using the code chunk below.\n\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\n\nQuestion: Can you see the meaning of Spatial lag with row-standardized weights now?\n\nWe can append the spatially lag GDPPC values onto hunan sf data frame by using the code chunk below.\n\nlag.list &lt;- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag.list)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag GDPPC\")\nhunan &lt;- left_join(hunan,lag.res)\n\nThe following table shows the average neighboring income values (stored in the Inc.lag object) for each county.\n\nhead(hunan)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\nNext, we will plot both the GDPPC and spatial lag GDPPC for comparison using the code chunk below.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_gdppc &lt;- qtm(hunan, \"lag GDPPC\")\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n8.8.2 Spatial lag as a sum of neighboring values\nWe can calculate spatial lag as a sum of neighboring values by assigning binary weights. This requires us to go back to our neighbors list, then apply a function that will assign binary weights, then we use glist = in the nb2listw function to explicitly assign these weights.\nWe start by applying a function that will assign a value of 1 per each neighbor. This is done with lapply, which we have been using to manipulate the neighbors structure throughout the past notebooks. Basically it applies a function across each value in the neighbors structure.\n\nb_weights &lt;- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\nWith the proper weights assigned, we can use lag.listw to compute a lag variable from our weight and GDPPC.\n\nlag_sum &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag_sum)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag_sum GDPPC\")\n\nFirst, let us examine the result by using the code chunk below.\n\nlag_sum\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221\n[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324\n[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518\n[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780\n[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356\n[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575\n[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046\n[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300\n[81] 108870 108085 262835 248182 244850 404456  67608  33860\n\n\n\nQuestion: Can you understand the meaning of Spatial lag as a sum of neighboring values now?\n\nNext, we will append the lag_sum GDPPC field into hunan sf data frame by using the code chunk below.\n\nhunan &lt;- left_join(hunan, lag.res)\n\nNow, We can plot both the GDPPC and Spatial Lag Sum GDPPC for comparison using the code chunk below.\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_sum_gdppc &lt;- qtm(hunan, \"lag_sum GDPPC\")\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n8.8.3 Spatial window average\nThe spatial window average uses row-standardized weights and includes the diagonal element. To do this in R, we need to go back to the neighbors structure and add the diagonal element before assigning weights.\nTo add the diagonal element to the neighbour list, we just need to use include.self() from spdep.\n\nwm_qs &lt;- include.self(wm_q)\n\nNotice that the Number of nonzero links, Percentage nonzero weights and Average number of links are 536, 6.921488 and 6.090909 respectively as compared to wm_q of 448, 5.785124 and 5.090909\nLet us take a good look at the neighbour list of area [1] by using the code chunk below.\n\nwm_qs[[1]]\n\n[1]  1  2  3  4 57 85\n\n\nNotice that now [1] has six neighbours instead of five.\nNow we obtain weights with nb2listw()\n\nwm_qs &lt;- nb2listw(wm_qs)\nwm_qs\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\nAgain, we use nb2listw() and glist() to explicitly assign weight values.\nLastly, we just need to create the lag variable from our weight structure and GDPPC variable.\n\nlag_w_avg_gpdpc &lt;- lag.listw(wm_qs, \n                             hunan$GDPPC)\nlag_w_avg_gpdpc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\nNext, we will convert the lag variable listw object into a data.frame by using as.data.frame().\n\nlag.list.wm_qs &lt;- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nlag_wm_qs.res &lt;- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) &lt;- c(\"NAME_3\", \"lag_window_avg GDPPC\")\n\nNote: The third command line on the code chunk above renames the field names of lag_wm_q1.res object into NAME_3 and lag_window_avg GDPPC respectively.\nNext, the code chunk below will be used to append lag_window_avg GDPPC values onto hunan sf data.frame by using left_join() of dplyr package\n\nhunan &lt;- left_join(hunan, lag_wm_qs.res)\n\nTo compare the values of lag GDPPC and Spatial window average, kable() of Knitr package is used to prepare a table using the code chunk below.\n\nhunan %&gt;%\n  select(\"County\", \n         \"lag GDPPC\", \n         \"lag_window_avg GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nLastly, qtm() of tmap package is used to plot the lag_gdppc and w_ave_gdppc maps next to each other for quick comparison.\n\nw_avg_gdppc &lt;- qtm(hunan, \"lag_window_avg GDPPC\")\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)\n\n\n\n\nNote: For more effective comparison, it is advicible to use the core tmap mapping functions.\n\n\n8.8.4 Spatial window sum\nThe spatial window sum is the counter part of the window average, but without using row-standardized weights.\nTo add the diagonal element to the neighbour list, we just need to use include.self() from spdep.\n\nwm_qs &lt;- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\nNext, we will assign binary weights to the neighbour structure that includes the diagonal element.\n\nb_weights &lt;- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n\nNotice that now [1] has six neighbours instead of five.\nAgain, we use nb2listw() and glist() to explicitly assign weight values.\n\nb_weights2 &lt;- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\nWith our new weight structure, we can compute the lag variable with lag.listw().\n\nw_sum_gdppc &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\nNext, we will convert the lag variable listw object into a data.frame by using as.data.frame().\n\nw_sum_gdppc.res &lt;- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) &lt;- c(\"NAME_3\", \"w_sum GDPPC\")\n\nNote: The second command line on the code chunk above renames the field names of w_sum_gdppc.res object into NAME_3 and w_sum GDPPC respectively.\nNext, the code chunk below will be used to append w_sum GDPPC values onto hunan sf data.frame by using left_join() of dplyr package.\n\nhunan &lt;- left_join(hunan, w_sum_gdppc.res)\n\nTo compare the values of lag GDPPC and Spatial window average, kable() of Knitr package is used to prepare a table using the code chunk below.\n\nhunan %&gt;%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nLastly, qtm() of tmap package is used to plot the lag_sum GDPPC and w_sum_gdppc maps next to each other for quick comparison.\n\nw_sum_gdppc &lt;- qtm(hunan, \"w_sum GDPPC\")\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html",
    "title": "Hands-on-Exercise 3.2: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Spatial Point Pattern Analysis is the evaluation of the pattern or distribution, of a set of points on a surface. The point can be location of:\n\nevents such as crime, traffic accident and disease onset, or\nbusiness services (coffee and fastfood outlets) or facilities such as childcare and eldercare.\n\nUsing appropriate functions of spatstat, this hands-on exercise aims to discover the spatial point processes of childecare centres in Singapore.\nThe specific questions we would like to answer are as follows:\n\nare the childcare centres in Singapore randomly distributed throughout the country?\nif the answer is not, then the next logical question is where are the locations with higher concentration of childcare centres?"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#overview",
    "title": "Hands-on-Exercise 3.2: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Spatial Point Pattern Analysis is the evaluation of the pattern or distribution, of a set of points on a surface. The point can be location of:\n\nevents such as crime, traffic accident and disease onset, or\nbusiness services (coffee and fastfood outlets) or facilities such as childcare and eldercare.\n\nUsing appropriate functions of spatstat, this hands-on exercise aims to discover the spatial point processes of childecare centres in Singapore.\nThe specific questions we would like to answer are as follows:\n\nare the childcare centres in Singapore randomly distributed throughout the country?\nif the answer is not, then the next logical question is where are the locations with higher concentration of childcare centres?"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#the-data",
    "title": "Hands-on-Exercise 3.2: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.2 The data",
    "text": "5.2 The data\nTo provide answers to the questions above, three data sets will be used. They are:\n\nCHILDCARE, a point feature data providing both location and attribute information of childcare centres. It was downloaded from Data.gov.sg and is in geojson format.\nMP14_SUBZONE_WEB_PL, a polygon feature data providing information of URA 2014 Master Plan Planning Subzone boundary data. It is in ESRI shapefile format. This data set was also downloaded from Data.gov.sg.\nCostalOutline, a polygon feature data showing the national boundary of Singapore. It is provided by SLA and is in ESRI shapefile format."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#installing-and-loading-the-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#installing-and-loading-the-r-packages",
    "title": "Hands-on-Exercise 3.2: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.3 Installing and Loading the R packages",
    "text": "5.3 Installing and Loading the R packages\nIn this hands-on exercise, five R packages will be used, they are:\n\nsf, a relatively new R package specially designed to import, manage and process vector-based geospatial data in R.\nspatstat, which has a wide range of useful functions for point pattern analysis. In this hands-on exercise, it will be used to perform 1st- and 2nd-order spatial point patterns analysis and derive kernel density estimation (KDE) layer.\nraster which reads, writes, manipulates, analyses and model of gridded spatial data (i.e. raster). In this hands-on exercise, it will be used to convert image output generate by spatstat into raster format.\nmaptools which provides a set of tools for manipulating geographic data. In this hands-on exercise, we mainly use it to convert Spatial objects into ppp format of spatstat.\ntmap which provides functions for plotting cartographic quality static point patterns maps or interactive maps by using leaflet API.\n\nUse the code chunk below to install and launch the five R packages.\n\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\npacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#spatial-data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#spatial-data-wrangling",
    "title": "Hands-on-Exercise 3.2: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.4 Spatial Data Wrangling",
    "text": "5.4 Spatial Data Wrangling\n\n5.4.1 Importing the spatial data\nIn this section, st_read() of sf package will be used to import these three geospatial data sets into R.\n\nchildcare_sf &lt;- st_read(\"data/child-care-services-geojson.geojson\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\glimjw\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex03\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf &lt;- st_read(dsn = \"data/\", \n                layer = \"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\glimjw\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex03\\data' using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\glimjw\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nBefore we can use these data for analysis, it is important for us to ensure that they are projected in same projection system.\n\nDIY: Using the appropriate sf function you learned in Hands-on Exercise 2, retrieve the referencing system information of these geospatial data.\n\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNotice that except childcare_sf, both mpsz_sf and sg_sf do not have proper crs information.\n\nDIY: Using the method you learned in Lesson 2, assign the correct crs to mpsz_sf and sg_sf simple feature data frames.\n\nThe cr information isn’t appropriate. childcare_sf  and ‘sg_sf’ are in WGS84, while the ‘other two are’mpsz_sf’ is in SVY21\n\nmpsz_sf &lt;- st_transform(mpsz_sf, crs= 3414)\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n5.4.2 Mapping the geospatial data sets\nAfter checking the referencing system of each geospatial data data frame, it is also useful for us to plot a map to show their spatial patterns.\n\nDIY: Using the mapping methods you learned in Hands-on Exercise 3, prepare a map as shown below.\n\nLet’s plot a map to show their spatial patterns for each dataframe\nchildcare_sf consists of spatial points, so it cannot accept tm_fill/tm_borders/tm_polygons. So we have to use tm_dots()\n\ninvalid_mpsz_sf &lt;- which(!st_is_valid(mpsz_sf))\ninvalid_sg_sf &lt;- which(!st_is_valid(sg_sf))\ninvalid_childcare_sf &lt;- which(!st_is_valid(childcare_sf))\n\n# Print the indices of the invalid geometries\nprint(invalid_mpsz_sf)\n\n[1]  19  20  24 122 123 128 258 302 320\n\nprint(invalid_sg_sf)\n\n[1] 29\n\nprint(invalid_childcare_sf)\n\ninteger(0)\n\n\nMake sg_sf and mpsz_sf valid\n\nsg_sf &lt;- st_make_valid(sg_sf)\nmpsz_sf &lt;- st_make_valid(mpsz_sf)\n\n\n# Now, try plotting again\ntm_shape(sg_sf) +\n  tm_polygons() +\ntm_shape(mpsz_sf) +\n  tm_polygons() +\ntm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\nNotice that all the geospatial layers are within the same map extend. This shows that their referencing system and coordinate values are referred to similar spatial context. This is very important in any geospatial analysis.\nAlternatively, we can also prepare a pin map by using the code chunk below.\n\ntmap_mode('view')\n\n\ntm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\n\n\n\ntmap_mode('plot')\n\nNotice that at the interactive mode, tmap is using leaflet for R API. The advantage of this interactive pin map is it allows us to navigate and zoom around the map freely. We can also query the information of each simple feature (i.e. the point) by clicking of them. Last but not least, you can also change the background of the internet map layer. Currently, three internet map layers are provided. They are: ESRI.WorldGrayCanvas, OpenStreetMap, and ESRI.WorldTopoMap. The default is ESRI.WorldGrayCanvas.\n\nReminder: Always remember to switch back to plot mode after the interactive map. This is because, each interactive mode will consume a connection. You should also avoid displaying ecessive numbers of interactive maps (i.e. not more than 10) in one RMarkdown document when publish on Netlify."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#geospatial-data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#geospatial-data-wrangling",
    "title": "Hands-on-Exercise 3.2: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.5 Geospatial Data wrangling",
    "text": "5.5 Geospatial Data wrangling\nAlthough simple feature data frame is gaining popularity again sp’s Spatial* classes, there are, however, many geospatial analysis packages require the input geospatial data in sp’s Spatial* classes. In this section, you will learn how to convert simple feature data frame to sp’s Spatial* class.\n\n5.5.1 Converting sf data frames to sp’s Spatial* class\nThe code chunk below uses as_Spatial() of sf package to convert the three geospatial data from simple feature data frame to sp’s Spatial* class.\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)\n\nDIY: Using appropriate function, display the information of these three Spatial* classes as shown below.\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;1, MARINA BOULEVARD, #B1 - 01, ONE MARINA BOULEVARD, SINGAPORE 018989&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;THE LITTLE SKOOL-HOUSE INTERNATIONAL PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;08F73931F4A691F4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                  &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;200, PONGGOL SEVENTEENTH AVENUE, SINGAPORE 829646&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;RAFFLES KIDZ @ PUNGGOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;379D017BF244B0FA&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\n\n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\n\n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\n\nNotice that the geospatial data have been converted into their respective sp’s Spatial* classes now.\n\n\n5.5.2 Converting the Spatial* class into generic sp format\nspatstat requires the analytical data in ppp object form. There is no direct way to convert a Spatial* classes into ppp object. We need to convert the Spatial classes* into Spatial object first.\nThe codes chunk below converts the Spatial* classes into generic sp objects.\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\nNext, you should display the sp objects properties as shown below.\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \n\n\n\n\n5.5.3 Converting the generic sp format into spatstat’s ppp format\nNow, we will use as.ppp() function of spatstat to convert the spatial data into spatstat’s ppp object format.\n\nlibrary(spatstat)\n\n# Assuming childcare_sp is a SpatialPoints object\ncoords &lt;- coordinates(childcare_sp)\n\n# Create a rectangular window covering the entire extent of the points\nwindow &lt;- owin(xrange = range(coords[, 1]), yrange = range(coords[, 2]))\n\n# Create a ppp object with the adjusted window\nchildcare_ppp &lt;- ppp(coords[, 1], coords[, 2], window = window)\n\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\nPlanar point pattern: 1545 points window: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\nNow, let us plot childcare_ppp and examine the difference.\n\nplot(childcare_ppp)\n\n\n\n\nYou can take a quick look at the summary statistics of the newly created ppp object by using the code chunk below.\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\nNotice the warning message about duplicates. In spatial point patterns analysis an issue of significant is the presence of duplicates. The statistical methodology used for spatial point patterns processes is based largely on the assumption that process are simple, that is, that the points cannot be coincident.\n\n\n5.5.4 Handling duplicated points\nWe can check the duplication in a ppp object by using the code chunk below.\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nTo count the number of co-indicence point, we will use the multiplicity() function as shown in the code chunk below.\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\nIf we want to know how many locations have more than one point event, we can use the code chunk below.\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 128\n\n\nThe output shows that there are 128 duplicated point events.\nTo view the locations of these duplicate point events, we will plot childcare data by using the code chunk below.\n\ntmap_mode('view')\n\n\ntm_shape(childcare) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')\n\nThere are three ways to overcome this problem. The easiest way is to delete the duplicates. But, that will also mean that some useful point events will be lost.\nThe second solution is use jittering, which will add a small perturbation to the duplicate points so that they do not occupy the exact same space.\nThe third solution is to make each point “unique” and then attach the duplicates of the points to the patterns as marks, as attributes of the points. Then you would need analytical techniques that take into account these marks.\nThe code chunk below implements the jittering approach.\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\n\n5.5.5 Creating owin object\nWhen analysing spatial point patterns, it is a good practice to confine the analysis with a geographical area like Singapore boundary. In spatstat, an object called owin is specially designed to represent this polygonal region.\nThe code chunk below is used to covert sg SpatialPolygon object into owin object of spatstat.\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +datum=WGS84 +units=m +no_defs \n\n\n\n# Convert the SpatialPolygons object sg_sp to owin\nsg_owin &lt;- as.owin(sg_sf)\n\nThe output object can be displayed by using plot() function\n\n# Plot the map\nplot(sg_owin, main = \"sg_owin\")\n\n\n\n\nSummary() function of Base R\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n51 separate polygons (2 holes)\n                  vertices         area relative.area\npolygon 1 (hole)        30 -7.08118e+03     -9.76e-06\npolygon 2               55  8.25379e+04      1.14e-04\npolygon 3               90  4.15092e+05      5.72e-04\npolygon 4               49  1.66986e+04      2.30e-05\npolygon 5               38  2.42492e+04      3.34e-05\npolygon 6              976  2.33447e+07      3.22e-02\npolygon 7              721  1.92795e+06      2.66e-03\npolygon 8             1989  9.99217e+06      1.38e-02\npolygon 9              330  1.11896e+06      1.54e-03\npolygon 10             175  9.25904e+05      1.28e-03\npolygon 11             115  9.28394e+05      1.28e-03\npolygon 12              24  6.35239e+03      8.76e-06\npolygon 13 (hole)        3 -1.06765e+00     -1.47e-09\npolygon 14             190  2.02489e+05      2.79e-04\npolygon 15              37  1.01705e+04      1.40e-05\npolygon 16              25  1.66227e+04      2.29e-05\npolygon 17              10  2.14507e+03      2.96e-06\npolygon 18              66  1.61841e+04      2.23e-05\npolygon 19            5195  6.36837e+08      8.78e-01\npolygon 20              76  3.12332e+05      4.31e-04\npolygon 21             627  3.18913e+07      4.40e-02\npolygon 22              20  3.28420e+04      4.53e-05\npolygon 23              42  5.58317e+04      7.70e-05\npolygon 24              67  1.31354e+06      1.81e-03\npolygon 25             734  4.69093e+06      6.47e-03\npolygon 26              16  3.19460e+03      4.40e-06\npolygon 27              15  4.87296e+03      6.72e-06\npolygon 28              15  4.46420e+03      6.15e-06\npolygon 29              14  5.46674e+03      7.54e-06\npolygon 30              37  5.26194e+03      7.25e-06\npolygon 31             111  6.62927e+05      9.14e-04\npolygon 32              69  5.63134e+04      7.76e-05\npolygon 33             143  1.45139e+05      2.00e-04\npolygon 34             397  2.48821e+06      3.43e-03\npolygon 35              90  1.15991e+05      1.60e-04\npolygon 36              98  6.26829e+04      8.64e-05\npolygon 37             165  3.38736e+05      4.67e-04\npolygon 38             130  9.40465e+04      1.30e-04\npolygon 39              93  4.30642e+05      5.94e-04\npolygon 40              16  2.01046e+03      2.77e-06\npolygon 41             415  3.25384e+06      4.49e-03\npolygon 42              30  1.08382e+04      1.49e-05\npolygon 43              53  3.44003e+04      4.74e-05\npolygon 44              26  8.34758e+03      1.15e-05\npolygon 45              74  5.82234e+04      8.03e-05\npolygon 46             327  2.16921e+06      2.99e-03\npolygon 47             177  4.67446e+05      6.44e-04\npolygon 48              46  6.99702e+05      9.65e-04\npolygon 49               6  1.68410e+04      2.32e-05\npolygon 50              13  7.00873e+04      9.66e-05\npolygon 51               4  9.45963e+03      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\n\n5.5.6 Combining point events object and owin object\nIn this last step of geospatial data wrangling, we will extract childcare events that are located within Singapore by using the code chunk below.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\nThe output object combined both the point and polygon feature in one ppp object class as shown below.\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.129929e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n51 separate polygons (2 holes)\n                  vertices         area relative.area\npolygon 1 (hole)        30 -7.08118e+03     -9.76e-06\npolygon 2               55  8.25379e+04      1.14e-04\npolygon 3               90  4.15092e+05      5.72e-04\npolygon 4               49  1.66986e+04      2.30e-05\npolygon 5               38  2.42492e+04      3.34e-05\npolygon 6              976  2.33447e+07      3.22e-02\npolygon 7              721  1.92795e+06      2.66e-03\npolygon 8             1989  9.99217e+06      1.38e-02\npolygon 9              330  1.11896e+06      1.54e-03\npolygon 10             175  9.25904e+05      1.28e-03\npolygon 11             115  9.28394e+05      1.28e-03\npolygon 12              24  6.35239e+03      8.76e-06\npolygon 13 (hole)        3 -1.06765e+00     -1.47e-09\npolygon 14             190  2.02489e+05      2.79e-04\npolygon 15              37  1.01705e+04      1.40e-05\npolygon 16              25  1.66227e+04      2.29e-05\npolygon 17              10  2.14507e+03      2.96e-06\npolygon 18              66  1.61841e+04      2.23e-05\npolygon 19            5195  6.36837e+08      8.78e-01\npolygon 20              76  3.12332e+05      4.31e-04\npolygon 21             627  3.18913e+07      4.40e-02\npolygon 22              20  3.28420e+04      4.53e-05\npolygon 23              42  5.58317e+04      7.70e-05\npolygon 24              67  1.31354e+06      1.81e-03\npolygon 25             734  4.69093e+06      6.47e-03\npolygon 26              16  3.19460e+03      4.40e-06\npolygon 27              15  4.87296e+03      6.72e-06\npolygon 28              15  4.46420e+03      6.15e-06\npolygon 29              14  5.46674e+03      7.54e-06\npolygon 30              37  5.26194e+03      7.25e-06\npolygon 31             111  6.62927e+05      9.14e-04\npolygon 32              69  5.63134e+04      7.76e-05\npolygon 33             143  1.45139e+05      2.00e-04\npolygon 34             397  2.48821e+06      3.43e-03\npolygon 35              90  1.15991e+05      1.60e-04\npolygon 36              98  6.26829e+04      8.64e-05\npolygon 37             165  3.38736e+05      4.67e-04\npolygon 38             130  9.40465e+04      1.30e-04\npolygon 39              93  4.30642e+05      5.94e-04\npolygon 40              16  2.01046e+03      2.77e-06\npolygon 41             415  3.25384e+06      4.49e-03\npolygon 42              30  1.08382e+04      1.49e-05\npolygon 43              53  3.44003e+04      4.74e-05\npolygon 44              26  8.34758e+03      1.15e-05\npolygon 45              74  5.82234e+04      8.03e-05\npolygon 46             327  2.16921e+06      2.99e-03\npolygon 47             177  4.67446e+05      6.44e-04\npolygon 48              46  6.99702e+05      9.65e-04\npolygon 49               6  1.68410e+04      2.32e-05\npolygon 50              13  7.00873e+04      9.66e-05\npolygon 51               4  9.45963e+03      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\nPlot the newly derived childcareSG_ppp\n\nplot(childcareSG_ppp)\n\n\n\n\n\n5.5.6.1 Extracting study area\nThe code chunk below will be used to extract the target planning areas.\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\nPlotting target planning areas\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Punggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n5.5.6.2 Converting the spatial point data frame into generic sp format\nNext, we will convert these SpatialPolygonsDataFrame layers into generic spatialpolygons layers.\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\n\n\n5.5.6.3 Creating owin object\nNow, we will convert these SpatialPolygons objects into owin objects that is required by spatstat.\n\nlibrary(spatstat)\n\n# Assuming pg_sp is your SpatialPolygons object\npg_coords &lt;- coordinates(pg_sp)\npg_xrange &lt;- range(pg_coords[, 1])\npg_yrange &lt;- range(pg_coords[, 2])\npg_owin &lt;- owin(c(pg_xrange[1], pg_xrange[2]), c(pg_yrange[1], pg_yrange[2]))\n\n# Repeat the above process for tm_sp, ck_sp, and jw_sp\n\n# Assuming tm_sp is your SpatialPolygons object\ntm_coords &lt;- coordinates(tm_sp)\ntm_xrange &lt;- range(tm_coords[, 1])\ntm_yrange &lt;- range(tm_coords[, 2])\ntm_owin &lt;- owin(c(tm_xrange[1], tm_xrange[2]), c(tm_yrange[1], tm_yrange[2]))\n\n# Assuming ck_sp is your SpatialPolygons object\nck_coords &lt;- coordinates(ck_sp)\nck_xrange &lt;- range(ck_coords[, 1])\nck_yrange &lt;- range(ck_coords[, 2])\nck_owin &lt;- owin(c(ck_xrange[1], ck_xrange[2]), c(ck_yrange[1], ck_yrange[2]))\n\n# Assuming jw_sp is your SpatialPolygons object\njw_coords &lt;- coordinates(jw_sp)\njw_xrange &lt;- range(jw_coords[, 1])\njw_yrange &lt;- range(jw_coords[, 2])\njw_owin &lt;- owin(c(jw_xrange[1], jw_xrange[2]), c(jw_yrange[1], jw_yrange[2]))\n\n# Now pg_owin, tm_owin, ck_owin, jw_owin are owin objects representing the bounding boxes\n\n\n\n5.5.6.4 Combining childcare points and the study area\nBy using the code chunk below, we are able to extract childcare that is within the specific region to do our analysis later on.\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\nNext, rescale() function is used to trasnform the unit of measurement from metre to kilometre.\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\nThe code chunk below is used to plot these four study areas and the locations of the childcare centres.\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#second-order-spatial-point-patterns-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#second-order-spatial-point-patterns-analysis",
    "title": "Hands-on-Exercise 3.2: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.6 Second-order Spatial Point Patterns Analysis",
    "text": "5.6 Second-order Spatial Point Patterns Analysis"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#analysing-spatial-point-process-using-g-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#analysing-spatial-point-process-using-g-function",
    "title": "Hands-on-Exercise 3.2: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.7 Analysing Spatial Point Process Using G-Function",
    "text": "5.7 Analysing Spatial Point Process Using G-Function\nThe G function measures the distribution of the distances from an arbitrary event to its nearest event. In this section, you will learn how to compute G-function estimation by using Gest() of spatstat package. You will also learn how to perform monta carlo simulation test using envelope() of spatstat package.\n\n5.7.1 Choa Chu Kang planning area\n\n5.7.1.1 Computing G-function estimation\nThe code chunk below is used to compute G-function using Gest() of spatat package.\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\n5.7.1.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nMonte Carlo test with G-fucntion\n\nG_CK.csr &lt;- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(G_CK.csr)\n\n\n\n\n\n\n\n5.7.2 Tampines planning area\n\n5.7.2.1 Computing G-function estimation\n\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n\n\n\n\n\n\n5.7.2.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed.\nThe null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nG_tm.csr &lt;- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(G_tm.csr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#analysing-spatial-point-process-using-f-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#analysing-spatial-point-process-using-f-function",
    "title": "Hands-on-Exercise 3.2: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.8 Analysing Spatial Point Process Using F-Function",
    "text": "5.8 Analysing Spatial Point Process Using F-Function\nThe F function estimates the empty space function F(r) or its hazard rate h(r) from a point pattern in a window of arbitrary shape. In this section, you will learn how to compute F-function estimation by using Fest() of spatstat package. You will also learn how to perform monta carlo simulation test using envelope() of spatstat package.\n\n5.8.1 Choa Chu Kang planning area\n\n5.8.1.1 Computing F-function estimation\nThe code chunk below is used to compute F-function using Fest() of spatat package.\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n\n5.8.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nMonte Carlo test with F-fucntion\n\nF_CK.csr &lt;- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(F_CK.csr)\n\n\n\n\n\n\n5.8.3 Tampines planning area\n\n5.8.3.1 Computing F-function estimation\nMonte Carlo test with F-fucntion\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\n5.8.3.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed.\nThe null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nF_tm.csr &lt;- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(F_tm.csr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#analysing-spatial-point-process-using-k-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#analysing-spatial-point-process-using-k-function",
    "title": "Hands-on-Exercise 3.2: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.9 Analysing Spatial Point Process Using K-Function",
    "text": "5.9 Analysing Spatial Point Process Using K-Function\nK-function measures the number of events found up to a given distance of any particular event. In this section, you will learn how to compute K-function estimates by using Kest() of spatstat package. You will also learn how to perform monta carlo simulation test using envelope() of spatstat package.\n\n5.9.1 Choa Chu Kang planning area\n\n5.9.1.1 Computing K-fucntion estimate\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n5.9.1.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nK_ck.csr &lt;- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n5.9.2 Tampines planning area\n\n5.9.2.1 Computing K-fucntion estimation\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n5.9.2.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nK_tm.csr &lt;- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#analysing-spatial-point-process-using-l-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#analysing-spatial-point-process-using-l-function",
    "title": "Hands-on-Exercise 3.2: 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.10 Analysing Spatial Point Process Using L-Function",
    "text": "5.10 Analysing Spatial Point Process Using L-Function\nIn this section, you will learn how to compute L-function estimation by using Lest() of spatstat package. You will also learn how to perform monta carlo simulation test using envelope() of spatstat package.\n\n5.10.1 Choa Chu Kang planning area\n\n5.10.1.1 Computing L Fucntion estimation\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n5.10.1.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value if smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nL_ck.csr &lt;- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n5.10.2 Tampines planning area\n\n5.10.2.1 Computing L-fucntion estimate\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n5.10.2.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nThe code chunk below will be used to perform the hypothesis testing.\n\nL_tm.csr &lt;- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nThen, plot the model output by using the code chun below.\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html",
    "title": "Hands-on-Exercise 5.1: Global Measures of Spatial Autocorrelation",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to compute Global Measures of Spatial Autocorrelation (GMSA) by using spdep package. By the end to this hands-on exercise, you will be able to:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute Global Spatial Autocorrelation (GSA) statistics by using appropriate functions of spdep package,\n\nplot Moran scatterplot,\ncompute and plot spatial correlogram using appropriate function of spdep package.\n\nprovide statistically correct interpretation of GSA statistics."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#overview",
    "title": "Hands-on-Exercise 5.1: Global Measures of Spatial Autocorrelation",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to compute Global Measures of Spatial Autocorrelation (GMSA) by using spdep package. By the end to this hands-on exercise, you will be able to:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute Global Spatial Autocorrelation (GSA) statistics by using appropriate functions of spdep package,\n\nplot Moran scatterplot,\ncompute and plot spatial correlogram using appropriate function of spdep package.\n\nprovide statistically correct interpretation of GSA statistics."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#getting-started",
    "title": "Hands-on-Exercise 5.1: Global Measures of Spatial Autocorrelation",
    "section": "9.2 Getting Started",
    "text": "9.2 Getting Started\n\n9.2.1 The analytical question\nIn spatial policy, one of the main development objective of the local government and planners is to ensure equal distribution of development in the province. Our task in this study, hence, is to apply appropriate spatial statistical methods to discover if development are even distributed geographically. If the answer is No. Then, our next question will be “is there sign of spatial clustering?”. And, if the answer for this question is yes, then our next question will be “where are these clusters?”\nIn this case study, we are interested to examine the spatial pattern of a selected development indicator (i.e. GDP per capita) of Hunan Provice, People Republic of China.\n\n\n9.2.2 The Study Area and Data\nTwo data sets will be used in this hands-on exercise, they are:\n\nHunan province administrative boundary layer at county level. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012.\n\n\n\n9.2.3 Setting the Analytical Toolls\nBefore we get started, we need to ensure that spdep, sf, tmap and tidyverse packages of R are currently installed in your R.\n\nsf is use for importing and handling geospatial data in R,\ntidyverse is mainly use for wrangling attribute data in R,\nspdep will be used to compute spatial weights, global and local spatial autocorrelation statistics, and\ntmap will be used to prepare cartographic quality chropleth map.\n\nThe code chunk below is used to perform the following tasks:\n\ncreating a package list containing the necessary R packages,\nchecking if the R packages in the package list have been installed in R,\n\nif they have yet to be installed, RStudio will installed the missing packages,\n\nlaunching the packages into R environment.\n\n\npacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#getting-the-data-into-r-environment",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#getting-the-data-into-r-environment",
    "title": "Hands-on-Exercise 5.1: Global Measures of Spatial Autocorrelation",
    "section": "9.3 Getting the Data Into R Environment",
    "text": "9.3 Getting the Data Into R Environment\nIn this section, you will learn how to bring a geospatial data and its associated attribute table into R environment. The geospatial data is in ESRI shapefile format and the attribute table is in csv fomat.\n\n9.3.1 Import shapefile into r environment\nThe code chunk below uses st_read() of sf package to import Hunan shapefile into R. The imported shapefile will be simple features Object of sf.\nhunan &lt;- st_read(dsn = “data/geospatial”,\nlayer = “Hunan”)\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\glimjw\\IS415-GAA\\Hands-on_Ex\\Hands-on_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nst_crs(hunan)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\n\n9.3.2 Import csv file into r environment\nNext, we will import Hunan_2012.csv into R by using read_csv() of readr package. The output is R data frame class.\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\nstr(hunan2012)\n\nspc_tbl_ [88 × 29] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ County     : chr [1:88] \"Anhua\" \"Anren\" \"Anxiang\" \"Baojing\" ...\n $ City       : chr [1:88] \"Yiyang\" \"Chenzhou\" \"Changde\" \"Hunan West\" ...\n $ avg_wage   : num [1:88] 30544 28058 31935 30843 31251 ...\n $ deposite   : num [1:88] 10967 4599 5517 2250 8241 ...\n $ FAI        : num [1:88] 6832 6386 3541 1005 6508 ...\n $ Gov_Rev    : num [1:88] 457 221 244 193 620 ...\n $ Gov_Exp    : num [1:88] 2703 1455 1780 1379 1947 ...\n $ GDP        : num [1:88] 13225 4941 12482 4088 11585 ...\n $ GDPPC      : num [1:88] 14567 12761 23667 14563 20078 ...\n $ GIO        : num [1:88] 9277 4189 5109 3624 9158 ...\n $ Loan       : num [1:88] 3955 2555 2807 1254 4287 ...\n $ NIPCR      : num [1:88] 3528 3272 7694 4191 3888 ...\n $ Bed        : num [1:88] 2718 970 1931 927 1449 ...\n $ Emp        : num [1:88] 494 291 336 195 330 ...\n $ EmpR       : num [1:88] 441 255 270 146 299 ...\n $ EmpRT      : num [1:88] 338 99.4 205.9 116.4 154 ...\n $ Pri_Stu    : num [1:88] 54.2 33.2 19.6 19.2 33.9 ...\n $ Sec_Stu    : num [1:88] 32.8 17.5 17.8 11.8 20.5 ...\n $ Household  : num [1:88] 290.4 104.6 148.1 73.2 148.7 ...\n $ Household_R: num [1:88] 234.5 121.9 135.4 69.9 139.4 ...\n $ NOIP       : num [1:88] 101 34 53 18 106 115 214 17 55 70 ...\n $ Pop_R      : num [1:88] 670 243 346 184 302 ...\n $ RSCG       : num [1:88] 5761 2386 3958 768 4010 ...\n $ Pop_T      : num [1:88] 911 389 528 281 578 ...\n $ Agri       : num [1:88] 4942 2358 4524 1119 3794 ...\n $ Service    : num [1:88] 5414 3814 14100 542 5444 ...\n $ Disp_Inc   : num [1:88] 12373 16072 16610 13455 20461 ...\n $ RORP       : num [1:88] 0.736 0.626 0.655 0.654 0.521 ...\n $ ROREmp     : num [1:88] 0.893 0.878 0.804 0.746 0.905 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   County = col_character(),\n  ..   City = col_character(),\n  ..   avg_wage = col_double(),\n  ..   deposite = col_double(),\n  ..   FAI = col_double(),\n  ..   Gov_Rev = col_double(),\n  ..   Gov_Exp = col_double(),\n  ..   GDP = col_double(),\n  ..   GDPPC = col_double(),\n  ..   GIO = col_double(),\n  ..   Loan = col_double(),\n  ..   NIPCR = col_double(),\n  ..   Bed = col_double(),\n  ..   Emp = col_double(),\n  ..   EmpR = col_double(),\n  ..   EmpRT = col_double(),\n  ..   Pri_Stu = col_double(),\n  ..   Sec_Stu = col_double(),\n  ..   Household = col_double(),\n  ..   Household_R = col_double(),\n  ..   NOIP = col_double(),\n  ..   Pop_R = col_double(),\n  ..   RSCG = col_double(),\n  ..   Pop_T = col_double(),\n  ..   Agri = col_double(),\n  ..   Service = col_double(),\n  ..   Disp_Inc = col_double(),\n  ..   RORP = col_double(),\n  ..   ROREmp = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\n9.3.3 Performing relational join\nThe code chunk below will be used to update the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of dplyr package.\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\n\n9.3.4 Visualising Regional Development Indicator\nNow, we are going to prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#global-measures-of-spatial-autocorrelation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#global-measures-of-spatial-autocorrelation",
    "title": "Hands-on-Exercise 5.1: Global Measures of Spatial Autocorrelation",
    "section": "9.4 Global Measures of Spatial Autocorrelation",
    "text": "9.4 Global Measures of Spatial Autocorrelation\nIn this section, you will learn how to compute global spatial autocorrelation statistics and to perform spatial complete randomness test for global spatial autocorrelation.\n\n9.4.1 Computing Contiguity Spatial Weights\nBefore we can compute the global spatial autocorrelation statistics, we need to construct a spatial weights of the study area. The spatial weights is used to define the neighbourhood relationships between the geographical units (i.e. county) in the study area.\nIn the code chunk below, poly2nb() of spdep package is used to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. If you look at the documentation you will see that you can pass a “queen” argument that takes TRUE or FALSE as options. If you do not specify this argument the default is set to TRUE, that is, if you don’t specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.\nMore specifically, the code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one neighbours.\n\n\n9.4.2 Row-standardised weights matrix\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors’ values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\nWhat can we learn from the code chunk above?\n\nThe input of nb2listw() must be an object of class nb. The syntax of the function has two major arguments, namely style and zero.poly.\nstyle can take values “W”, “B”, “C”, “U”, “minmax” and “S”. B is the basic binary coding, W is row standardised (sums over all links to n), C is globally standardised (sums over all links to n), U is equal to C divided by the number of neighbours (sums over all links to unity), while S is the variance-stabilizing coding scheme proposed by Tiefelsdorf et al. 1999, p. 167-168 (sums over all links to n).\nIf zero policy is set to TRUE, weights vectors of zero length are inserted for regions without neighbour in the neighbours list. These will in turn generate lag values of zero, equivalent to the sum of products of the zero row t(rep(0, length=length(neighbours))) %*% x, for arbitrary numerical vector x of length length(neighbours). The spatially lagged value of x for the zero-neighbour region will then be zero, which may (or may not) be a sensible choice."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#global-measures-of-spatial-autocorrelation-morans-i",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#global-measures-of-spatial-autocorrelation-morans-i",
    "title": "Hands-on-Exercise 5.1: Global Measures of Spatial Autocorrelation",
    "section": "9.5 Global Measures of Spatial Autocorrelation: Moran’s I",
    "text": "9.5 Global Measures of Spatial Autocorrelation: Moran’s I\nIn this section, you will learn how to perform Moran’s I statistics testing by using moran.test() of spdep.\n\n9.5.1 Maron’s I test\nThe code chunk below performs Moran’s I statistical testing using moran.test() of spdep.\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nQuestion: What statistical conclusion can you draw from the output above?\n\nThe observed Moran I statistic is 0.3007, and the standard deviate is 4.7351. The standard deviate is a measure of how many standard deviations the observed Moran I is from the mean under the assumption of spatial randomness.\n\n\n\n9.5.2 Computing Monte Carlo Moran’s I\nThe code chunk below performs permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nQuestion: What statistical conclustion can you draw from the output above?\n\nThe p-value associated with the observed statistic is 0.001. This is the proportion of simulated values greater than or equal to the observed value. A small p-value (in this case, 0.001) suggests that the observed Moran I statistic is significantly greater than what would be expected under spatial randomness.\n\n\n\n9.5.3 Visualising Monte Carlo Moran’s I\nIt is always a good practice for us the examine the simulated Moran’s I test statistics in greater detail. This can be achieved by plotting the distribution of the statistical values as a histogram by using the code chunk below.\nIn the code chunk below hist() and abline() of R Graphics are used.\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\nQuestion: What statistical observation can you draw from the output above?\n\nThe results suggest that the observed spatial autocorrelation (Moran’s I) is not significantly different from what would be expected under spatial randomness. The distribution of simulated values around zero indicates no strong spatial autocorrelation pattern in the data.\n\n\n\nChallenge: Instead of using Base Graph to plot the values, plot the values by using ggplot2 package"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#global-measures-of-spatial-autocorrelation-gearys-c",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#global-measures-of-spatial-autocorrelation-gearys-c",
    "title": "Hands-on-Exercise 5.1: Global Measures of Spatial Autocorrelation",
    "section": "9.6 Global Measures of Spatial Autocorrelation: Geary’s C",
    "text": "9.6 Global Measures of Spatial Autocorrelation: Geary’s C\nIn this section, you will learn how to perform Geary’s C statistics testing by using appropriate functions of spdep package.\n\n9.6.1 Geary’s C test\nThe code chunk below performs Geary’s C test for spatial autocorrelation by using geary.test() of spdep.\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\nQuestion: What statistical conclusion can you draw from the output above?\n\nThe Geary C statistic measures dissimilarity. In this case, a low Geary C value (0.6907223) indicates that there is a significant spatial autocorrelation, meaning that neighboring observations are more similar than would be expected by random chance.\n\n\n\n\n9.6.2 Computing Monte Carlo Geary’s C\nThe code chunk below performs permutation test for Geary’s C statistic by using geary.mc() of spdep.\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\nQuestion: What statistical conclusion can you draw from the output above?\n\nThe p-value of 0.001 is very low, suggesting that the observed Geary C statistic is statistically significant. In the context of the alternative hypothesis (greater expectation than observed), this indicates that the observed dissimilarity in the data is greater than what would be expected by random chance.\n\n\n\n\n9.6.3 Visualising the Monte Carlo Geary’s C\nNext, we will plot a histogram to reveal the distribution of the simulated values by using the code chunk below.\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\") \n\n\n\n\n\nQuestion: What statistical observation can you draw from the output?\n\nThe mean of the simulated Geary’s C values is close to 1.0044, indicating that, on average, the spatial relationships in the simulated data are similar to the original data.\nThe distribution of simulated values provides context for the observed statistic. If the observed statistic falls within the extreme tails of the distribution, it suggests that the observed spatial relationship is unlikely to occur by random chance."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#spatial-correlogram",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05_1.html#spatial-correlogram",
    "title": "Hands-on-Exercise 5.1: Global Measures of Spatial Autocorrelation",
    "section": "9.7 Spatial Correlogram",
    "text": "9.7 Spatial Correlogram\nSpatial correlograms are great to examine patterns of spatial autocorrelation in your data or model residuals. They show how correlated are pairs of spatial observations when you increase the distance (lag) between them - they are plots of some index of autocorrelation (Moran’s I or Geary’s c) against distance.Although correlograms are not as fundamental as variograms (a keystone concept of geostatistics), they are very useful as an exploratory and descriptive tool. For this purpose they actually provide richer information than variograms.\n\n9.7.1 Compute Moran’s I correlogram\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. The plot() of base Graph is then used to plot the output.\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\nBy plotting the output might not allow us to provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important for us to examine the full analysis report by printing out the analysis results as in the code chunk below.\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nQuestion: What statistical observation can you draw from the plot above?\n\nThe Moran’s I values at different lag distances are all positive, suggesting positive spatial autocorrelation.\nThe p-values for the Moran’s I values are generally very low (e.g., ‘*’ or ’’), indicating that the spatial autocorrelation is statistically significant.\n\n\n\n\n9.7.2 Compute Geary’s C correlogram and plot\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary’s C. The plot() of base Graph is then used to plot the output.\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\nSimilar to the previous step, we will print out the analysis report by using the code chunk below.\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "R for Geospatial Data Science",
    "section": "",
    "text": "Before we start, create the folder and file\n\n\n\n\ncreate a folder called In-class_Ex02.\ncreate a new Quarto document called In-class_Ex02.\n\n\n\nWrite a code check to load the R packages into R environment\nThe follwing R-packages will be used: - Arrow - Lubridate - Tidyverse - tmap - sf\n\n\nCode\npacman::p_load(arrow, lubridate, tidyverse, sf, tmap)\n\n\n\n\n\n\nCode\ndf &lt;- read_parquet(\"../../data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy - Copy.parquet\")\n\n\nConvert the data type of pingtimestamp from character to date-time (to make sure the data are of the correct format)\n\n\nCode\ndf$pingtimestamp &lt;- as_datetime(df$pingtimestamp)\n\n\n\n\n\n\nExtracting trips’ origin locations\nDerive three new columns (i.e. variables) for weekday, starting hour and day of the month\nName the output tibble data.frame origin.df\n\n\n\nCode\norigin_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(pingtimestamp) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))\n\n\n** the wday/label/abbr/etc are part of the Lubridate function ** factor will change the data to ordinal scale - an order (if not it would be just recognise the data as pure numbers instead of hour/min/etc)\n\n\n\nExtract trip’s destination locations.\n\n\nCode\ndestination_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(desc(pingtimestamp)) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))\n\n\n** sort the timestamp backwards (using desc) to get the last timestamp of a trip (trj_id)\nTo reuse the tables, we need to create rds\n\n\n\n\n\nCode\norigin_df &lt;- read_rds(\"data/rds/origin_df.rds\")\ndestination_df &lt;- read_rds(\"data/rds/destination_df.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#importing-grab-posisi-dataset",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#importing-grab-posisi-dataset",
    "title": "R for Geospatial Data Science",
    "section": "",
    "text": "Code\ndf &lt;- read_parquet(\"../../data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy - Copy.parquet\")\n\n\nConvert the data type of pingtimestamp from character to date-time (to make sure the data are of the correct format)\n\n\nCode\ndf$pingtimestamp &lt;- as_datetime(df$pingtimestamp)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-trip-starting-locations",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-trip-starting-locations",
    "title": "R for Geospatial Data Science",
    "section": "",
    "text": "Extracting trips’ origin locations\nDerive three new columns (i.e. variables) for weekday, starting hour and day of the month\nName the output tibble data.frame origin.df\n\n\n\nCode\norigin_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(pingtimestamp) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))\n\n\n** the wday/label/abbr/etc are part of the Lubridate function ** factor will change the data to ordinal scale - an order (if not it would be just recognise the data as pure numbers instead of hour/min/etc)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-trip-ending-locations",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-trip-ending-locations",
    "title": "R for Geospatial Data Science",
    "section": "",
    "text": "Extract trip’s destination locations.\n\n\nCode\ndestination_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(desc(pingtimestamp)) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))\n\n\n** sort the timestamp backwards (using desc) to get the last timestamp of a trip (trj_id)\nTo reuse the tables, we need to create rds"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#import-data-to-use-the-rds",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#import-data-to-use-the-rds",
    "title": "R for Geospatial Data Science",
    "section": "",
    "text": "Code\norigin_df &lt;- read_rds(\"data/rds/origin_df.rds\")\ndestination_df &lt;- read_rds(\"data/rds/destination_df.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Code\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\n\n\nCode\npacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#install-maptools",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#install-maptools",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Code\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\n\n\nCode\npacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#importing-spatial-data",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#importing-spatial-data",
    "title": "In-class Exercise 3",
    "section": "Importing spatial data",
    "text": "Importing spatial data\n\n\nCode\nchildcare_sf &lt;- st_read(\"data/geospatial/ChildCareServices.geojson\") %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `ChildCareServices' from data source \n  `C:\\glimjw\\IS415-GAA\\In-class_Ex\\In-class_Ex03\\data\\geospatial\\ChildCareServices.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nCode\nmpsz_sf &lt;- st_read(dsn = \"data/geospatial\", layer=\"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\glimjw\\IS415-GAA\\In-class_Ex\\In-class_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\nCode\nplot(mpsz_sf)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#creating-coastal-outline",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#creating-coastal-outline",
    "title": "In-class Exercise 3",
    "section": "Creating coastal outline",
    "text": "Creating coastal outline\n“Dissolve” the boundaries in the map, and get the coastal outline.\n\n\nCode\nsg_sf &lt;- mpsz_sf %&gt;%\n  st_union()\n\n\n\n\nCode\nplot(sg_sf)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#geosptial-data-wrangling",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#geosptial-data-wrangling",
    "title": "In-class Exercise 3",
    "section": "Geosptial Data Wrangling",
    "text": "Geosptial Data Wrangling\n\nCreating ppp objects: sf method\nppp can only be used with sf v\n\n\nCode\nchildcare_ppp &lt;- as.ppp(childcare_sf)\n\n\n\n\nCode\nsummary(childcare_ppp)\n\n\nMarked planar point pattern:  1925 points\nAverage intensity 2.417323e-06 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n     1925 character character \n\nWindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n                    (33590 x 23700 units)\nWindow area = 796335000 square units\n\n\n\n\nHandling duplicated points\nWe can check the duplication in a ppp object by using this code chunk\n\n\nCode\nany(duplicated(childcare_ppp))\n\n\n[1] FALSE\n\n\n\n\nCreating owin object\nMust be sf layer instead of sp. It only works with sf layers only.\n\n\nCode\nsg_owin &lt;- as.owin(sg_sf)\n\n\n\n\nCode\nplot(sg_owin)\n\n\n\n\n\n\n\nCombining owin with ppp\nPut the ppp into the owin that we have created\nerror in: childcareSG_ppp = sg_owin(childcare_ppp)\n\n\nCode\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\n\n\n\nCode\nplot(childcareSG_ppp)\n\n\n\n\n\n\n\nExtract map of specific area\nWe use sf layer instead of sp\n\n\nCode\nstr(mpsz_sf)\n\n\nClasses 'sf' and 'data.frame':  323 obs. of  16 variables:\n $ OBJECTID  : int  1 2 3 4 5 6 7 8 9 10 ...\n $ SUBZONE_NO: int  1 1 3 8 3 7 9 2 13 7 ...\n $ SUBZONE_N : chr  \"MARINA SOUTH\" \"PEARL'S HILL\" \"BOAT QUAY\" \"HENDERSON HILL\" ...\n $ SUBZONE_C : chr  \"MSSZ01\" \"OTSZ01\" \"SRSZ03\" \"BMSZ08\" ...\n $ CA_IND    : chr  \"Y\" \"Y\" \"Y\" \"N\" ...\n $ PLN_AREA_N: chr  \"MARINA SOUTH\" \"OUTRAM\" \"SINGAPORE RIVER\" \"BUKIT MERAH\" ...\n $ PLN_AREA_C: chr  \"MS\" \"OT\" \"SR\" \"BM\" ...\n $ REGION_N  : chr  \"CENTRAL REGION\" \"CENTRAL REGION\" \"CENTRAL REGION\" \"CENTRAL REGION\" ...\n $ REGION_C  : chr  \"CR\" \"CR\" \"CR\" \"CR\" ...\n $ INC_CRC   : chr  \"5ED7EB253F99252E\" \"8C7149B9EB32EEFC\" \"C35FEFF02B13E0E5\" \"3775D82C5DDBEFBD\" ...\n $ FMEL_UPD_D: Date, format: \"2014-12-05\" \"2014-12-05\" ...\n $ X_ADDR    : num  31596 28679 29655 26783 26202 ...\n $ Y_ADDR    : num  29220 29782 29975 29934 30006 ...\n $ SHAPE_Leng: num  5267 3506 1741 3314 2826 ...\n $ SHAPE_Area: num  1630379 559816 160807 595429 387429 ...\n $ geometry  :sfc_MULTIPOLYGON of length 323; first list element: List of 1\n  ..$ :List of 1\n  .. ..$ : num [1:157, 1:2] 31496 31981 32333 32362 32362 ...\n  ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\"\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"names\")= chr [1:15] \"OBJECTID\" \"SUBZONE_NO\" \"SUBZONE_N\" \"SUBZONE_C\" ...\n\n\n\n\nCode\npg &lt;- mpsz_sf %&gt;% filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf %&gt;% filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf %&gt;% filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf %&gt;% filter(PLN_AREA_N == \"JURONG WEST\")\n\n\n\n\nCode\npar(mflow=c(2,2))\nplot(pg, main = \"Punggol\")\nplot(pg, main = \"Tampines\")\n\n\n\n\n\nCode\nplot(pg, main = \"Choa Chu Kang\")\nplot(pg, main = \"Jurong West\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "Installing and Loading the R packages\n\nPackages are similar for take-home ex 2\n\n\n\nCode\npacman::p_load(sf, sfdep, tmap, tidyverse)\n\n\nimport the hunan and hunan 2012 data\n\n\nCode\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\n\nReading layer `Hunan' from data source \n  `C:\\glimjw\\IS415-GAA\\In-class_Ex\\In-class_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\nCode\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\nCombine using left join\n\nchoose 7 and 15 cos we need the gdp\n\n\n\nCode\nhunan_GDPPC &lt;- left_join(hunan, hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\n\n\nCode\nst_crs(hunan_GDPPC)\n\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nPlotting the Chorepleth map\n\n\nCode\ntmap_mode(\"plot\")\ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by county, Hunan Province\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  # tm_compass(type = \"Bstar\", size = 2) +  # Comment or remove this line\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\nDeriving contiguity weights: Queen’s method\n\n\nCode\nwm_q &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb, style = \"W\"),\n         .before = 1)\n\n\n\n\nCode\nwm_q\n\n\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                            wt\n1                                                      0.2, 0.2, 0.2, 0.2, 0.2\n2                                                      0.2, 0.2, 0.2, 0.2, 0.2\n3                                                       0.25, 0.25, 0.25, 0.25\n4                                                       0.25, 0.25, 0.25, 0.25\n5                                                       0.25, 0.25, 0.25, 0.25\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                       0.25, 0.25, 0.25, 0.25\n8  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n9             0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n10                      0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n\n\nComputing Global Moran’ I\n\n\nCode\nmoranI &lt;- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\nglimpse(moranI)\n\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n\n\ntest the moran’ I\n\n\nCode\nglobal_moran_test(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt)\n\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nrun simulation on Moran I (99 means run 100 times cos it starts with 0)\n\n\nCode\nglobal_moran_perm(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim=99)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\nCode\nGDPPC &lt;- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")\n\n\n\n\nCode\nstr(GDPPC)\n\n\nspc_tbl_ [1,496 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Year  : num [1:1496] 2005 2005 2005 2005 2005 ...\n $ County: chr [1:1496] \"Longshan\" \"Changsha\" \"Wangcheng\" \"Ningxiang\" ...\n $ GDPPC : num [1:1496] 3469 24612 14659 11687 13406 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Year = col_double(),\n  ..   County = col_character(),\n  ..   GDPPC = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\nCode\nclass(GDPPC$Year)\n\n\n[1] \"numeric\"\n\n\n\n\nCode\nclass(GDPPC$County)\n\n\n[1] \"character\"\n\n\n\n\nCode\nGDPPC_st &lt;- spacetime(GDPPC, hunan,\n                      .loc_col = \"County\",\n                      .time_col = \"Year\")\n\nGDPPC_st\n\n\n# A tibble: 1,496 × 3\n    Year County    GDPPC\n * &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;\n 1  2005 Longshan   3469\n 2  2005 Changsha  24612\n 3  2005 Wangcheng 14659\n 4  2005 Ningxiang 11687\n 5  2005 Liuyang   13406\n 6  2005 Zhuzhou    8546\n 7  2005 You       10944\n 8  2005 Chaling    8040\n 9  2005 Yanling    7383\n10  2005 Liling    11688\n# ℹ 1,486 more rows\n\n\n\n\nCode\ndim(GDPPC_st)\n\n\n[1] 1496    3\n\n\n\n\nCode\nis_spacetime_cube(GDPPC_st)\n\n\n[1] TRUE"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab hailing services in Singapore",
    "section": "",
    "text": "Human mobility, the movement of human beings in space and time, reflects the spatial-temporal characteristics of human behavior. With the advancement Information and Communication Technologies (ICT) especially smart phone, a large volume of data related to human mobility have been collected. By using appropriate GIS analysis methods, these data are potentially useful in supporting smart city planning and management.\nIn Singapore, one of the important source of data related to human mobility is from Land Transport Authority (LTA) DataMall. Two data sets related to human mobility are provided by the portal, they are: Passenger Volume by Origin Destination Train Stations and Passenger Volume by Origin Destination Bus Stops. One of the limitation of these data sets is that their location are biased to either bus stops or MRT/LRT stations. In 2020, another very interesting human mobility data set called Grab Posisi was released by GRAB, one of the largest shared taxi operator in South-east Asia. There are two data sets been released and one of them is for Singapore."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab hailing services in Singapore",
    "section": "",
    "text": "Human mobility, the movement of human beings in space and time, reflects the spatial-temporal characteristics of human behavior. With the advancement Information and Communication Technologies (ICT) especially smart phone, a large volume of data related to human mobility have been collected. By using appropriate GIS analysis methods, these data are potentially useful in supporting smart city planning and management.\nIn Singapore, one of the important source of data related to human mobility is from Land Transport Authority (LTA) DataMall. Two data sets related to human mobility are provided by the portal, they are: Passenger Volume by Origin Destination Train Stations and Passenger Volume by Origin Destination Bus Stops. One of the limitation of these data sets is that their location are biased to either bus stops or MRT/LRT stations. In 2020, another very interesting human mobility data set called Grab Posisi was released by GRAB, one of the largest shared taxi operator in South-east Asia. There are two data sets been released and one of them is for Singapore."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#objectives",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#objectives",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab hailing services in Singapore",
    "section": "Objectives",
    "text": "Objectives\nGeospatial analytics hold tremendous potential to address complex problems facing society. In this study, you are tasked to apply appropriate spatial point patterns analysis methods to discover the geographical and spatio-temporal distribution of Grab hailing services locations in Singapore."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-maptools",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-maptools",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab hailing services in Singapore",
    "section": "1 Install maptools",
    "text": "1 Install maptools\n\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\nInstalling the required tools for the analysis (e.g. sf, tidyverse, maptools, etc)\n\npacman::p_load(maptools, sf, raster, spatstat, tmap, tidyverse, arrow, lubridate, dplyr, spNetwork)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-import-and-wrangling",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-import-and-wrangling",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab hailing services in Singapore",
    "section": "2 Data Import and Wrangling",
    "text": "2 Data Import and Wrangling\nThis is where we import the data and prepare it before analysis``.\nLet’s use st_read() of sf package to import these three geospatial data sets into R. And we will be using other functions to prepare our data upon importing them.\nThe 3 data are:\n\nGrab Taxi location points (Grab-Posisi)\nRoad layer within SG (Geofabrik download server) [Malaysia, Singapore, and Brunei coverage]\nSG Boundary (data.gov.sg) [Master Plan 2019 Subzone Boundary (No Sea)]\n\n\n2.1 Grab Taxi lcoation points (grab_df)\nLet’s use read_parquet() function to read the grab parquet file, and import it into grab_df\n\n# Check if the data is already loaded\nif (!exists(\"road_sf\")) {\n  # Import data if not loaded\n  grab_df &lt;- read_parquet(\"data/aspatial/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy - Copy.parquet\")\n}\n\nConvert the timestamp for grab_df\n\ngrab_df$pingtimestamp &lt;- as_datetime(grab_df$pingtimestamp)\n\nLet’s take a glimpse of our grab_df data\n\nglimpse(grab_df)\n\nRows: 3,034,553\nColumns: 9\n$ trj_id        &lt;chr&gt; \"70014\", \"73573\", \"75567\", \"1410\", \"4354\", \"32630\", \"646…\n$ driving_mode  &lt;chr&gt; \"car\", \"car\", \"car\", \"car\", \"car\", \"car\", \"car\", \"car\", …\n$ osname        &lt;chr&gt; \"android\", \"android\", \"android\", \"android\", \"android\", \"…\n$ pingtimestamp &lt;dttm&gt; 2019-04-11 00:40:36, 2019-04-18 10:17:03, 2019-04-13 07…\n$ rawlat        &lt;dbl&gt; 1.342326, 1.321781, 1.327088, 1.262482, 1.283799, 1.3003…\n$ rawlng        &lt;dbl&gt; 103.8890, 103.8564, 103.8613, 103.8238, 103.8072, 103.90…\n$ speed         &lt;dbl&gt; 18.910000, 17.719076, 14.021548, 13.026521, 14.812943, 2…\n$ bearing       &lt;int&gt; 248, 44, 34, 181, 93, 73, 82, 321, 324, 31, 203, 50, 252…\n$ accuracy      &lt;dbl&gt; 3.900, 4.000, 3.900, 4.000, 3.900, 3.900, 3.000, 3.649, …\n\n\nSave the data into grab_rds\n\nwrite_rds(grab_df, \"data/rds/grab.rds\")\n\nExtracting trip starting locations (origin_df)\n\norigin_df &lt;- grab_df %&gt;% group_by(trj_id) %&gt;% arrange(pingtimestamp) %&gt;% filter(row_number()==1) %&gt;% mutate(weekday = wday(pingtimestamp, label=TRUE, abbr=TRUE), start_hr = factor(hour(pingtimestamp)), day = factor(mday(pingtimestamp)))\n\nExtracting trip ending locations (destination_df)\n\ndestination_df &lt;- grab_df %&gt;% group_by(trj_id) %&gt;% arrange(desc(pingtimestamp)) %&gt;% filter(row_number()==1) %&gt;% mutate(weekday = wday(pingtimestamp, label=TRUE, abbr=TRUE), end_hr = factor(hour(pingtimestamp)), day = factor(mday(pingtimestamp)))\n\nLet’s save a copy of both origin_df and destination_df into the rds folder\n\nwrite_rds(origin_df, \"data/rds/origin_df.rds\") \nwrite_rds(destination_df, \"data/rds/destination_df.rds\")\n\nLet’s convert the grab_df from aspatial data into geospatial data\n\norigin_sf &lt;- st_as_sf(origin_df, coords = c(\"rawlng\", \"rawlat\"), crs = 4326) %&gt;% \n  st_transform(crs = 3414) \ndestination_sf &lt;- st_as_sf(destination_df, coords = c(\"rawlng\", \"rawlat\"), crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\nLet’s check the referencing system info of this road_df\n\nst_crs(origin_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nSince it is in SVY21 format, we will standardise the crs\n\norigin_sf &lt;- st_transform(origin_sf, crs= 3414) \ndestination_sf &lt;- st_transform(destination_sf, crs= 3414) \nst_crs(origin_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nLet’s visualise how grab_df looked like by using the trips’ origin locations\n\ntmap_mode(\"plot\") \ntm_shape(origin_sf) + \n  tm_dots()\n\n\n\n\nLet’s visualise how grab_df looked like by using the trips’ destination locations\n\ntmap_mode(\"plot\") \ntm_shape(destination_sf) + \n  tm_dots()\n\n\n\n\n\n\n2.2 Road layer within SG (road_sf)\nLet’s use st_read() function to read the roads file, and import it into road_df\n\n# Check if the data is already loaded\nif (!exists(\"road_sf\")) {\n  # Import data if not loaded\n  road_sf &lt;- st_read(dsn = \"data/geospatial/malaysia-singapore-brunei-latest-free.shp\", layer = \"gis_osm_roads_free_1\")\n}\n\nReading layer `gis_osm_roads_free_1' from data source \n  `C:\\glimjw\\IS415-GAA\\Take-home_Ex\\Take-home_Ex01\\data\\geospatial\\malaysia-singapore-brunei-latest-free.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1767027 features and 10 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 99.66041 ymin: 0.8021131 xmax: 119.2601 ymax: 7.514393\nGeodetic CRS:  WGS 84\n\n\nLet’s check the referencing system info of this road_df\n\nst_crs(road_sf)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nWe want to extract the roads that are in Singapore as road_sf carries the road data of Malaysia and Brunei.\n\n# Define the bounding box for Singapore\nsingapore_bbox &lt;- st_bbox(c(xmin = 103, xmax = 104, ymin = 1.15, ymax = 1.47), crs = 4326)\n\n# Crop roads within the bounding box\nroad_sg_sf &lt;- st_crop(road_sf, st_as_sfc(st_bbox(singapore_bbox)))\n\n# Print the resulting dataset\nprint(road_sg_sf)\n\nSimple feature collection with 249223 features and 10 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 103.2563 ymin: 1.160081 xmax: 104 ymax: 1.470056\nGeodetic CRS:  WGS 84\nFirst 10 features:\n     osm_id code      fclass              name  ref oneway maxspeed layer\n1   4386520 5113     primary      Orchard Road &lt;NA&gt;      F       50     0\n18  4887867 5122 residential  Hougang Avenue 1 &lt;NA&gt;      B       50     0\n497 8096835 5113     primary       Scotts Road &lt;NA&gt;      F       60     0\n505 9584642 5115    tertiary     Keng Lee Road &lt;NA&gt;      F       50     0\n506 9584847 5153     footway              &lt;NA&gt; &lt;NA&gt;      B        0     0\n507 9585045 5113     primary       Newton Road &lt;NA&gt;      F       60     0\n508 9585074 5122 residential      Sarkies Road &lt;NA&gt;      B       50     0\n509 9585621 5113     primary     Paterson Road &lt;NA&gt;      F       50     0\n510 9585771 5113     primary Orchard Boulevard &lt;NA&gt;      F       50     0\n511 9586040 5113     primary     Paterson Road &lt;NA&gt;      F       50     0\n    bridge tunnel                       geometry\n1        F      F LINESTRING (103.8301 1.3060...\n18       F      F LINESTRING (103.8874 1.3489...\n497      F      F LINESTRING (103.8386 1.3125...\n505      F      F LINESTRING (103.8438 1.3137...\n506      F      F LINESTRING (103.8408 1.3146...\n507      F      F LINESTRING (103.8393 1.3134...\n508      F      F LINESTRING (103.8372 1.3146...\n509      F      F LINESTRING (103.8318 1.3050...\n510      F      F LINESTRING (103.8348 1.3004...\n511      F      F LINESTRING (103.8305 1.3032...\n\n\nSince it is in WGS 84 format, we will standardise the crs\n\nroad_sg_sf &lt;- st_transform(road_sg_sf, crs= 3414) \nst_crs(road_sg_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n2.3 SG Boundary (mpsz_sf)\nLet’s use st_read() function to read the Master Plan Subzone Boundary file, and import it into mpsz_sf\n\n# Check if the data is already loaded\nif (!exists(\"mpsz_sf\")) {\n  # Import data if not loaded\n  mpsz_sf &lt;- st_read(dsn = \"data/geospatial/MPSZ-2019\", layer = \"MPSZ-2019\")\n}\n\nReading layer `MPSZ-2019' from data source \n  `C:\\glimjw\\IS415-GAA\\Take-home_Ex\\Take-home_Ex01\\data\\geospatial\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nLet’s check the referencing system info of this mpsz_sf\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nSince it is in WGS 84 format, we will standardise the crs\n\nmpsz_sf &lt;- st_transform(mpsz_sf, crs= 3414) \nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nLet’s plot mpsz to see how it looks like\n\n# Set tmap mode to plotting \ntmap_mode(\"plot\") \n# Plot the map \ntm_shape(mpsz_sf) + \n  tm_borders() + \n  tm_layout(frame = FALSE) + \n  tm_basemap(server = \"Stamen.TonerLite\") + \n  tm_shape(mpsz_sf) + \n  tm_borders(lwd = 0.5) + \n  tm_layout(legend.show = FALSE) \n\n\n\n\nNow, let’s combine both mpsz_sf and origin_sf\n\ntm_shape(mpsz_sf) + \n  tm_polygons() + \n  tm_shape(origin_sf) + \n  tm_dots()\n\n\n\n\n\n\n2.4 Convert our sf data frames to sp’s spatial* class\nConvert origin_sf to sp’s spatial* class\n\norigin &lt;- as_Spatial(origin_sf) \nmpsz &lt;- as_Spatial(mpsz_sf)\n\n\n\n2.5 Convert our spatial* class into sp format\nConvert origin and mpsz to sp format\n\norigin_sp &lt;- as(origin, \"SpatialPoints\") \nmpsz_sp &lt;- as(mpsz, \"SpatialPolygons\")\n\n\n\n2.6 Convert our sp format into ppp\nConvert origin_sp to ppp format\n\nlibrary(spatstat)\n\n# Assuming origin_sp is a SpatialPoints object\ncoords &lt;- coordinates(origin_sp)\n\n# Create a rectangular window covering the entire extent of the points\nwindow &lt;- owin(xrange = range(coords[, 1]), yrange = range(coords[, 2]))\n\n# Create a ppp object with the adjusted window\norigin_ppp &lt;- ppp(coords[, 1], coords[, 2], window = window)\n\norigin_ppp\n\nPlanar point pattern: 28000 points\nwindow: rectangle = [3661.47, 49845.23] x [25201.14, 49685.08] units\n\nplot(origin_ppp)\n\n\n\n\n\n\n2.7 Creating the owin object\n\nmpsz_owin &lt;- as.owin(mpsz_sp) \n\nLet’s plot the new owin\n\nplot(mpsz_owin)\n\n\n\n\n\nsummary(mpsz_owin)\n\nWindow: polygonal boundary\n387 separate polygons (13 holes)\n                   vertices         area relative.area\npolygon 1               299  1.84404e+06      2.35e-03\npolygon 2               165  3.92563e+05      5.00e-04\npolygon 3               239  5.06589e+05      6.46e-04\npolygon 4              1265  3.29427e+07      4.20e-02\npolygon 5 (hole)          3 -3.79135e-02     -4.83e-11\npolygon 6               487  2.06117e+06      2.63e-03\npolygon 7               264  1.50631e+06      1.92e-03\npolygon 8                65  8.42861e+04      1.07e-04\npolygon 9                47  3.82087e+04      4.87e-05\npolygon 10               22  6.74651e+03      8.60e-06\npolygon 11              133  3.88733e+05      4.95e-04\npolygon 12              255  1.59034e+06      2.03e-03\npolygon 13              234  2.08755e+06      2.66e-03\npolygon 14              227  1.10308e+06      1.41e-03\npolygon 15              145  9.61782e+05      1.23e-03\npolygon 16               19  3.09221e+04      3.94e-05\npolygon 17               37  1.29481e+04      1.65e-05\npolygon 18               10  6.60195e+03      8.41e-06\npolygon 19               30  4.28933e+03      5.47e-06\npolygon 20                4  9.47108e+01      1.21e-07\npolygon 21             1045  4.44510e+06      5.66e-03\npolygon 22 (hole)        13 -3.91907e+02     -4.99e-07\npolygon 23              232  4.72886e+05      6.03e-04\npolygon 24               15  4.03300e+04      5.14e-05\npolygon 25               14  5.86546e+03      7.47e-06\npolygon 26             1020  1.27781e+06      1.63e-03\npolygon 27 (hole)         7 -6.28298e-05     -8.01e-14\npolygon 28 (hole)         3 -3.23305e-04     -4.12e-13\npolygon 29 (hole)         3 -1.20875e-01     -1.54e-10\npolygon 30 (hole)        12 -5.81913e-01     -7.41e-10\npolygon 31 (hole)         4 -6.55702e-01     -8.36e-10\npolygon 32              211  4.70521e+05      6.00e-04\npolygon 33              155  2.67502e+05      3.41e-04\npolygon 34              129  9.53761e+04      1.22e-04\npolygon 35               94  5.96187e+04      7.60e-05\npolygon 36               59  3.43150e+04      4.37e-05\npolygon 37               10  4.90942e+02      6.26e-07\npolygon 38                6  4.50259e+02      5.74e-07\npolygon 39                4  2.69313e+02      3.43e-07\npolygon 40             1432  4.87153e+06      6.21e-03\npolygon 41 (hole)         4 -1.72650e-04     -2.20e-13\npolygon 42 (hole)         3 -2.33435e-03     -2.97e-12\npolygon 43 (hole)         3 -1.37223e-02     -1.75e-11\npolygon 44 (hole)        11 -8.36705e+01     -1.07e-07\npolygon 45               75  1.73526e+04      2.21e-05\npolygon 46               40  1.38607e+04      1.77e-05\npolygon 47               83  5.28920e+03      6.74e-06\npolygon 48              139  3.22293e+03      4.11e-06\npolygon 49              148  3.10395e+03      3.96e-06\npolygon 50              106  3.04104e+03      3.88e-06\npolygon 51               45  2.51218e+03      3.20e-06\npolygon 52              442  3.45157e+06      4.40e-03\npolygon 53               84  1.03238e+05      1.32e-04\npolygon 54              102  1.12730e+06      1.44e-03\npolygon 55             1179  2.69866e+06      3.44e-03\npolygon 56               88  5.33463e+05      6.80e-04\npolygon 57               95  1.45519e+05      1.85e-04\npolygon 58               55  6.35704e+05      8.10e-04\npolygon 59               53  2.76827e+05      3.53e-04\npolygon 60              114  6.36650e+04      8.11e-05\npolygon 61               83  1.96620e+05      2.51e-04\npolygon 62               33  3.65333e+05      4.66e-04\npolygon 63              110  1.45503e+06      1.85e-03\npolygon 64              135  8.53207e+05      1.09e-03\npolygon 65              196  1.07072e+06      1.36e-03\npolygon 66               47  5.33013e+05      6.79e-04\npolygon 67               85  4.42298e+05      5.64e-04\npolygon 68               38  4.11723e+05      5.25e-04\npolygon 69              227  5.87223e+05      7.48e-04\npolygon 70               35  3.94379e+04      5.03e-05\npolygon 71               96  1.88767e+05      2.41e-04\npolygon 72               59  1.33007e+05      1.69e-04\npolygon 73               47  4.48128e+05      5.71e-04\npolygon 74               31  5.21201e+05      6.64e-04\npolygon 75               17  3.50788e+05      4.47e-04\npolygon 76               54  2.61844e+05      3.34e-04\npolygon 77              152  1.63038e+06      2.08e-03\npolygon 78              181  5.61609e+05      7.16e-04\npolygon 79               47  1.60807e+05      2.05e-04\npolygon 80               49  5.95247e+05      7.58e-04\npolygon 81               49  3.87612e+05      4.94e-04\npolygon 82               59  1.03038e+06      1.31e-03\npolygon 83               83  5.51732e+05      7.03e-04\npolygon 84               69  2.90185e+05      3.70e-04\npolygon 85              217  1.08479e+06      1.38e-03\npolygon 86               41  6.28893e+05      8.01e-04\npolygon 87              226  1.82685e+06      2.33e-03\npolygon 88               56  2.93695e+05      3.74e-04\npolygon 89              256  5.57276e+05      7.10e-04\npolygon 90               48  5.56813e+04      7.10e-05\npolygon 91               60  1.16330e+05      1.48e-04\npolygon 92              352  2.00345e+06      2.55e-03\npolygon 93              129  2.43459e+06      3.10e-03\npolygon 94               59  3.10534e+05      3.96e-04\npolygon 95              114  1.38034e+06      1.76e-03\npolygon 96              134  1.95176e+06      2.49e-03\npolygon 97              270  4.51538e+05      5.75e-04\npolygon 98               80  6.97502e+05      8.89e-04\npolygon 99              124  1.72655e+05      2.20e-04\npolygon 100             277  1.09783e+06      1.40e-03\npolygon 101             137  1.05800e+06      1.35e-03\npolygon 102             313  2.79680e+06      3.56e-03\npolygon 103             496  3.05099e+06      3.89e-03\npolygon 104             139  3.36221e+05      4.28e-04\npolygon 105              62  7.42203e+05      9.46e-04\npolygon 106             114  1.07899e+06      1.37e-03\npolygon 107             322  4.60550e+05      5.87e-04\npolygon 108             198  5.43484e+05      6.93e-04\npolygon 109              51  2.78304e+05      3.55e-04\npolygon 110             694  1.77060e+06      2.26e-03\npolygon 111             297  8.86955e+05      1.13e-03\npolygon 112             182  2.18808e+05      2.79e-04\npolygon 113             130  2.00787e+05      2.56e-04\npolygon 114             169  7.10569e+05      9.05e-04\npolygon 115              34  7.48684e+05      9.54e-04\npolygon 116             173  3.68483e+05      4.70e-04\npolygon 117             298  7.60621e+06      9.69e-03\npolygon 118             239  2.21998e+05      2.83e-04\npolygon 119             130  2.80175e+05      3.57e-04\npolygon 120             141  2.14250e+05      2.73e-04\npolygon 121              83  1.73122e+05      2.21e-04\npolygon 122             192  5.91779e+05      7.54e-04\npolygon 123             174  1.75348e+06      2.23e-03\npolygon 124             193  3.40743e+05      4.34e-04\npolygon 125             219  3.29438e+05      4.20e-04\npolygon 126              88  1.70664e+05      2.17e-04\npolygon 127             218  1.34616e+06      1.72e-03\npolygon 128              27  1.71334e+05      2.18e-04\npolygon 129              84  4.96260e+04      6.32e-05\npolygon 130             199  1.93992e+05      2.47e-04\npolygon 131              77  1.20171e+05      1.53e-04\npolygon 132             273  6.14924e+05      7.84e-04\npolygon 133             108  1.02656e+06      1.31e-03\npolygon 134             154  1.67537e+05      2.13e-04\npolygon 135              81  1.16002e+06      1.48e-03\npolygon 136              92  2.34938e+06      2.99e-03\npolygon 137              86  9.63495e+05      1.23e-03\npolygon 138              35  4.85022e+05      6.18e-04\npolygon 139              82  1.88131e+06      2.40e-03\npolygon 140             103  1.42508e+06      1.82e-03\npolygon 141              60  2.38728e+06      3.04e-03\npolygon 142              74  1.22989e+06      1.57e-03\npolygon 143             123  9.63925e+05      1.23e-03\npolygon 144              75  1.26341e+06      1.61e-03\npolygon 145              50  3.69771e+05      4.71e-04\npolygon 146              83  3.20366e+06      4.08e-03\npolygon 147              96  1.10727e+06      1.41e-03\npolygon 148              43  5.54624e+05      7.07e-04\npolygon 149             126  3.38724e+06      4.32e-03\npolygon 150              94  1.87800e+06      2.39e-03\npolygon 151              40  8.67750e+05      1.11e-03\npolygon 152              55  6.39144e+05      8.14e-04\npolygon 153              39  3.26015e+06      4.15e-03\npolygon 154              54  4.11404e+05      5.24e-04\npolygon 155              75  4.18657e+05      5.33e-04\npolygon 156             104  2.09818e+06      2.67e-03\npolygon 157              91  1.52455e+06      1.94e-03\npolygon 158              74  2.18107e+05      2.78e-04\npolygon 159             105  2.13519e+05      2.72e-04\npolygon 160             215  2.47266e+06      3.15e-03\npolygon 161 (hole)       38 -7.79904e+03     -9.94e-06\npolygon 162               4  1.41753e-02      1.81e-11\npolygon 163             608  1.94141e+06      2.47e-03\npolygon 164             325  2.12118e+06      2.70e-03\npolygon 165             119  4.85572e+05      6.19e-04\npolygon 166             102  7.56926e+05      9.65e-04\npolygon 167             118  3.51305e+05      4.48e-04\npolygon 168              69  1.31292e+06      1.67e-03\npolygon 169              67  9.47453e+05      1.21e-03\npolygon 170             100  7.49199e+05      9.55e-04\npolygon 171              93  1.05203e+06      1.34e-03\npolygon 172              92  4.10939e+05      5.24e-04\npolygon 173              72  8.39679e+05      1.07e-03\npolygon 174             184  1.22706e+06      1.56e-03\npolygon 175             120  5.58761e+05      7.12e-04\npolygon 176             212  2.09609e+06      2.67e-03\npolygon 177              88  7.22589e+05      9.21e-04\npolygon 178             281  2.55046e+06      3.25e-03\npolygon 179              34  2.04263e+06      2.60e-03\npolygon 180              70  3.26040e+06      4.15e-03\npolygon 181             119  2.15829e+06      2.75e-03\npolygon 182             140  1.34746e+06      1.72e-03\npolygon 183              60  2.33891e+06      2.98e-03\npolygon 184             111  4.29714e+06      5.48e-03\npolygon 185             110  9.91057e+05      1.26e-03\npolygon 186             383  2.03851e+06      2.60e-03\npolygon 187             125  2.57843e+06      3.29e-03\npolygon 188              91  3.18758e+06      4.06e-03\npolygon 189              35  2.56100e+06      3.26e-03\npolygon 190             112  7.35502e+05      9.37e-04\npolygon 191             124  9.48159e+05      1.21e-03\npolygon 192             132  1.31911e+06      1.68e-03\npolygon 193              60  2.99731e+06      3.82e-03\npolygon 194             122  1.37683e+06      1.75e-03\npolygon 195             129  1.92662e+06      2.45e-03\npolygon 196             374  4.13716e+06      5.27e-03\npolygon 197              79  1.06189e+06      1.35e-03\npolygon 198              75  1.79446e+06      2.29e-03\npolygon 199             101  3.47525e+06      4.43e-03\npolygon 200              94  1.23166e+06      1.57e-03\npolygon 201             237  1.97413e+06      2.52e-03\npolygon 202             132  1.77073e+06      2.26e-03\npolygon 203             210  1.78725e+05      2.28e-04\npolygon 204              91  1.49663e+04      1.91e-05\npolygon 205              71  8.18750e+03      1.04e-05\npolygon 206              84  2.25924e+06      2.88e-03\npolygon 207              58  8.59179e+05      1.09e-03\npolygon 208              71  1.94861e+06      2.48e-03\npolygon 209              87  1.07862e+06      1.37e-03\npolygon 210             151  3.02315e+06      3.85e-03\npolygon 211              35  4.41733e+05      5.63e-04\npolygon 212              60  9.72128e+05      1.24e-03\npolygon 213              94  1.23590e+06      1.57e-03\npolygon 214             101  1.63984e+06      2.09e-03\npolygon 215             107  2.54311e+06      3.24e-03\npolygon 216              83  9.55710e+05      1.22e-03\npolygon 217              58  3.16882e+05      4.04e-04\npolygon 218              94  1.04642e+06      1.33e-03\npolygon 219              63  9.21431e+05      1.17e-03\npolygon 220              57  2.39334e+06      3.05e-03\npolygon 221              52  6.84704e+05      8.72e-04\npolygon 222             159  1.08508e+06      1.38e-03\npolygon 223              44  1.97494e+06      2.52e-03\npolygon 224             141  4.14132e+06      5.28e-03\npolygon 225             159  4.34375e+06      5.53e-03\npolygon 226              59  1.51553e+06      1.93e-03\npolygon 227              60  9.44998e+05      1.20e-03\npolygon 228             191  1.99363e+06      2.54e-03\npolygon 229             113  2.07797e+06      2.65e-03\npolygon 230             136  3.14493e+06      4.01e-03\npolygon 231             195  2.63648e+06      3.36e-03\npolygon 232              80  1.05717e+06      1.35e-03\npolygon 233              56  1.28795e+06      1.64e-03\npolygon 234              69  4.39647e+05      5.60e-04\npolygon 235              50  7.46882e+05      9.52e-04\npolygon 236              61  4.46242e+05      5.69e-04\npolygon 237              72  5.72502e+05      7.30e-04\npolygon 238              79  8.13383e+05      1.04e-03\npolygon 239              94  1.48430e+06      1.89e-03\npolygon 240             342  1.97707e+06      2.52e-03\npolygon 241              97  1.03728e+06      1.32e-03\npolygon 242             167  2.82095e+06      3.59e-03\npolygon 243              56  9.24763e+05      1.18e-03\npolygon 244             119  1.80638e+06      2.30e-03\npolygon 245              64  1.40454e+06      1.79e-03\npolygon 246              91  2.37933e+06      3.03e-03\npolygon 247             182  2.77330e+06      3.53e-03\npolygon 248             131  3.46851e+06      4.42e-03\npolygon 249             452  7.65582e+06      9.76e-03\npolygon 250             108  2.77750e+06      3.54e-03\npolygon 251              40  9.06317e+05      1.15e-03\npolygon 252              41  3.80202e+05      4.84e-04\npolygon 253              82  5.27472e+05      6.72e-04\npolygon 254              77  8.00299e+05      1.02e-03\npolygon 255             147  8.98555e+05      1.14e-03\npolygon 256             154  1.79616e+06      2.29e-03\npolygon 257             130  2.25124e+06      2.87e-03\npolygon 258             125  7.76142e+05      9.89e-04\npolygon 259             105  2.20631e+06      2.81e-03\npolygon 260             107  1.18013e+06      1.50e-03\npolygon 261             174  1.79346e+06      2.29e-03\npolygon 262             112  3.91607e+06      4.99e-03\npolygon 263             148  2.17538e+06      2.77e-03\npolygon 264             141  3.62301e+06      4.62e-03\npolygon 265              80  1.43291e+06      1.83e-03\npolygon 266             114  4.38842e+06      5.59e-03\npolygon 267             162  1.20044e+06      1.53e-03\npolygon 268             128  1.34017e+06      1.71e-03\npolygon 269             318  8.50229e+06      1.08e-02\npolygon 270 (hole)      317 -5.11280e+04     -6.51e-05\npolygon 271             368  1.37341e+06      1.75e-03\npolygon 272              67  1.43138e+05      1.82e-04\npolygon 273              64  4.36369e+05      5.56e-04\npolygon 274             127  1.51149e+06      1.93e-03\npolygon 275             152  2.45625e+06      3.13e-03\npolygon 276              80  1.28721e+06      1.64e-03\npolygon 277              32  8.42668e+05      1.07e-03\npolygon 278              61  1.33353e+06      1.70e-03\npolygon 279              50  1.00741e+06      1.28e-03\npolygon 280             165  8.94516e+05      1.14e-03\npolygon 281              76  9.11208e+05      1.16e-03\npolygon 282              43  1.14381e+06      1.46e-03\npolygon 283              95  1.32888e+06      1.69e-03\npolygon 284             114  6.01727e+05      7.67e-04\npolygon 285              66  7.63183e+05      9.72e-04\npolygon 286              68  9.24866e+05      1.18e-03\npolygon 287              55  8.62737e+05      1.10e-03\npolygon 288             105  1.58344e+06      2.02e-03\npolygon 289              43  8.46137e+05      1.08e-03\npolygon 290             122  1.74439e+06      2.22e-03\npolygon 291              76  1.00320e+06      1.28e-03\npolygon 292              68  1.09569e+06      1.40e-03\npolygon 293              53  6.68454e+05      8.52e-04\npolygon 294              69  6.24878e+05      7.96e-04\npolygon 295              85  6.74992e+05      8.60e-04\npolygon 296             123  2.33068e+06      2.97e-03\npolygon 297              68  1.09321e+06      1.39e-03\npolygon 298              83  1.86187e+06      2.37e-03\npolygon 299              45  9.09419e+05      1.16e-03\npolygon 300             102  2.10616e+06      2.68e-03\npolygon 301             204  3.33419e+06      4.25e-03\npolygon 302             285  1.71970e+06      2.19e-03\npolygon 303              87  1.08864e+06      1.39e-03\npolygon 304              81  1.56903e+06      2.00e-03\npolygon 305              83  1.46451e+06      1.87e-03\npolygon 306             256  9.97938e+05      1.27e-03\npolygon 307              59  1.46053e+06      1.86e-03\npolygon 308              47  1.49668e+06      1.91e-03\npolygon 309             153  1.66709e+06      2.12e-03\npolygon 310              81  2.39163e+06      3.05e-03\npolygon 311              52  1.37871e+06      1.76e-03\npolygon 312             100  9.23215e+05      1.18e-03\npolygon 313             246  5.32542e+06      6.79e-03\npolygon 314             100  1.41803e+06      1.81e-03\npolygon 315              50  1.48925e+06      1.90e-03\npolygon 316             117  5.18613e+06      6.61e-03\npolygon 317              77  2.20921e+06      2.82e-03\npolygon 318              79  1.26204e+06      1.61e-03\npolygon 319              40  1.25241e+06      1.60e-03\npolygon 320             779  3.71587e+07      4.73e-02\npolygon 321             125  1.54073e+06      1.96e-03\npolygon 322             378  1.63581e+06      2.08e-03\npolygon 323             361  2.24122e+06      2.86e-03\npolygon 324              71  2.35997e+05      3.01e-04\npolygon 325             265  5.86424e+06      7.47e-03\npolygon 326             103  4.47203e+06      5.70e-03\npolygon 327              75  5.00139e+05      6.37e-04\npolygon 328              86  6.97637e+05      8.89e-04\npolygon 329             306  1.13095e+06      1.44e-03\npolygon 330              86  1.45916e+06      1.86e-03\npolygon 331              42  7.84712e+05      1.00e-03\npolygon 332              68  1.04642e+06      1.33e-03\npolygon 333              59  8.99103e+05      1.15e-03\npolygon 334              28  7.80760e+05      9.95e-04\npolygon 335             323  4.82857e+05      6.15e-04\npolygon 336             235  4.80393e+06      6.12e-03\npolygon 337             245  4.70675e+05      6.00e-04\npolygon 338             667  3.56692e+07      4.55e-02\npolygon 339              97  9.13524e+04      1.16e-04\npolygon 340             128  1.71195e+06      2.18e-03\npolygon 341             163  2.96147e+06      3.77e-03\npolygon 342             130  1.25974e+06      1.61e-03\npolygon 343               3  6.44872e-01      8.22e-10\npolygon 344             112  3.29141e+06      4.19e-03\npolygon 345             102  1.57600e+06      2.01e-03\npolygon 346             124  1.66419e+06      2.12e-03\npolygon 347              94  1.76925e+06      2.25e-03\npolygon 348            1954  6.85075e+07      8.73e-02\npolygon 349              30  2.80002e+04      3.57e-05\npolygon 350              27  1.50315e+04      1.92e-05\npolygon 351             103  2.05005e+06      2.61e-03\npolygon 352             129  1.51777e+06      1.93e-03\npolygon 353             117  5.95652e+05      7.59e-04\npolygon 354             719  5.40368e+07      6.89e-02\npolygon 355             709  1.28815e+07      1.64e-02\npolygon 356              77  3.29939e+05      4.20e-04\npolygon 357              44  2.26577e+03      2.89e-06\npolygon 358             193  2.14708e+06      2.74e-03\npolygon 359              90  1.51100e+06      1.93e-03\npolygon 360             125  9.36416e+05      1.19e-03\npolygon 361             148  1.64863e+06      2.10e-03\npolygon 362             102  1.09939e+06      1.40e-03\npolygon 363             158  3.65203e+06      4.65e-03\npolygon 364             263  3.28413e+06      4.18e-03\npolygon 365             118  2.55346e+06      3.25e-03\npolygon 366              49  9.61422e+05      1.23e-03\npolygon 367             112  1.28130e+06      1.63e-03\npolygon 368              26  7.58123e+05      9.66e-04\npolygon 369              76  9.05921e+05      1.15e-03\npolygon 370             285  1.61128e+06      2.05e-03\npolygon 371              66  1.26165e+06      1.61e-03\npolygon 372            1633  1.74954e+07      2.23e-02\npolygon 373             164  3.45046e+06      4.40e-03\npolygon 374              65  1.74336e+06      2.22e-03\npolygon 375              73  1.39448e+06      1.78e-03\npolygon 376             141  1.07438e+06      1.37e-03\npolygon 377             535  2.45095e+06      3.12e-03\npolygon 378             373  7.05426e+06      8.99e-03\npolygon 379             209  7.23576e+06      9.22e-03\npolygon 380             103  2.20675e+06      2.81e-03\npolygon 381             269  3.84951e+06      4.91e-03\npolygon 382             103  6.87914e+05      8.77e-04\npolygon 383              75  5.46394e+05      6.96e-04\npolygon 384             103  1.96414e+06      2.50e-03\npolygon 385             734  2.77044e+07      3.53e-02\npolygon 386              71  5.63061e+03      7.17e-06\npolygon 387              10  1.99717e+02      2.54e-07\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 784784000 square units\nFraction of frame area: 0.423\n\n\n\n\n2.8 Combining ppp with owin object\nLet’s combine the ppp with the newly created owin object\n\n# Now you can use this mpsz_owin object in your ppp operation  \noriginMPSZ_ppp &lt;- origin_ppp[mpsz_owin] \nplot(originMPSZ_ppp)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#kernel-density-estimation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#kernel-density-estimation",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab hailing services in Singapore",
    "section": "3 Kernel Density Estimation",
    "text": "3 Kernel Density Estimation\n\n3.1 Computing the kernel density estimation (KDE) of grab hailing services\nThe purpose of KDE is to apply the function to each data point, and thereafter it will averages the location of that point with respect to the location of another data point, based on bandwidth of the kernel.\nLet’s compute the KDE\n\nkde_originMPSZ_bw &lt;- density(originMPSZ_ppp, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")  \nplot(kde_originMPSZ_bw)\n\n\n\n\nSince the unit of measurement is pretty small, let’s re-scale it to km.\n\noriginMPSZ_ppp.km &lt;- rescale(originMPSZ_ppp, 1000, \"km\") \nkde_originMPSZ_ppp.bw &lt;- density(originMPSZ_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")  \nplot(kde_originMPSZ_ppp.bw)\n\n\n\n\n\n\n3.2 Observations from kernel density estimation (KDE) of grab hailing services\nBased on the plot, we can see that:\n- There is a higher density in the East side, which is a small part that is in yellow. We can say that there are more trips originating from the East side.\n- There are other parts of the island that has mini purple dots, indicating that there is a medium density. This could show that there is a relatively normal ride demand across the island.\n- Apart of the above, the island is mostly in blue from the first sight. So it indicate that the ridership for grab is not really high.\n\n\n3.3 Zooming into kernel density estimation (KDE) of grab hailing services in the east\nLet’s extract the Eastern Region area to look deeper into the high density. We will also extract the Western and Central Region areas for comparison usage.\n\neast = mpsz[mpsz@data$REGION_N == \"EAST REGION\",]\nwest = mpsz[mpsz@data$REGION_N == \"WEST REGION\",]\ncentral = mpsz[mpsz@data$REGION_N == \"CENTRAL REGION\",]\n\npar(mfrow=c(2,2))\nplot(east, main = \"East Region\")\nplot(west, main = \"West Region\")\nplot(central, main = \"Central Region\")\n\n\n\n\nConvert the Eastern Region area to generic sp format\n\neast_sp = as(east, \"SpatialPolygons\")\nwest_sp = as(west, \"SpatialPolygons\")\ncentral_sp = as(central, \"SpatialPolygons\")\n\nCreate the owin object for it\n\neast_owin = as(east_sp, \"owin\")\nwest_owin = as(west_sp, \"owin\")\ncentral_owin = as(central_sp, \"owin\")\n\nLet’s combine the grab points with the Eastern Region area\n\ngrab_east_ppp = origin_ppp[east_owin]\ngrab_west_ppp = origin_ppp[west_owin]\ngrab_central_ppp = origin_ppp[central_owin]\n\nLet’s transform the unit of measurement to km\n\ngrab_east_ppp.km = rescale(grab_east_ppp, 1000, \"km\")\ngrab_west_ppp.km = rescale(grab_west_ppp, 1000, \"km\")\ngrab_central_ppp.km = rescale(grab_central_ppp, 1000, \"km\")\n\n\n3.3.1 Let’s plot the Eastern and Western Regions area and compare it\n\npar(mfrow=c(1,2))\nplot(grab_east_ppp.km, main=\"East Region\")\nplot(grab_west_ppp.km, main=\"West Region\")\n\n\n\n\nNote: We can see that the western region has more grab rides, as there are more grab origin points as shown by the darker area.\nLet’s compare the KDE of both Eastern and Western Regions\n\npar(mfrow=c(1,2))\nplot(density(grab_east_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Eastern Region\")\nplot(density(grab_west_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Western Region\")\n\n\n\n\nEven though, the KDE density of whole Singapore map indicates that there is a high density on the Eastern Region of the island.\nHowever, when we plot the Origin points of both the Eastern and Western Regions, we noticed that there are actually more grab origin points in the Western Region as oppose to the main map.\nWhen we plot the KDE density of both the Eastern and Western regions of island, we noticed that there were more points with high density in the western region. However, in the Eastern Region, we can see that there is a high density situated at one point, apart from the other tiny points of high density.\nLet’s zoom in and see the KDE density of the Eastern Region. It looks like the area with high density is situated at Changi Airport area.\nSet up our Changi Airport area\n\nChangiAirport = mpsz[mpsz@data$SUBZONE_N == \"CHANGI AIRPORT\",]\nChangiAirport_sp = as(ChangiAirport, \"SpatialPolygons\")\nChangiAirport_owin = as(ChangiAirport_sp, \"owin\")\nChangiAirport_ppp = origin_ppp[ChangiAirport_owin]\nChangiAirport_ppp.km = rescale(ChangiAirport_ppp, 1000, \"km\")\n\nLet’s plot and compare\n\npar(mfrow=c(1,2))\nplot(density(grab_east_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Eastern Region\")\nplot(density(ChangiAirport_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Changi Airport\")\n\n\n\n\nWe could see that, indeed, the line with high density is situated at Changi Airport within the Eastern Region. We can indicate that there is a significantly high volume of grab rides originating from Changi Airport."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#network-constrained-kde-netkde-analysis",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#network-constrained-kde-netkde-analysis",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab hailing services in Singapore",
    "section": "4 Network Constrained KDE (NetKDE) Analysis",
    "text": "4 Network Constrained KDE (NetKDE) Analysis\nWe will perform NetKDE to estimate the intensity of grab hailing across a map.\n\n4.1 Preparing the area for analysis\nWe will filter the specific portion that we want to look into. In this case, we will filter the Changi Airport portion of the whole Singapore island. As we know that Changi Airport is located along the Airport Boulevard, we will filter it out using that name.\n…\nAs you can see from the plot, we could clearly see there is a significant high level of spatial data points along the Airport Boulevard, which indicates that there are many grab rides originating from the Airport. This further explains the KDE results that we have seen earlier. We can imply from the plots that there are a signifantly high amount of grab rides originating from the Airport, while there are a normal level of grab rides originating from other regions of the island."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#conclusion",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#conclusion",
    "title": "Take-home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab hailing services in Singapore",
    "section": "5 Conclusion",
    "text": "5 Conclusion\nWith the use of geospatial analytics tools like KDE and NKDE, we could see the obvious trend in our data. Instead of plotting graphs to see the trend, we could utilise the geosptial tools like tmaps to plot the map, and plot the spatial points on the map, so it would be useful for us to see the trend at the first glance. The KDE and Network KDE provides us with a more in-depth insight in the density of our data on the map. This is because if we simply plot the tmap with the spatial data points, we may not be able to obviously find the interesting area of focus on the map as the map would be full of black dots. However, with the help of KDE and NKDE, we are able to see the trend clearly via the density, which are indicated with different colours."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-import-wrangling-and-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-import-wrangling-and-analysis",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "2 Data Import, Wrangling and Analysis",
    "text": "2 Data Import, Wrangling and Analysis\nThis is where we import the data and prepare it before analysis.\nLet’s use st_read() of sf package to import these two geospatial data sets into R. And we will be using other functions to prepare our data upon importing them. Moreover, we will also perform some simple operation on the datasets to gather some basic analysis.\nThe 2 data sets are:\n\nTAIWAN_VILLAGE_2020, a geospatial data of village boundary of Taiwan. It is in ESRI shapefile format. The data is in Taiwan Geographic Coordinate System. (Source: Historical map data of the village boundary: TWD97 longitude and latitude)\nDengue_Daily.csv, an aspatial data of reported dengue cases in Taiwan since 1998. (Source: Dengue Daily Confirmed Cases Since 1998. Below are selected fields that are useful for this study:\n\n發病日: Onset date\n最小統計區中心點X: x-coordinate\n最小統計區中心點Y: y-coordinate\n\n\n\n2.1 Taiwan Village Data (taiwan_village_sf)\n\n2.1.1 Import the csv data (TAINAN_VILLAGE.shp)\nFirstly, we will import the data for the Taiwan Village Data\n\n\nCode\ntaiwan_village_sf &lt;- st_read(dsn = \"data/geospatial\", layer = \"TAINAN_VILLAGE\")\n\n\nLet’s check the referencing system info of this taiwan_village_sf\n\n\nCode\nst_crs(taiwan_village_sf)\n\n\n\n\n2.1.2 Filtering the taiwan_village_sf.\nCurrently, we have 649 rows of data in taiwan_village_sf.\n\nTherefore, we have to filter the taiwan_village_sf for village level of D01, D02, D04, D06, D07, D08, D32, and D39 of the Tainan City, Taiwan\nNow, filtered_taiwan_village_sf will consist of 258 rows of data. This will help to reduce the amount of data that is needed to be processed in the later parts.\n\n\n\n2.1.3 Saving it to RDS\nSince we’re happy with the dataset for filtered_taiwan_village_sf, let’s save it to a rds so that it would be easier for us to retrieve it in the future\nImport the filtered_taiwan_village_sf rds data\n\n\n2.1.4 Visualise the dataset by plotting it\nLet’s visualise how filtered_taiwan_village_sf looks like when we plot it\n\n\n\n\n\n\n\n\n2.2 Dengue Data (dengue_sf)\n\n2.2.1 Import the csv data (Dengue_Daily.csv)\nFirstly, we will import the data for the Dengue Data\n\n\nCode\ndengue_sf &lt;- read_csv(\"data/aspatial/Dengue_Daily.csv\")\n\n\nAs dengue_sf consists of 106861 rows of data, with 26 types of variables, as shown below. Therefore we need to filter it\n\n\n\n2.2.2 Filtering the dengue_sf\nLet’s filter dengue_sf for fever cases that are confined to epidemiology week 31-50 of 2023, as well as the selected variables which we will be working with (發病日: Onset date, 居住縣市: County, 居住鄉鎮: Town, 居住村里: Village, 最小統計區中心點X: x-coordinate, 最小統計區中心點Y: y-coordinate)\nIn the code chunk above, we filtered the specific data that falls under the weeks that we are interested to look into. Moreover, we also use the “select” line to select the specific variables that we deemed useful for our research.\nAfter filtering dengue_sf, and storing it in filtered_dengue_sf, the amount of data has reduced significantly from 106861 rows of data in dengue_sf, to 25480 rows of data in filtered_dengue_sf (with 3 types of variables).\n\nLet’s check the data type of each variable before we proceed to performing left-join\nLet’s transform some of our variables and prepare it for the left-join operation in step 2.3\n\nSince the X and Y coordinates are in string format, we need to convert it to numeric.\nThis is the same for onset date where we need to convert it to date format\n\nLet’s create 3 different variables that stores the week number, month and day respectively. This is to facilitate our research and analysis in the later parts of this take-home exercise.\nHowever, in our dengue dataset, we have noticed that there are rows of data with no village name. As our research is focused mainly on the village level, we will remove the rows with village name = “None”. [SKIP FIRST]\n\n\n\n2.2.3 Basic Analysis of filtered_dengue_sf dataset\nSince we have the finalised filtered_dengue_sf, it is important for us to create a new table to store the number of cases, grouped by the day and village. We will store it in cases_by_day_village dataset.\nA snippet of the resulting dataset for cases_by_day_village looks like this:\n\nIn addition to the cases_by_day_village dataset, it would be useful for us to create a new table to store the total number of cases, grouped by the week and village. We will store it in cases_by_week_village dataset.\nA snippet of the resulting dataset for cases_by_week_village looks like this:\n\nWe kept the X and Y coordinates so that we can convert it into a spatial dataset in the future.\n\n\nTo get the number of cases in througout Tainan city during the whole epidemiology week 31-50, it would be useful for us to create a new table to store the number of cases for each village. We will store it in cases_by_village dataset.\nA snippet of the resulting dataset for cases_by_village looks like this:\n\nTo get the number of cases in a week througout Tainan city, it would be useful for us to create a new table to store the number of cases, grouped by the week alone. We will store it in cases_by_week dataset.\nA snippet of the resulting dataset for cases_by_week looks like this:\n\nNow, we have found valuable analysis from our dataset, let’s move on to the next section where we keep them in rds form.\n\n\n2.2.4 Saving it to RDS\nSince we’re happy with the dataset for filtered_taiwan_village_sf, and datasets from our analysis in 2.2.3, let’s save it to a rds so that it would be easier for us to retrieve it in the future\nImport the filtered_taiwan_village_sf rds data\nLet’s take a look at our Dengue datasets in 2.2 before we move on to 2.3 :)\nfiltered_dengue_sf\n\nI have included the 居住縣市 (County), 居住鄉鎮 (Town) and 居住村里 (Village) into the data set for easier future reference.\n\n\n\n\n\n2.3 Performing Join operation to combine both data sets\nLet’s perform a join operation to combine the variables in filtered_taiwan_village_sf and filtered_dengue_sf.\nOur goal is to perform the join operation to the cases_by_week_village and supplement it with the specific geospatial and relevant variable. We will be operating the join operation based on the Village Name of both dataset as we want to retrieve the distinct geospatial infromation from filtered_taiwan_village_sf for each dengue cases.\nThe reason for using cases_by_week_village is because we are focusing on the number of cases in each village on a weekly basis.\n\n2.3.1 Left-Join Operation and Outcome\nBefore we perform the left-join operation, we can see that the cases_by_village is not a spatial data. As for filtered_taiwan_village_sf, we have already checked the data type of the file is already in spatial data type (TWD97).\n\n\nCode\nst_crs(cases_by_week_village)\n\n\nCoordinate Reference System: NA\n\n\nTherefore we have to convert the cases_by_week_village dataset into a spatial data.\nBefore we transform it into a spatial data, we have to vet through our data in cases_by_week_village dataset. There are rows where there are “NA” values for the village name, X and Y coordinates, which could potentially cause issues in the future analysis.\n\nAnd we have to clean up the NA values before proceeding to cases_by_week_village into a spatial data.\nOne option that we could remove the NA values which could potentially create problems in our future analysis, and they wouldn’t provide us with accurate analysis. On the other hand, if we were to adopt the other option which is to find the mean / median of the x and y coordinates for the missing values, it would also affect the accuracy of our analysis.\nNow that we have cleared the NA values, let’s transform the case_by_village dataset into a sf\nThe join dataset would be named taiwan_village_dengue\nAfter performing the left-join operation, the taiwan_village_dengue dataset seems to have “NA” values. This is due to the fact that the village name (居住村里) value in the filtered_dengue_sf is not found in the list of village name (VILLNAME) in filtered_taiwan_village_sf.\n\n\nCoordinate Reference System:\n  User input: TWD97 \n  wkt:\nGEOGCRS[\"TWD97\",\n    DATUM[\"Taiwan Datum 1997\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"Taiwan, Republic of China - onshore and offshore - Taiwan Island, Penghu (Pescadores) Islands.\"],\n        BBOX[17.36,114.32,26.96,123.61]],\n    ID[\"EPSG\",3824]]\n\n\nLet’s take a look at our newly joined dataset.\n\nWe have noticed that there are “NA” values in the Num_Cases column of the newly joined dateset.\n\nSo, we have to remove it before going to the next step. We will remove the rows with has “NA” values in the epi_week_num column.\n\n\n2.3.2 Saving it to RDS\nSince we are happy with our finalised taiwan_village_dengue dataset, let’s keep it in our rds for easy reference in the future\nImport the filtered_taiwan_village_sf rds data\nLet’s take a look at our taiwan_village_dengue dataset :)\n\nLet’s plot taiwan_village_dengue and see how it looks like.\nWe will create an “total_cases_by_village” dataset to count the number of cases in each village, and thereafter plot it on tmap, so that we can easily identify which village has a higher number of cases on the map.\n\n\n\n\n\nBased on the map, we can see that there are some villages that have a significantly higher number of cases. If we look at our total_cases_by_village dataset, we can see that these are the villages with the highest number of cases.\n\n\n\n2.4 Creating Time Series Cube (spacetime) for dengue cases\nIn this section, we will create the a spatio-temporal cube for our dengue cases (dengue_st).\nWe will be using taiwan_village_dengue and filtered_taiwan_village_sf to create our spacetime data.\n\n2.4.1 Create 2 dataframes to store both taiwan_village_dengue and filtered_taiwan_village_sf datasets\nWe have to create new dataframes to store both datasets so that the original datasets won’t be overwritten.\nFirstly, we duplicate taiwan_village_dengue into cases_dengue, and filtered_taiwan_village_sf into filtered_taiwan_village_sf_filtered\nLet’s check for the number of unique villages.\n\n\n[1] 225\n\n\nSince we have 228 unique villages, we are expecting to create a spacetime data (dengue_st) with 228 x 21 = 4788 rows.\n\n\n2.4.2 Data Preparation for cases_village dataset\nLet’s check the data type of cases_village dataset.\n\n\n[1] \"sf\"         \"data.frame\"\n\n\nAs cases_village is still in sf format, we want to convert it into a df, as we are using it as a df for our spacetime operation.\nWe will also filter the “VILLNAME”, “epi_week_num” and “Num_Cases” columns which we will be using for the operation.\nWe need to convert “epi_week_num” into integer type for the spacetime operation.\nWe need to remove the duplicate rows in our cases_village_df dataset as it would affect our spacetime operation.\nLooking at our cases_village_df dataset, we noticed that there are missing rows as 0 cases are not recorded in the dataset. So, we will amend the dataset and add the rows for the respective village (and week) with 0 for weeks where there is no records.\n\n\n[1] 4725    3\n\n\nLet’s double check our epi_week_num data type. Make sure it is an integer.\n\n\n[1] \"integer\"\n\n\nLet’s double check our VILLNAME data type. Make sure it is an character.\n\n\n[1] \"character\"\n\n\nNow, we will filter filtered_taiwan_village_sf_filtered and keep the rows that has the same villages in cases_village_df.\n\n\n[1] 225\n\n\n[1] 230\n\n\nAs we can see that filtered_taiwan_village_sf_filtered has a total 233 rows, but with 228 unique village name (VILLNAME), which indicates that there is duplicated villages in the dataset. We need to remove the duplicated rows.\n\n\nNULL\n\n\nNow, after removing the duplicated rows, let’s check to make sure both datasets has 228 rows of data before we do the spacetime operation\n\n\n[1] 225\n\n\n[1] 225\n\n\n\n\n2.4.3 Spacetime Operation\nLet’s perform the spacetime operation, by setting the VILLNAME as .loc_col, and epi_week_num as .time_col.\n\n\n     VILLNAME epi_week_num Num_Cases\n1      青草里           37         1\n2      保安里           37         3\n3      赤嵌里           37         4\n4      大成里           37         2\n5      城北里           37         0\n6      城南里           37         0\n7      法華里           37         1\n8      海南里           37         8\n9      國安里           37        17\n10     溪心里           37         6\n11     淵東里           37         3\n12     城中里           37         0\n13     城東里           37         1\n14     學東里           37         1\n15     東灣里           37         2\n16     南灣里           37         2\n17     崑山里           37         4\n18     大灣里           37         1\n19     五王里           37        13\n20     安康里           37         7\n21     西橋里           37         1\n22     網寮里           37         1\n23     大橋里           37        18\n24     東橋里           37        14\n25     烏竹里           37         0\n26     王行里           37         2\n27     大智里           37         9\n28     崇文里           37         8\n29     崇成里           37         7\n30     崇明里           37         4\n31     大福里           37         2\n32     崇德里           37        15\n33     大德里           37         9\n34     崇學里           37        10\n35     和平里           37         5\n36     崇善里           37        18\n37     路東里           37         1\n38     虎尾里           37        17\n39     忠孝里           37        11\n40     裕聖里           37         5\n41     崇信里           37        24\n42     德光里           37         5\n43     復興里           37        21\n44     自強里           37        21\n45     文聖里           37         5\n46     富裕里           37         5\n47     龍山里           37         9\n48     關聖里           37         7\n49     新東里           37         6\n50     富強里           37        25\n51     泉南里           37        14\n52     東聖里           37        18\n53     東安里           37         1\n54     大同里           37         2\n55     衛國里           37         1\n56     裕農里           37        12\n57     南聖里           37         1\n58     崇誨里           37         7\n59     東門里           37         1\n60     中西里           37         2\n61     東明里           37         0\n62     圍下里           37         1\n63     東光里           37         6\n64     後甲里           37         8\n65     莊敬里           37        11\n66     小東里           37        11\n67     大學里           37         3\n68     成大里           37         4\n69     公園里           37         6\n70     中樓里           37         7\n71     賢北里           37         2\n72     大豐里           37         4\n73     大港里           37         7\n74     正覺里           37         9\n75     大和里           37         5\n76     成功里           37         6\n77     佛壇里           37         1\n78     同安里           37         1\n79     松安里           37         1\n80     永寧里           37         0\n81     喜南里           37         1\n82     喜東里           37         1\n83     喜北里           37         1\n84     南都里           37        13\n85     南華里           37         6\n86     建南里           37        14\n87     明興里           37        37\n88     郡南里           37         8\n89     開南里           37         6\n90     明亮里           37        16\n91     鯤鯓里           37         2\n92     大忠里           37         7\n93     光明里           37         9\n94     府南里           37        22\n95     大林里           37         0\n96     國宅里           37         9\n97     田寮里           37         4\n98     新生里           37         0\n99     竹溪里           37         0\n100    明德里           37         1\n101    再興里           37         8\n102    彰南里           37         0\n103    金華里           37        13\n104    新興里           37         0\n105    文南里           37         0\n106    新昌里           37         0\n107    廣州里           37         3\n108    文華里           37        13\n109    溪頂里           37        12\n110    海佃里           37        34\n111    溪東里           37        12\n112    溪北里           37        10\n113    溪墘里           37        30\n114    安富里           37        49\n115    塩田里           37         1\n116    鳳凰里           37        22\n117    公親里           37         6\n118    砂崙里           37         0\n119    文平里           37         4\n120    國平里           37         3\n121    育平里           37         5\n122    華平里           37         2\n123    怡平里           37         4\n124    建平里           37         2\n125    幸福里           37        34\n126    上崙里           37         1\n127    後壁里           37         4\n128    仁和里           37         0\n129    仁愛里           37         0\n130    仁德里           37         9\n131    興農里           37         3\n132    省躬里           37         0\n133    新田里           37         3\n134    一甲里           37         0\n135    德高里           37         7\n136    中洲里           37         0\n137    西灣里           37         3\n138    甲頂里           37        15\n139    永康里           37         5\n140    正強里           37         8\n141    漁光里           37         1\n142    金城里           37         1\n143    尚頂里           37         6\n144    神洲里           37         0\n145    復國里           37        11\n146    三合里           37         6\n147    復華里           37         0\n148    二王里           37         8\n149    東智里           37         2\n150    大恩里           37         5\n151    西湖里           37         9\n152    平安里           37         7\n153    西賢里           37         4\n154    四草里           37         0\n155    安東里           37         1\n156    淵中里           37         1\n157    城西里           37         0\n158    佃東里           37         1\n159    新順里           37         9\n160    新樹里           37         0\n161    塩行里           37         3\n162    海西里           37         2\n163    佃西里           37         0\n164    文賢里           37         0\n165    大光里           37         0\n166    南美里           37         0\n167    西和里           37         0\n168    塩洲里           37         3\n169    東興里           37         7\n170    重興里           37         4\n171    和順里           37         4\n172    力行里           37         8\n173    文成里           37         6\n174    元寶里           37         4\n175    開元里           37         4\n176    成德里           37         4\n177    永華里           37         2\n178    郡王里           37         1\n179    北灣里           37         2\n180    龍潭里           37         0\n181    埔園里           37         7\n182    三民里           37         0\n183    振興里           37         7\n184    永祥里           37         7\n185    文元里           37         8\n186    開山里           37         2\n187    大涼里           37         5\n188    藥王里           37        10\n189    光賢里           37        11\n190    二行里           37         1\n191    大甲里           37         2\n192    仁義里           37         9\n193    土庫里           37         1\n194    太子里           37         6\n195    安西里           37         0\n196    大安里           37        12\n197    安和里           37         5\n198    理想里           37        29\n199    安慶里           37        11\n200    梅花里           37        12\n201    頂安里           37        13\n202    安順里           37         6\n203    總頭里           37         3\n204    原佃里           37         2\n205    東和里           37         0\n206    光復里           37         0\n207    勝利里           37        18\n208    建國里           37         2\n209    六合里           37         5\n210    淵西里           37         4\n211    長安里           37         0\n212    中華里           37        11\n213    中興里           37         7\n214    西勢里           37         1\n215    蔦松里           37         0\n216    顯宮里           37         0\n217    州南里           37         2\n218    布袋里           37         1\n219    州北里           37         1\n220    塭南里           37         1\n221    公塭里           37         0\n222    南興里           37         0\n223    億載里           37         5\n224    平通里           37         2\n225    海東里           37         9\n226    青草里           41         1\n227    保安里           41         5\n228    赤嵌里           41         9\n229    大成里           41         4\n230    城北里           41         0\n231    城南里           41         0\n232    法華里           41         4\n233    海南里           41         1\n234    國安里           41         4\n235    溪心里           41         6\n236    淵東里           41         1\n237    城中里           41         0\n238    城東里           41         0\n239    學東里           41         0\n240    東灣里           41         1\n241    南灣里           41         1\n242    崑山里           41         1\n243    大灣里           41         0\n244    五王里           41        10\n245    安康里           41         0\n246    西橋里           41         8\n247    網寮里           41         4\n248    大橋里           41         5\n249    東橋里           41         9\n250    烏竹里           41         1\n251    王行里           41         0\n252    大智里           41         8\n253    崇文里           41         5\n254    崇成里           41         4\n255    崇明里           41         7\n256    大福里           41         7\n257    崇德里           41        13\n258    大德里           41         3\n259    崇學里           41         4\n260    和平里           41         5\n261    崇善里           41        16\n262    路東里           41         6\n263    虎尾里           41         9\n264    忠孝里           41         0\n265    裕聖里           41         1\n266    崇信里           41         6\n267    德光里           41         6\n268    復興里           41         0\n269    自強里           41         9\n270    文聖里           41         5\n271    富裕里           41         9\n272    龍山里           41         6\n273    關聖里           41         4\n274    新東里           41         0\n275    富強里           41         5\n276    泉南里           41         4\n277    東聖里           41         3\n278    東安里           41         5\n279    大同里           41        10\n280    衛國里           41         4\n281    裕農里           41        14\n282    南聖里           41         5\n283    崇誨里           41        11\n284    東門里           41         3\n285    中西里           41         9\n286    東明里           41        15\n287    圍下里           41         1\n288    東光里           41         9\n289    後甲里           41         5\n290    莊敬里           41        16\n291    小東里           41         7\n292    大學里           41         2\n293    成大里           41         3\n294    公園里           41         3\n295    中樓里           41         4\n296    賢北里           41         1\n297    大豐里           41        12\n298    大港里           41         7\n299    正覺里           41        19\n300    大和里           41         5\n301    成功里           41         0\n302    佛壇里           41         1\n303    同安里           41         1\n304    松安里           41         1\n305    永寧里           41         0\n306    喜南里           41         0\n307    喜東里           41         5\n308    喜北里           41         2\n309    南都里           41         1\n310    南華里           41         6\n311    建南里           41         0\n312    明興里           41         0\n313    郡南里           41         7\n314    開南里           41        12\n315    明亮里           41        14\n316    鯤鯓里           41         0\n317    大忠里           41         8\n318    光明里           41         0\n319    府南里           41        13\n320    大林里           41         3\n321    國宅里           41         7\n322    田寮里           41        12\n323    新生里           41         0\n324    竹溪里           41         2\n325    明德里           41         1\n326    再興里           41         9\n327    彰南里           41         3\n328    金華里           41        26\n329    新興里           41         4\n330    文南里           41         8\n331    新昌里           41         7\n332    廣州里           41         7\n333    文華里           41        10\n334    溪頂里           41         6\n335    海佃里           41         5\n336    溪東里           41         8\n337    溪北里           41         3\n338    溪墘里           41         1\n339    安富里           41        16\n340    塩田里           41         2\n341    鳳凰里           41         7\n342    公親里           41         1\n343    砂崙里           41         0\n344    文平里           41        13\n345    國平里           41         6\n346    育平里           41         3\n347    華平里           41         4\n348    怡平里           41         6\n349    建平里           41         6\n350    幸福里           41        14\n351    上崙里           41         1\n352    後壁里           41         5\n353    仁和里           41         0\n354    仁愛里           41         9\n355    仁德里           41         8\n356    興農里           41         1\n357    省躬里           41         1\n358    新田里           41         1\n359    一甲里           41         0\n360    德高里           41         7\n361    中洲里           41         1\n362    西灣里           41         4\n363    甲頂里           41         2\n364    永康里           41         2\n365    正強里           41         7\n366    漁光里           41         0\n367    金城里           41         3\n368    尚頂里           41         2\n369    神洲里           41         1\n370    復國里           41         0\n371    三合里           41         6\n372    復華里           41        27\n373    二王里           41        15\n374    東智里           41         2\n375    大恩里           41         7\n376    西湖里           41        10\n377    平安里           41         0\n378    西賢里           41         5\n379    四草里           41         0\n380    安東里           41         9\n381    淵中里           41         0\n382    城西里           41         0\n383    佃東里           41         0\n384    新順里           41        12\n385    新樹里           41         2\n386    塩行里           41         4\n387    海西里           41        22\n388    佃西里           41         2\n389    文賢里           41         0\n390    大光里           41        13\n391    南美里           41         0\n392    西和里           41         0\n393    塩洲里           41         5\n394    東興里           41         4\n395    重興里           41         1\n396    和順里           41         5\n397    力行里           41         9\n398    文成里           41         4\n399    元寶里           41         4\n400    開元里           41         5\n401    成德里           41        10\n402    永華里           41         5\n403    郡王里           41         5\n404    北灣里           41         3\n405    龍潭里           41         1\n406    埔園里           41         7\n407    三民里           41         0\n408    振興里           41         5\n409    永祥里           41         6\n410    文元里           41         7\n411    開山里           41        12\n412    大涼里           41         1\n413    藥王里           41        15\n414    光賢里           41         1\n415    二行里           41         0\n416    大甲里           41         0\n417    仁義里           41        13\n418    土庫里           41         0\n419    太子里           41         1\n420    安西里           41        15\n421    大安里           41         6\n422    安和里           41         5\n423    理想里           41         7\n424    安慶里           41         1\n425    梅花里           41         7\n426    頂安里           41        15\n427    安順里           41         2\n428    總頭里           41         0\n429    原佃里           41         1\n430    東和里           41         6\n431    光復里           41         0\n432    勝利里           41        21\n433    建國里           41         0\n434    六合里           41         6\n435    淵西里           41         1\n436    長安里           41         3\n437    中華里           41         0\n438    中興里           41         3\n439    西勢里           41         1\n440    蔦松里           41         0\n441    顯宮里           41         0\n442    州南里           41         0\n443    布袋里           41         0\n444    州北里           41         4\n445    塭南里           41         3\n446    公塭里           41         0\n447    南興里           41         0\n448    億載里           41         2\n449    平通里           41         9\n450    海東里           41         7\n451    青草里           31         0\n452    保安里           31         1\n453    赤嵌里           31         0\n454    大成里           31         0\n455    城北里           31         0\n456    城南里           31         0\n457    法華里           31         0\n458    海南里           31         0\n459    國安里           31         0\n460    溪心里           31         0\n461    淵東里           31         0\n462    城中里           31         0\n463    城東里           31         0\n464    學東里           31         0\n465    東灣里           31         0\n466    南灣里           31         0\n467    崑山里           31         4\n468    大灣里           31         2\n469    五王里           31        31\n470    安康里           31         1\n471    西橋里           31         1\n472    網寮里           31         0\n473    大橋里           31         1\n474    東橋里           31         2\n475    烏竹里           31         1\n476    王行里           31         0\n477    大智里           31         5\n478    崇文里           31         2\n479    崇成里           31         0\n480    崇明里           31         0\n481    大福里           31         0\n482    崇德里           31         5\n483    大德里           31         2\n484    崇學里           31        11\n485    和平里           31         2\n486    崇善里           31         5\n487    路東里           31         0\n488    虎尾里           31         2\n489    忠孝里           31         3\n490    裕聖里           31         1\n491    崇信里           31         3\n492    德光里           31        10\n493    復興里           31         0\n494    自強里           31         2\n495    文聖里           31         0\n496    富裕里           31         0\n497    龍山里           31         2\n498    關聖里           31         0\n499    新東里           31         1\n500    富強里           31         3\n501    泉南里           31         0\n502    東聖里           31         2\n503    東安里           31         0\n504    大同里           31         0\n505    衛國里           31         0\n506    裕農里           31         1\n507    南聖里           31         0\n508    崇誨里           31         1\n509    東門里           31         0\n510    中西里           31         0\n511    東明里           31         1\n512    圍下里           31         0\n513    東光里           31         1\n514    後甲里           31         0\n515    莊敬里           31         0\n516    小東里           31         2\n517    大學里           31         0\n518    成大里           31         0\n519    公園里           31         6\n520    中樓里           31         0\n521    賢北里           31         0\n522    大豐里           31         1\n523    大港里           31         0\n524    正覺里           31         0\n525    大和里           31         0\n526    成功里           31         0\n527    佛壇里           31         0\n528    同安里           31         1\n529    松安里           31         0\n530    永寧里           31         0\n531    喜南里           31         0\n532    喜東里           31         0\n533    喜北里           31         0\n534    南都里           31         1\n535    南華里           31         0\n536    建南里           31         0\n537    明興里           31         0\n538    郡南里           31         0\n539    開南里           31         0\n540    明亮里           31         2\n541    鯤鯓里           31         0\n542    大忠里           31         0\n543    光明里           31         1\n544    府南里           31         3\n545    大林里           31         0\n546    國宅里           31         0\n547    田寮里           31         1\n548    新生里           31         0\n549    竹溪里           31         0\n550    明德里           31         0\n551    再興里           31         1\n552    彰南里           31         0\n553    金華里           31         0\n554    新興里           31         1\n555    文南里           31         0\n556    新昌里           31         0\n557    廣州里           31         1\n558    文華里           31         0\n559    溪頂里           31         2\n560    海佃里           31         7\n561    溪東里           31         1\n562    溪北里           31         0\n563    溪墘里           31         5\n564    安富里           31         1\n565    塩田里           31         0\n566    鳳凰里           31         9\n567    公親里           31         0\n568    砂崙里           31         0\n569    文平里           31         0\n570    國平里           31         1\n571    育平里           31         0\n572    華平里           31         0\n573    怡平里           31         0\n574    建平里           31         0\n575    幸福里           31         3\n576    上崙里           31         0\n577    後壁里           31         1\n578    仁和里           31         0\n579    仁愛里           31         0\n580    仁德里           31         4\n581    興農里           31         0\n582    省躬里           31         0\n583    新田里           31         0\n584    一甲里           31         1\n585    德高里           31         1\n586    中洲里           31         0\n587    西灣里           31         1\n588    甲頂里           31         1\n589    永康里           31         0\n590    正強里           31         2\n591    漁光里           31         0\n592    金城里           31         0\n593    尚頂里           31         0\n594    神洲里           31         0\n595    復國里           31         2\n596    三合里           31         4\n597    復華里           31         4\n598    二王里           31         0\n599    東智里           31         1\n600    大恩里           31         0\n601    西湖里           31         0\n602    平安里           31         3\n603    西賢里           31         2\n604    四草里           31         0\n605    安東里           31         1\n606    淵中里           31         0\n607    城西里           31         0\n608    佃東里           31         0\n609    新順里           31         0\n610    新樹里           31         0\n611    塩行里           31         0\n612    海西里           31         0\n613    佃西里           31         0\n614    文賢里           31         0\n615    大光里           31         0\n616    南美里           31         0\n617    西和里           31         0\n618    塩洲里           31         0\n619    東興里           31         0\n620    重興里           31         0\n621    和順里           31         0\n622    力行里           31         0\n623    文成里           31         0\n624    元寶里           31         1\n625    開元里           31         0\n626    成德里           31         3\n627    永華里           31         0\n628    郡王里           31         0\n629    北灣里           31         0\n630    龍潭里           31         0\n631    埔園里           31         2\n632    三民里           31         0\n633    振興里           31         0\n634    永祥里           31         0\n635    文元里           31         0\n636    開山里           31         0\n637    大涼里           31         0\n638    藥王里           31         0\n639    光賢里           31         2\n640    二行里           31         0\n641    大甲里           31         0\n642    仁義里           31         2\n643    土庫里           31         0\n644    太子里           31         0\n645    安西里           31         0\n646    大安里           31         0\n647    安和里           31         0\n648    理想里           31         0\n649    安慶里           31         0\n650    梅花里           31         0\n651    頂安里           31         1\n652    安順里           31         0\n653    總頭里           31         0\n654    原佃里           31         0\n655    東和里           31         0\n656    光復里           31         0\n657    勝利里           31        10\n658    建國里           31         0\n659    六合里           31         4\n660    淵西里           31         0\n661    長安里           31         0\n662    中華里           31         3\n663    中興里           31         1\n664    西勢里           31         0\n665    蔦松里           31         0\n666    顯宮里           31         0\n667    州南里           31         0\n668    布袋里           31         0\n669    州北里           31         0\n670    塭南里           31         0\n671    公塭里           31         0\n672    南興里           31         0\n673    億載里           31         1\n674    平通里           31         0\n675    海東里           31         1\n676    青草里           45         0\n677    保安里           45         7\n678    赤嵌里           45         9\n679    大成里           45         2\n680    城北里           45         0\n681    城南里           45         0\n682    法華里           45         1\n683    海南里           45         3\n684    國安里           45         1\n685    溪心里           45         3\n686    淵東里           45         1\n687    城中里           45         0\n688    城東里           45         0\n689    學東里           45         1\n690    東灣里           45         1\n691    南灣里           45         3\n692    崑山里           45         0\n693    大灣里           45         1\n694    五王里           45         6\n695    安康里           45         4\n696    西橋里           45         2\n697    網寮里           45         1\n698    大橋里           45         3\n699    東橋里           45         2\n700    烏竹里           45         0\n701    王行里           45         0\n702    大智里           45         1\n703    崇文里           45         6\n704    崇成里           45         1\n705    崇明里           45         2\n706    大福里           45         0\n707    崇德里           45         5\n708    大德里           45         0\n709    崇學里           45         2\n710    和平里           45        12\n711    崇善里           45         6\n712    路東里           45         0\n713    虎尾里           45         9\n714    忠孝里           45         0\n715    裕聖里           45         2\n716    崇信里           45         7\n717    德光里           45         1\n718    復興里           45         0\n719    自強里           45         4\n720    文聖里           45         1\n721    富裕里           45         1\n722    龍山里           45         0\n723    關聖里           45         2\n724    新東里           45         3\n725    富強里           45         4\n726    泉南里           45         9\n727    東聖里           45         3\n728    東安里           45         0\n729    大同里           45         2\n730    衛國里           45         1\n731    裕農里           45         1\n732    南聖里           45         1\n733    崇誨里           45         2\n734    東門里           45         1\n735    中西里           45         2\n736    東明里           45         1\n737    圍下里           45         3\n738    東光里           45         5\n739    後甲里           45         3\n740    莊敬里           45         4\n741    小東里           45         4\n742    大學里           45         2\n743    成大里           45         2\n744    公園里           45         3\n745    中樓里           45         0\n746    賢北里           45        14\n747    大豐里           45         3\n748    大港里           45         7\n749    正覺里           45         7\n750    大和里           45         5\n751    成功里           45         0\n752    佛壇里           45         3\n753    同安里           45         1\n754    松安里           45         1\n755    永寧里           45         1\n756    喜南里           45         1\n757    喜東里           45         1\n758    喜北里           45         0\n759    南都里           45         2\n760    南華里           45         0\n761    建南里           45         0\n762    明興里           45         4\n763    郡南里           45         1\n764    開南里           45        10\n765    明亮里           45         2\n766    鯤鯓里           45         3\n767    大忠里           45         3\n768    光明里           45         0\n769    府南里           45         5\n770    大林里           45         1\n771    國宅里           45         0\n772    田寮里           45         2\n773    新生里           45         0\n774    竹溪里           45         0\n775    明德里           45         0\n776    再興里           45         2\n777    彰南里           45         0\n778    金華里           45         8\n779    新興里           45         0\n780    文南里           45         3\n781    新昌里           45         8\n782    廣州里           45         2\n783    文華里           45         4\n784    溪頂里           45         5\n785    海佃里           45         1\n786    溪東里           45         4\n787    溪北里           45         5\n788    溪墘里           45         1\n789    安富里           45         1\n790    塩田里           45         0\n791    鳳凰里           45         2\n792    公親里           45         1\n793    砂崙里           45         0\n794    文平里           45         3\n795    國平里           45         2\n796    育平里           45         1\n797    華平里           45         9\n798    怡平里           45         5\n799    建平里           45         2\n800    幸福里           45         0\n801    上崙里           45         1\n802    後壁里           45         4\n803    仁和里           45         4\n804    仁愛里           45         9\n805    仁德里           45         4\n806    興農里           45         2\n807    省躬里           45         2\n808    新田里           45         0\n809    一甲里           45         4\n810    德高里           45         5\n811    中洲里           45         1\n812    西灣里           45         3\n813    甲頂里           45         0\n814    永康里           45         2\n815    正強里           45         4\n816    漁光里           45         0\n817    金城里           45         3\n818    尚頂里           45         3\n819    神洲里           45         0\n820    復國里           45         0\n821    三合里           45         4\n822    復華里           45         7\n823    二王里           45         6\n824    東智里           45         3\n825    大恩里           45         5\n826    西湖里           45         3\n827    平安里           45         1\n828    西賢里           45         4\n829    四草里           45         0\n830    安東里           45         0\n831    淵中里           45         2\n832    城西里           45         1\n833    佃東里           45        14\n834    新順里           45         1\n835    新樹里           45         0\n836    塩行里           45         7\n837    海西里           45         0\n838    佃西里           45         0\n839    文賢里           45         0\n840    大光里           45         0\n841    南美里           45         0\n842    西和里           45         0\n843    塩洲里           45         1\n844    東興里           45         1\n845    重興里           45         1\n846    和順里           45         6\n847    力行里           45         8\n848    文成里           45         1\n849    元寶里           45         4\n850    開元里           45         3\n851    成德里           45         7\n852    永華里           45         4\n853    郡王里           45         3\n854    北灣里           45         0\n855    龍潭里           45         5\n856    埔園里           45         3\n857    三民里           45         0\n858    振興里           45         3\n859    永祥里           45        13\n860    文元里           45         4\n861    開山里           45         5\n862    大涼里           45         0\n863    藥王里           45         6\n864    光賢里           45         2\n865    二行里           45         1\n866    大甲里           45         0\n867    仁義里           45         8\n868    土庫里           45         1\n869    太子里           45         1\n870    安西里           45         0\n871    大安里           45         7\n872    安和里           45         8\n873    理想里           45         1\n874    安慶里           45         6\n875    梅花里           45         6\n876    頂安里           45         3\n877    安順里           45         1\n878    總頭里           45         0\n879    原佃里           45         0\n880    東和里           45         0\n881    光復里           45         0\n882    勝利里           45         0\n883    建國里           45         2\n884    六合里           45         6\n885    淵西里           45         3\n886    長安里           45         1\n887    中華里           45         0\n888    中興里           45         0\n889    西勢里           45         5\n890    蔦松里           45         0\n891    顯宮里           45         0\n892    州南里           45         2\n893    布袋里           45         0\n894    州北里           45         4\n895    塭南里           45         0\n896    公塭里           45         1\n897    南興里           45         0\n898    億載里           45         1\n899    平通里           45         3\n900    海東里           45         8\n901    青草里           35         0\n902    保安里           35         0\n903    赤嵌里           35         4\n904    大成里           35         3\n905    城北里           35         0\n906    城南里           35         0\n907    法華里           35         1\n908    海南里           35         6\n909    國安里           35        15\n910    溪心里           35         3\n911    淵東里           35         5\n912    城中里           35         0\n913    城東里           35         0\n914    學東里           35         0\n915    東灣里           35         2\n916    南灣里           35         1\n917    崑山里           35        10\n918    大灣里           35         1\n919    五王里           35        11\n920    安康里           35         4\n921    西橋里           35         4\n922    網寮里           35         2\n923    大橋里           35        15\n924    東橋里           35         7\n925    烏竹里           35         1\n926    王行里           35         0\n927    大智里           35         3\n928    崇文里           35         2\n929    崇成里           35         0\n930    崇明里           35         1\n931    大福里           35         2\n932    崇德里           35        30\n933    大德里           35         1\n934    崇學里           35        15\n935    和平里           35         0\n936    崇善里           35         5\n937    路東里           35         1\n938    虎尾里           35        10\n939    忠孝里           35         4\n940    裕聖里           35         2\n941    崇信里           35        17\n942    德光里           35        16\n943    復興里           35        15\n944    自強里           35        28\n945    文聖里           35         0\n946    富裕里           35         0\n947    龍山里           35         8\n948    關聖里           35         6\n949    新東里           35         9\n950    富強里           35        12\n951    泉南里           35         7\n952    東聖里           35         7\n953    東安里           35         4\n954    大同里           35         2\n955    衛國里           35         3\n956    裕農里           35         5\n957    南聖里           35         2\n958    崇誨里           35         1\n959    東門里           35         2\n960    中西里           35         4\n961    東明里           35         3\n962    圍下里           35         2\n963    東光里           35         4\n964    後甲里           35         2\n965    莊敬里           35         3\n966    小東里           35         6\n967    大學里           35         7\n968    成大里           35         2\n969    公園里           35         7\n970    中樓里           35         8\n971    賢北里           35         1\n972    大豐里           35         5\n973    大港里           35         1\n974    正覺里           35        10\n975    大和里           35         1\n976    成功里           35         0\n977    佛壇里           35         4\n978    同安里           35         0\n979    松安里           35         0\n980    永寧里           35         0\n981    喜南里           35         0\n982    喜東里           35         0\n983    喜北里           35         1\n984    南都里           35         7\n985    南華里           35        19\n986    建南里           35        11\n987    明興里           35        25\n988    郡南里           35         9\n989    開南里           35         6\n990    明亮里           35        14\n991    鯤鯓里           35         0\n992    大忠里           35         0\n993    光明里           35         9\n994    府南里           35        19\n995    大林里           35         1\n996    國宅里           35         7\n997    田寮里           35         4\n998    新生里           35         1\n999    竹溪里           35         1\n1000   明德里           35         1\n1001   再興里           35         1\n1002   彰南里           35         1\n1003   金華里           35         2\n1004   新興里           35         0\n1005   文南里           35         4\n1006   新昌里           35         1\n1007   廣州里           35         2\n1008   文華里           35         1\n1009   溪頂里           35        15\n1010   海佃里           35        34\n1011   溪東里           35        15\n1012   溪北里           35         4\n1013   溪墘里           35        41\n1014   安富里           35        34\n1015   塩田里           35         1\n1016   鳳凰里           35        15\n1017   公親里           35         0\n1018   砂崙里           35         0\n1019   文平里           35         3\n1020   國平里           35         5\n1021   育平里           35         3\n1022   華平里           35         3\n1023   怡平里           35         1\n1024   建平里           35         1\n1025   幸福里           35        37\n1026   上崙里           35         1\n1027   後壁里           35         0\n1028   仁和里           35         7\n1029   仁愛里           35         5\n1030   仁德里           35         5\n1031   興農里           35         0\n1032   省躬里           35         0\n1033   新田里           35         1\n1034   一甲里           35         1\n1035   德高里           35        10\n1036   中洲里           35         1\n1037   西灣里           35         2\n1038   甲頂里           35         8\n1039   永康里           35         4\n1040   正強里           35         8\n1041   漁光里           35         0\n1042   金城里           35         0\n1043   尚頂里           35         2\n1044   神洲里           35         1\n1045   復國里           35        11\n1046   三合里           35         6\n1047   復華里           35        20\n1048   二王里           35         8\n1049   東智里           35         2\n1050   大恩里           35         6\n1051   西湖里           35         5\n1052   平安里           35         5\n1053   西賢里           35         1\n1054   四草里           35         0\n1055   安東里           35         1\n1056   淵中里           35         4\n1057   城西里           35         0\n1058   佃東里           35         4\n1059   新順里           35         0\n1060   新樹里           35         0\n1061   塩行里           35         7\n1062   海西里           35         2\n1063   佃西里           35         1\n1064   文賢里           35         0\n1065   大光里           35         0\n1066   南美里           35         0\n1067   西和里           35         0\n1068   塩洲里           35         1\n1069   東興里           35        10\n1070   重興里           35         5\n1071   和順里           35         5\n1072   力行里           35         2\n1073   文成里           35         3\n1074   元寶里           35         3\n1075   開元里           35         3\n1076   成德里           35         5\n1077   永華里           35         1\n1078   郡王里           35         1\n1079   北灣里           35         0\n1080   龍潭里           35         0\n1081   埔園里           35         2\n1082   三民里           35         0\n1083   振興里           35         1\n1084   永祥里           35         5\n1085   文元里           35         2\n1086   開山里           35         1\n1087   大涼里           35         3\n1088   藥王里           35         8\n1089   光賢里           35         7\n1090   二行里           35         1\n1091   大甲里           35         1\n1092   仁義里           35         6\n1093   土庫里           35         0\n1094   太子里           35         2\n1095   安西里           35         3\n1096   大安里           35        13\n1097   安和里           35         4\n1098   理想里           35         5\n1099   安慶里           35         7\n1100   梅花里           35         5\n1101   頂安里           35         9\n1102   安順里           35         3\n1103   總頭里           35         2\n1104   原佃里           35         0\n1105   東和里           35         1\n1106   光復里           35         0\n1107   勝利里           35        24\n1108   建國里           35         2\n1109   六合里           35         6\n1110   淵西里           35         0\n1111   長安里           35         0\n1112   中華里           35         7\n1113   中興里           35         0\n1114   西勢里           35         1\n1115   蔦松里           35         0\n1116   顯宮里           35         0\n1117   州南里           35         0\n1118   布袋里           35         1\n1119   州北里           35         0\n1120   塭南里           35         2\n1121   公塭里           35         1\n1122   南興里           35         1\n1123   億載里           35         2\n1124   平通里           35         5\n1125   海東里           35         2\n1126   青草里           36         0\n1127   保安里           36         0\n1128   赤嵌里           36         1\n1129   大成里           36         2\n1130   城北里           36         0\n1131   城南里           36         2\n1132   法華里           36         2\n1133   海南里           36         4\n1134   國安里           36        18\n1135   溪心里           36         8\n1136   淵東里           36         2\n1137   城中里           36         0\n1138   城東里           36         0\n1139   學東里           36         0\n1140   東灣里           36         3\n1141   南灣里           36         2\n1142   崑山里           36         5\n1143   大灣里           36         1\n1144   五王里           36        16\n1145   安康里           36        18\n1146   西橋里           36         6\n1147   網寮里           36        10\n1148   大橋里           36        31\n1149   東橋里           36        18\n1150   烏竹里           36         3\n1151   王行里           36         1\n1152   大智里           36        12\n1153   崇文里           36        14\n1154   崇成里           36         7\n1155   崇明里           36         8\n1156   大福里           36         2\n1157   崇德里           36         0\n1158   大德里           36         6\n1159   崇學里           36        12\n1160   和平里           36         9\n1161   崇善里           36        13\n1162   路東里           36         3\n1163   虎尾里           36        25\n1164   忠孝里           36         0\n1165   裕聖里           36         3\n1166   崇信里           36        10\n1167   德光里           36        25\n1168   復興里           36         0\n1169   自強里           36        33\n1170   文聖里           36         7\n1171   富裕里           36         5\n1172   龍山里           36        14\n1173   關聖里           36        17\n1174   新東里           36         6\n1175   富強里           36        31\n1176   泉南里           36         9\n1177   東聖里           36        14\n1178   東安里           36         3\n1179   大同里           36         5\n1180   衛國里           36         4\n1181   裕農里           36        18\n1182   南聖里           36         2\n1183   崇誨里           36         7\n1184   東門里           36         0\n1185   中西里           36         1\n1186   東明里           36         2\n1187   圍下里           36         0\n1188   東光里           36         5\n1189   後甲里           36         2\n1190   莊敬里           36         7\n1191   小東里           36         6\n1192   大學里           36         9\n1193   成大里           36         3\n1194   公園里           36         4\n1195   中樓里           36        20\n1196   賢北里           36         3\n1197   大豐里           36         5\n1198   大港里           36        11\n1199   正覺里           36        17\n1200   大和里           36        10\n1201   成功里           36         0\n1202   佛壇里           36         4\n1203   同安里           36         0\n1204   松安里           36         0\n1205   永寧里           36         0\n1206   喜南里           36         0\n1207   喜東里           36         1\n1208   喜北里           36         0\n1209   南都里           36         7\n1210   南華里           36        13\n1211   建南里           36         0\n1212   明興里           36        13\n1213   郡南里           36        18\n1214   開南里           36         8\n1215   明亮里           36        22\n1216   鯤鯓里           36         1\n1217   大忠里           36         0\n1218   光明里           36        10\n1219   府南里           36        32\n1220   大林里           36         2\n1221   國宅里           36        19\n1222   田寮里           36         8\n1223   新生里           36         0\n1224   竹溪里           36         0\n1225   明德里           36         1\n1226   再興里           36         9\n1227   彰南里           36         1\n1228   金華里           36        17\n1229   新興里           36         7\n1230   文南里           36         6\n1231   新昌里           36         0\n1232   廣州里           36         3\n1233   文華里           36         1\n1234   溪頂里           36        10\n1235   海佃里           36        38\n1236   溪東里           36        30\n1237   溪北里           36        18\n1238   溪墘里           36        63\n1239   安富里           36        58\n1240   塩田里           36         0\n1241   鳳凰里           36        30\n1242   公親里           36         0\n1243   砂崙里           36         0\n1244   文平里           36         4\n1245   國平里           36         5\n1246   育平里           36         8\n1247   華平里           36         6\n1248   怡平里           36         1\n1249   建平里           36         3\n1250   幸福里           36        35\n1251   上崙里           36         3\n1252   後壁里           36         6\n1253   仁和里           36        18\n1254   仁愛里           36        17\n1255   仁德里           36         9\n1256   興農里           36         1\n1257   省躬里           36         1\n1258   新田里           36         0\n1259   一甲里           36         3\n1260   德高里           36        12\n1261   中洲里           36         2\n1262   西灣里           36         5\n1263   甲頂里           36        16\n1264   永康里           36         3\n1265   正強里           36        16\n1266   漁光里           36         0\n1267   金城里           36         6\n1268   尚頂里           36         6\n1269   神洲里           36         1\n1270   復國里           36        13\n1271   三合里           36         6\n1272   復華里           36        24\n1273   二王里           36        21\n1274   東智里           36         6\n1275   大恩里           36         2\n1276   西湖里           36         4\n1277   平安里           36         0\n1278   西賢里           36         3\n1279   四草里           36         0\n1280   安東里           36         2\n1281   淵中里           36         5\n1282   城西里           36         1\n1283   佃東里           36         0\n1284   新順里           36         5\n1285   新樹里           36         0\n1286   塩行里           36         3\n1287   海西里           36         6\n1288   佃西里           36         2\n1289   文賢里           36         0\n1290   大光里           36         0\n1291   南美里           36         0\n1292   西和里           36         0\n1293   塩洲里           36         3\n1294   東興里           36         6\n1295   重興里           36         2\n1296   和順里           36         3\n1297   力行里           36         2\n1298   文成里           36         8\n1299   元寶里           36         5\n1300   開元里           36         2\n1301   成德里           36         4\n1302   永華里           36         3\n1303   郡王里           36         1\n1304   北灣里           36         1\n1305   龍潭里           36         4\n1306   埔園里           36         8\n1307   三民里           36         0\n1308   振興里           36         5\n1309   永祥里           36        13\n1310   文元里           36         7\n1311   開山里           36         6\n1312   大涼里           36         3\n1313   藥王里           36         4\n1314   光賢里           36        17\n1315   二行里           36         0\n1316   大甲里           36         0\n1317   仁義里           36         9\n1318   土庫里           36         0\n1319   太子里           36         2\n1320   安西里           36         0\n1321   大安里           36        18\n1322   安和里           36         3\n1323   理想里           36        13\n1324   安慶里           36        13\n1325   梅花里           36        13\n1326   頂安里           36         8\n1327   安順里           36         3\n1328   總頭里           36         7\n1329   原佃里           36         1\n1330   東和里           36         1\n1331   光復里           36         0\n1332   勝利里           36        24\n1333   建國里           36         0\n1334   六合里           36         5\n1335   淵西里           36         2\n1336   長安里           36         2\n1337   中華里           36        19\n1338   中興里           36         8\n1339   西勢里           36         1\n1340   蔦松里           36         2\n1341   顯宮里           36         0\n1342   州南里           36         1\n1343   布袋里           36         0\n1344   州北里           36         2\n1345   塭南里           36         1\n1346   公塭里           36         0\n1347   南興里           36         1\n1348   億載里           36         1\n1349   平通里           36         3\n1350   海東里           36         7\n1351   青草里           38         0\n1352   保安里           38         0\n1353   赤嵌里           38         5\n1354   大成里           38         3\n1355   城北里           38         0\n1356   城南里           38         0\n1357   法華里           38         2\n1358   海南里           38         0\n1359   國安里           38         8\n1360   溪心里           38         6\n1361   淵東里           38         2\n1362   城中里           38         1\n1363   城東里           38         0\n1364   學東里           38         1\n1365   東灣里           38         1\n1366   南灣里           38         2\n1367   崑山里           38        12\n1368   大灣里           38         0\n1369   五王里           38        17\n1370   安康里           38         9\n1371   西橋里           38         2\n1372   網寮里           38         4\n1373   大橋里           38        13\n1374   東橋里           38        10\n1375   烏竹里           38         0\n1376   王行里           38         0\n1377   大智里           38         3\n1378   崇文里           38         8\n1379   崇成里           38         3\n1380   崇明里           38         1\n1381   大福里           38         2\n1382   崇德里           38        18\n1383   大德里           38         4\n1384   崇學里           38        12\n1385   和平里           38         9\n1386   崇善里           38        13\n1387   路東里           38         5\n1388   虎尾里           38        16\n1389   忠孝里           38         0\n1390   裕聖里           38         2\n1391   崇信里           38        19\n1392   德光里           38         8\n1393   復興里           38         0\n1394   自強里           38        14\n1395   文聖里           38         7\n1396   富裕里           38         8\n1397   龍山里           38         5\n1398   關聖里           38        12\n1399   新東里           38        17\n1400   富強里           38        18\n1401   泉南里           38        19\n1402   東聖里           38        14\n1403   東安里           38         2\n1404   大同里           38         7\n1405   衛國里           38         3\n1406   裕農里           38        16\n1407   南聖里           38         6\n1408   崇誨里           38         6\n1409   東門里           38         0\n1410   中西里           38         2\n1411   東明里           38         7\n1412   圍下里           38         2\n1413   東光里           38         5\n1414   後甲里           38         6\n1415   莊敬里           38         9\n1416   小東里           38        15\n1417   大學里           38         3\n1418   成大里           38         4\n1419   公園里           38         2\n1420   中樓里           38        10\n1421   賢北里           38         4\n1422   大豐里           38        18\n1423   大港里           38         9\n1424   正覺里           38        10\n1425   大和里           38         7\n1426   成功里           38         0\n1427   佛壇里           38         6\n1428   同安里           38         0\n1429   松安里           38         0\n1430   永寧里           38         1\n1431   喜南里           38         0\n1432   喜東里           38         0\n1433   喜北里           38         1\n1434   南都里           38        10\n1435   南華里           38         8\n1436   建南里           38         0\n1437   明興里           38        28\n1438   郡南里           38        17\n1439   開南里           38        10\n1440   明亮里           38        12\n1441   鯤鯓里           38         1\n1442   大忠里           38         1\n1443   光明里           38         0\n1444   府南里           38        24\n1445   大林里           38         4\n1446   國宅里           38        18\n1447   田寮里           38         5\n1448   新生里           38         5\n1449   竹溪里           38         2\n1450   明德里           38         4\n1451   再興里           38         9\n1452   彰南里           38         4\n1453   金華里           38        19\n1454   新興里           38         0\n1455   文南里           38        16\n1456   新昌里           38         4\n1457   廣州里           38         2\n1458   文華里           38         7\n1459   溪頂里           38        19\n1460   海佃里           38        21\n1461   溪東里           38        20\n1462   溪北里           38         0\n1463   溪墘里           38        13\n1464   安富里           38        27\n1465   塩田里           38         0\n1466   鳳凰里           38        14\n1467   公親里           38         0\n1468   砂崙里           38         0\n1469   文平里           38         4\n1470   國平里           38         0\n1471   育平里           38         9\n1472   華平里           38         2\n1473   怡平里           38         2\n1474   建平里           38         4\n1475   幸福里           38        20\n1476   上崙里           38         2\n1477   後壁里           38         2\n1478   仁和里           38         8\n1479   仁愛里           38         0\n1480   仁德里           38        10\n1481   興農里           38         1\n1482   省躬里           38         2\n1483   新田里           38         0\n1484   一甲里           38         2\n1485   德高里           38         5\n1486   中洲里           38         0\n1487   西灣里           38         5\n1488   甲頂里           38         5\n1489   永康里           38         3\n1490   正強里           38         4\n1491   漁光里           38         0\n1492   金城里           38         1\n1493   尚頂里           38         4\n1494   神洲里           38         2\n1495   復國里           38         9\n1496   三合里           38         8\n1497   復華里           38        37\n1498   二王里           38        26\n1499   東智里           38         6\n1500   大恩里           38         5\n1501   西湖里           38         6\n1502   平安里           38         2\n1503   西賢里           38         5\n1504   四草里           38         0\n1505   安東里           38         5\n1506   淵中里           38         1\n1507   城西里           38         2\n1508   佃東里           38         3\n1509   新順里           38         3\n1510   新樹里           38         0\n1511   塩行里           38         2\n1512   海西里           38         2\n1513   佃西里           38         2\n1514   文賢里           38         0\n1515   大光里           38         0\n1516   南美里           38         0\n1517   西和里           38         0\n1518   塩洲里           38         3\n1519   東興里           38         0\n1520   重興里           38         0\n1521   和順里           38         9\n1522   力行里           38         3\n1523   文成里           38         6\n1524   元寶里           38         4\n1525   開元里           38         2\n1526   成德里           38         8\n1527   永華里           38        16\n1528   郡王里           38         2\n1529   北灣里           38         1\n1530   龍潭里           38         6\n1531   埔園里           38         1\n1532   三民里           38        13\n1533   振興里           38         6\n1534   永祥里           38        14\n1535   文元里           38         7\n1536   開山里           38         8\n1537   大涼里           38         4\n1538   藥王里           38        14\n1539   光賢里           38        12\n1540   二行里           38         1\n1541   大甲里           38         1\n1542   仁義里           38         9\n1543   土庫里           38         1\n1544   太子里           38         0\n1545   安西里           38         0\n1546   大安里           38        26\n1547   安和里           38        12\n1548   理想里           38        23\n1549   安慶里           38        14\n1550   梅花里           38         5\n1551   頂安里           38        14\n1552   安順里           38         5\n1553   總頭里           38        10\n1554   原佃里           38         3\n1555   東和里           38         4\n1556   光復里           38         0\n1557   勝利里           38        22\n1558   建國里           38         4\n1559   六合里           38        16\n1560   淵西里           38         1\n1561   長安里           38         5\n1562   中華里           38         7\n1563   中興里           38         6\n1564   西勢里           38         0\n1565   蔦松里           38         0\n1566   顯宮里           38         0\n1567   州南里           38         0\n1568   布袋里           38         2\n1569   州北里           38         3\n1570   塭南里           38         3\n1571   公塭里           38         3\n1572   南興里           38         0\n1573   億載里           38         2\n1574   平通里           38         7\n1575   海東里           38        12\n1576   青草里           39         0\n1577   保安里           39         0\n1578   赤嵌里           39        15\n1579   大成里           39         3\n1580   城北里           39         1\n1581   城南里           39         0\n1582   法華里           39         6\n1583   海南里           39        15\n1584   國安里           39         9\n1585   溪心里           39         6\n1586   淵東里           39         2\n1587   城中里           39         0\n1588   城東里           39         0\n1589   學東里           39         0\n1590   東灣里           39         1\n1591   南灣里           39         3\n1592   崑山里           39         5\n1593   大灣里           39         2\n1594   五王里           39        16\n1595   安康里           39         7\n1596   西橋里           39        11\n1597   網寮里           39         4\n1598   大橋里           39        19\n1599   東橋里           39        11\n1600   烏竹里           39         2\n1601   王行里           39         1\n1602   大智里           39         5\n1603   崇文里           39         5\n1604   崇成里           39         4\n1605   崇明里           39         6\n1606   大福里           39         8\n1607   崇德里           39         9\n1608   大德里           39         4\n1609   崇學里           39        13\n1610   和平里           39        13\n1611   崇善里           39        15\n1612   路東里           39         3\n1613   虎尾里           39        17\n1614   忠孝里           39         0\n1615   裕聖里           39         5\n1616   崇信里           39        15\n1617   德光里           39         8\n1618   復興里           39         0\n1619   自強里           39         0\n1620   文聖里           39         8\n1621   富裕里           39         6\n1622   龍山里           39        11\n1623   關聖里           39        21\n1624   新東里           39        19\n1625   富強里           39        23\n1626   泉南里           39        11\n1627   東聖里           39        15\n1628   東安里           39         2\n1629   大同里           39         7\n1630   衛國里           39         7\n1631   裕農里           39        20\n1632   南聖里           39         5\n1633   崇誨里           39        17\n1634   東門里           39         0\n1635   中西里           39         6\n1636   東明里           39         9\n1637   圍下里           39         1\n1638   東光里           39         6\n1639   後甲里           39        10\n1640   莊敬里           39        13\n1641   小東里           39         8\n1642   大學里           39        10\n1643   成大里           39         4\n1644   公園里           39        10\n1645   中樓里           39        17\n1646   賢北里           39         2\n1647   大豐里           39        15\n1648   大港里           39        12\n1649   正覺里           39        13\n1650   大和里           39        11\n1651   成功里           39        11\n1652   佛壇里           39         2\n1653   同安里           39         1\n1654   松安里           39         1\n1655   永寧里           39         1\n1656   喜南里           39         1\n1657   喜東里           39         5\n1658   喜北里           39         2\n1659   南都里           39        17\n1660   南華里           39        16\n1661   建南里           39        17\n1662   明興里           39        31\n1663   郡南里           39        33\n1664   開南里           39        12\n1665   明亮里           39        45\n1666   鯤鯓里           39         2\n1667   大忠里           39        13\n1668   光明里           39         0\n1669   府南里           39        23\n1670   大林里           39         2\n1671   國宅里           39        37\n1672   田寮里           39         6\n1673   新生里           39         0\n1674   竹溪里           39         0\n1675   明德里           39         2\n1676   再興里           39        24\n1677   彰南里           39         7\n1678   金華里           39        31\n1679   新興里           39         0\n1680   文南里           39         5\n1681   新昌里           39         8\n1682   廣州里           39        13\n1683   文華里           39         7\n1684   溪頂里           39        15\n1685   海佃里           39        12\n1686   溪東里           39        17\n1687   溪北里           39         7\n1688   溪墘里           39         8\n1689   安富里           39        22\n1690   塩田里           39         1\n1691   鳳凰里           39        16\n1692   公親里           39         0\n1693   砂崙里           39         1\n1694   文平里           39         9\n1695   國平里           39         8\n1696   育平里           39        14\n1697   華平里           39         9\n1698   怡平里           39         7\n1699   建平里           39         8\n1700   幸福里           39        18\n1701   上崙里           39         8\n1702   後壁里           39         2\n1703   仁和里           39         6\n1704   仁愛里           39         0\n1705   仁德里           39        10\n1706   興農里           39         2\n1707   省躬里           39         0\n1708   新田里           39         2\n1709   一甲里           39         0\n1710   德高里           39        11\n1711   中洲里           39         4\n1712   西灣里           39         3\n1713   甲頂里           39        13\n1714   永康里           39         4\n1715   正強里           39         8\n1716   漁光里           39         0\n1717   金城里           39         4\n1718   尚頂里           39        12\n1719   神洲里           39         2\n1720   復國里           39        23\n1721   三合里           39         4\n1722   復華里           39        53\n1723   二王里           39        19\n1724   東智里           39         7\n1725   大恩里           39         5\n1726   西湖里           39         6\n1727   平安里           39         3\n1728   西賢里           39         5\n1729   四草里           39         1\n1730   安東里           39         7\n1731   淵中里           39         2\n1732   城西里           39         0\n1733   佃東里           39         4\n1734   新順里           39         7\n1735   新樹里           39         1\n1736   塩行里           39         7\n1737   海西里           39         2\n1738   佃西里           39         0\n1739   文賢里           39         7\n1740   大光里           39         0\n1741   南美里           39         0\n1742   西和里           39         0\n1743   塩洲里           39         5\n1744   東興里           39        14\n1745   重興里           39         1\n1746   和順里           39        16\n1747   力行里           39        13\n1748   文成里           39         9\n1749   元寶里           39         7\n1750   開元里           39         7\n1751   成德里           39         7\n1752   永華里           39        10\n1753   郡王里           39         6\n1754   北灣里           39         0\n1755   龍潭里           39         6\n1756   埔園里           39         2\n1757   三民里           39         0\n1758   振興里           39         0\n1759   永祥里           39        19\n1760   文元里           39         9\n1761   開山里           39         4\n1762   大涼里           39         2\n1763   藥王里           39        23\n1764   光賢里           39        10\n1765   二行里           39         1\n1766   大甲里           39         1\n1767   仁義里           39         3\n1768   土庫里           39         2\n1769   太子里           39         4\n1770   安西里           39        16\n1771   大安里           39        10\n1772   安和里           39         7\n1773   理想里           39         7\n1774   安慶里           39        19\n1775   梅花里           39         5\n1776   頂安里           39        27\n1777   安順里           39         2\n1778   總頭里           39         1\n1779   原佃里           39         2\n1780   東和里           39         1\n1781   光復里           39         0\n1782   勝利里           39        31\n1783   建國里           39         2\n1784   六合里           39        22\n1785   淵西里           39         4\n1786   長安里           39         0\n1787   中華里           39        14\n1788   中興里           39         4\n1789   西勢里           39         1\n1790   蔦松里           39         0\n1791   顯宮里           39         0\n1792   州南里           39         7\n1793   布袋里           39         0\n1794   州北里           39         0\n1795   塭南里           39         2\n1796   公塭里           39         0\n1797   南興里           39         0\n1798   億載里           39         3\n1799   平通里           39        15\n1800   海東里           39         8\n1801   青草里           40         0\n1802   保安里           40         0\n1803   赤嵌里           40        16\n1804   大成里           40         3\n1805   城北里           40         0\n1806   城南里           40         2\n1807   法華里           40         3\n1808   海南里           40         4\n1809   國安里           40         7\n1810   溪心里           40         9\n1811   淵東里           40         3\n1812   城中里           40         1\n1813   城東里           40         1\n1814   學東里           40         0\n1815   東灣里           40         2\n1816   南灣里           40         0\n1817   崑山里           40         1\n1818   大灣里           40         0\n1819   五王里           40         7\n1820   安康里           40         7\n1821   西橋里           40         9\n1822   網寮里           40         5\n1823   大橋里           40         8\n1824   東橋里           40         8\n1825   烏竹里           40         4\n1826   王行里           40         0\n1827   大智里           40         5\n1828   崇文里           40         8\n1829   崇成里           40         8\n1830   崇明里           40         5\n1831   大福里           40         7\n1832   崇德里           40        13\n1833   大德里           40         3\n1834   崇學里           40        11\n1835   和平里           40         2\n1836   崇善里           40        13\n1837   路東里           40         1\n1838   虎尾里           40        14\n1839   忠孝里           40         0\n1840   裕聖里           40         5\n1841   崇信里           40         4\n1842   德光里           40         6\n1843   復興里           40         0\n1844   自強里           40        22\n1845   文聖里           40        10\n1846   富裕里           40        13\n1847   龍山里           40         0\n1848   關聖里           40         9\n1849   新東里           40         9\n1850   富強里           40        11\n1851   泉南里           40         6\n1852   東聖里           40         7\n1853   東安里           40         4\n1854   大同里           40        16\n1855   衛國里           40         5\n1856   裕農里           40        19\n1857   南聖里           40         7\n1858   崇誨里           40        13\n1859   東門里           40         0\n1860   中西里           40         3\n1861   東明里           40        13\n1862   圍下里           40         0\n1863   東光里           40         0\n1864   後甲里           40        27\n1865   莊敬里           40        20\n1866   小東里           40         5\n1867   大學里           40        12\n1868   成大里           40         9\n1869   公園里           40         8\n1870   中樓里           40         7\n1871   賢北里           40         3\n1872   大豐里           40        16\n1873   大港里           40        17\n1874   正覺里           40        12\n1875   大和里           40        13\n1876   成功里           40         0\n1877   佛壇里           40         5\n1878   同安里           40         1\n1879   松安里           40         0\n1880   永寧里           40         1\n1881   喜南里           40         0\n1882   喜東里           40         3\n1883   喜北里           40         0\n1884   南都里           40         9\n1885   南華里           40        16\n1886   建南里           40        21\n1887   明興里           40        12\n1888   郡南里           40        14\n1889   開南里           40         5\n1890   明亮里           40        13\n1891   鯤鯓里           40         0\n1892   大忠里           40         6\n1893   光明里           40         0\n1894   府南里           40        13\n1895   大林里           40         0\n1896   國宅里           40        18\n1897   田寮里           40        14\n1898   新生里           40         4\n1899   竹溪里           40         2\n1900   明德里           40         2\n1901   再興里           40         8\n1902   彰南里           40         0\n1903   金華里           40        19\n1904   新興里           40         9\n1905   文南里           40        10\n1906   新昌里           40        10\n1907   廣州里           40        20\n1908   文華里           40         6\n1909   溪頂里           40        12\n1910   海佃里           40         9\n1911   溪東里           40        21\n1912   溪北里           40        15\n1913   溪墘里           40         1\n1914   安富里           40        12\n1915   塩田里           40         0\n1916   鳳凰里           40        11\n1917   公親里           40         1\n1918   砂崙里           40         0\n1919   文平里           40        17\n1920   國平里           40         6\n1921   育平里           40         9\n1922   華平里           40         5\n1923   怡平里           40         5\n1924   建平里           40        11\n1925   幸福里           40        14\n1926   上崙里           40         0\n1927   後壁里           40         3\n1928   仁和里           40         0\n1929   仁愛里           40         0\n1930   仁德里           40         9\n1931   興農里           40         5\n1932   省躬里           40         2\n1933   新田里           40         0\n1934   一甲里           40         4\n1935   德高里           40        15\n1936   中洲里           40         4\n1937   西灣里           40         6\n1938   甲頂里           40         3\n1939   永康里           40         3\n1940   正強里           40         6\n1941   漁光里           40         0\n1942   金城里           40         4\n1943   尚頂里           40         1\n1944   神洲里           40         2\n1945   復國里           40         0\n1946   三合里           40         4\n1947   復華里           40         0\n1948   二王里           40        19\n1949   東智里           40         2\n1950   大恩里           40         5\n1951   西湖里           40         6\n1952   平安里           40         2\n1953   西賢里           40         7\n1954   四草里           40         1\n1955   安東里           40         0\n1956   淵中里           40         2\n1957   城西里           40         0\n1958   佃東里           40         2\n1959   新順里           40        10\n1960   新樹里           40         0\n1961   塩行里           40         4\n1962   海西里           40         2\n1963   佃西里           40         1\n1964   文賢里           40         0\n1965   大光里           40         0\n1966   南美里           40         0\n1967   西和里           40        30\n1968   塩洲里           40         7\n1969   東興里           40         7\n1970   重興里           40         0\n1971   和順里           40         7\n1972   力行里           40         8\n1973   文成里           40         8\n1974   元寶里           40         6\n1975   開元里           40         3\n1976   成德里           40         7\n1977   永華里           40        14\n1978   郡王里           40         4\n1979   北灣里           40         1\n1980   龍潭里           40         3\n1981   埔園里           40         5\n1982   三民里           40         3\n1983   振興里           40        15\n1984   永祥里           40        11\n1985   文元里           40         9\n1986   開山里           40        11\n1987   大涼里           40         4\n1988   藥王里           40        29\n1989   光賢里           40         3\n1990   二行里           40         1\n1991   大甲里           40         1\n1992   仁義里           40         6\n1993   土庫里           40         5\n1994   太子里           40         0\n1995   安西里           40         0\n1996   大安里           40        11\n1997   安和里           40         0\n1998   理想里           40        15\n1999   安慶里           40         6\n2000   梅花里           40         4\n2001   頂安里           40        12\n2002   安順里           40         0\n2003   總頭里           40         1\n2004   原佃里           40         1\n2005   東和里           40         1\n2006   光復里           40         0\n2007   勝利里           40         0\n2008   建國里           40         3\n2009   六合里           40        12\n2010   淵西里           40         3\n2011   長安里           40         3\n2012   中華里           40        14\n2013   中興里           40         0\n2014   西勢里           40         1\n2015   蔦松里           40         3\n2016   顯宮里           40         5\n2017   州南里           40         1\n2018   布袋里           40         2\n2019   州北里           40         2\n2020   塭南里           40         2\n2021   公塭里           40         0\n2022   南興里           40         0\n2023   億載里           40         7\n2024   平通里           40        14\n2025   海東里           40         8\n2026   青草里           42         0\n2027   保安里           42         0\n2028   赤嵌里           42        10\n2029   大成里           42         0\n2030   城北里           42         0\n2031   城南里           42         1\n2032   法華里           42         1\n2033   海南里           42         1\n2034   國安里           42         1\n2035   溪心里           42         4\n2036   淵東里           42         1\n2037   城中里           42         0\n2038   城東里           42         0\n2039   學東里           42         2\n2040   東灣里           42         2\n2041   南灣里           42         1\n2042   崑山里           42         4\n2043   大灣里           42         0\n2044   五王里           42         4\n2045   安康里           42         6\n2046   西橋里           42         8\n2047   網寮里           42         8\n2048   大橋里           42         6\n2049   東橋里           42         9\n2050   烏竹里           42         0\n2051   王行里           42         0\n2052   大智里           42         3\n2053   崇文里           42         8\n2054   崇成里           42         3\n2055   崇明里           42         2\n2056   大福里           42         0\n2057   崇德里           42         0\n2058   大德里           42         0\n2059   崇學里           42         1\n2060   和平里           42        12\n2061   崇善里           42        20\n2062   路東里           42         3\n2063   虎尾里           42        11\n2064   忠孝里           42         0\n2065   裕聖里           42         0\n2066   崇信里           42         3\n2067   德光里           42         3\n2068   復興里           42         0\n2069   自強里           42        10\n2070   文聖里           42         7\n2071   富裕里           42         6\n2072   龍山里           42         2\n2073   關聖里           42        20\n2074   新東里           42         0\n2075   富強里           42        11\n2076   泉南里           42         8\n2077   東聖里           42         3\n2078   東安里           42        12\n2079   大同里           42         8\n2080   衛國里           42         0\n2081   裕農里           42        13\n2082   南聖里           42         6\n2083   崇誨里           42         7\n2084   東門里           42         0\n2085   中西里           42         2\n2086   東明里           42         8\n2087   圍下里           42         0\n2088   東光里           42         0\n2089   後甲里           42         0\n2090   莊敬里           42         3\n2091   小東里           42         1\n2092   大學里           42         1\n2093   成大里           42         4\n2094   公園里           42         0\n2095   中樓里           42         0\n2096   賢北里           42         5\n2097   大豐里           42         3\n2098   大港里           42         7\n2099   正覺里           42        15\n2100   大和里           42         8\n2101   成功里           42        11\n2102   佛壇里           42         4\n2103   同安里           42         0\n2104   松安里           42         2\n2105   永寧里           42         0\n2106   喜南里           42         0\n2107   喜東里           42         1\n2108   喜北里           42         1\n2109   南都里           42         4\n2110   南華里           42         5\n2111   建南里           42         0\n2112   明興里           42         8\n2113   郡南里           42         6\n2114   開南里           42         0\n2115   明亮里           42        13\n2116   鯤鯓里           42         1\n2117   大忠里           42        10\n2118   光明里           42         0\n2119   府南里           42         9\n2120   大林里           42         0\n2121   國宅里           42         3\n2122   田寮里           42         8\n2123   新生里           42         5\n2124   竹溪里           42         4\n2125   明德里           42         3\n2126   再興里           42         7\n2127   彰南里           42         2\n2128   金華里           42        10\n2129   新興里           42         0\n2130   文南里           42         0\n2131   新昌里           42        19\n2132   廣州里           42         4\n2133   文華里           42        12\n2134   溪頂里           42         8\n2135   海佃里           42         3\n2136   溪東里           42         7\n2137   溪北里           42         5\n2138   溪墘里           42         2\n2139   安富里           42        17\n2140   塩田里           42         1\n2141   鳳凰里           42         5\n2142   公親里           42         0\n2143   砂崙里           42         0\n2144   文平里           42         7\n2145   國平里           42         7\n2146   育平里           42         6\n2147   華平里           42         7\n2148   怡平里           42         9\n2149   建平里           42         5\n2150   幸福里           42         1\n2151   上崙里           42         4\n2152   後壁里           42         5\n2153   仁和里           42        10\n2154   仁愛里           42         1\n2155   仁德里           42        10\n2156   興農里           42         4\n2157   省躬里           42         1\n2158   新田里           42         3\n2159   一甲里           42         2\n2160   德高里           42         8\n2161   中洲里           42         0\n2162   西灣里           42         5\n2163   甲頂里           42         3\n2164   永康里           42         2\n2165   正強里           42         9\n2166   漁光里           42         0\n2167   金城里           42         1\n2168   尚頂里           42         4\n2169   神洲里           42         1\n2170   復國里           42        10\n2171   三合里           42         5\n2172   復華里           42        32\n2173   二王里           42         6\n2174   東智里           42         3\n2175   大恩里           42        15\n2176   西湖里           42         9\n2177   平安里           42         4\n2178   西賢里           42         2\n2179   四草里           42         1\n2180   安東里           42         4\n2181   淵中里           42         1\n2182   城西里           42         0\n2183   佃東里           42         2\n2184   新順里           42         4\n2185   新樹里           42         2\n2186   塩行里           42         4\n2187   海西里           42         3\n2188   佃西里           42         1\n2189   文賢里           42         0\n2190   大光里           42         0\n2191   南美里           42         0\n2192   西和里           42         0\n2193   塩洲里           42         3\n2194   東興里           42         3\n2195   重興里           42         2\n2196   和順里           42         9\n2197   力行里           42         2\n2198   文成里           42         1\n2199   元寶里           42         5\n2200   開元里           42         6\n2201   成德里           42        10\n2202   永華里           42         7\n2203   郡王里           42         0\n2204   北灣里           42         1\n2205   龍潭里           42         0\n2206   埔園里           42         3\n2207   三民里           42         0\n2208   振興里           42         3\n2209   永祥里           42        10\n2210   文元里           42        13\n2211   開山里           42         9\n2212   大涼里           42         2\n2213   藥王里           42         6\n2214   光賢里           42         1\n2215   二行里           42         0\n2216   大甲里           42         0\n2217   仁義里           42        15\n2218   土庫里           42         1\n2219   太子里           42         0\n2220   安西里           42         0\n2221   大安里           42         5\n2222   安和里           42         2\n2223   理想里           42         2\n2224   安慶里           42        11\n2225   梅花里           42         6\n2226   頂安里           42         8\n2227   安順里           42         1\n2228   總頭里           42        11\n2229   原佃里           42         1\n2230   東和里           42         2\n2231   光復里           42         3\n2232   勝利里           42         0\n2233   建國里           42         1\n2234   六合里           42        10\n2235   淵西里           42         2\n2236   長安里           42         1\n2237   中華里           42         4\n2238   中興里           42         0\n2239   西勢里           42         2\n2240   蔦松里           42         1\n2241   顯宮里           42         0\n2242   州南里           42         2\n2243   布袋里           42         0\n2244   州北里           42         0\n2245   塭南里           42         1\n2246   公塭里           42         1\n2247   南興里           42         0\n2248   億載里           42         0\n2249   平通里           42         5\n2250   海東里           42         0\n2251   青草里           44         0\n2252   保安里           44         0\n2253   赤嵌里           44        11\n2254   大成里           44         1\n2255   城北里           44         0\n2256   城南里           44         1\n2257   法華里           44         2\n2258   海南里           44         1\n2259   國安里           44         2\n2260   溪心里           44         8\n2261   淵東里           44         0\n2262   城中里           44         0\n2263   城東里           44         1\n2264   學東里           44         1\n2265   東灣里           44         1\n2266   南灣里           44         0\n2267   崑山里           44         5\n2268   大灣里           44         5\n2269   五王里           44         4\n2270   安康里           44         3\n2271   西橋里           44         5\n2272   網寮里           44         3\n2273   大橋里           44        11\n2274   東橋里           44         4\n2275   烏竹里           44         0\n2276   王行里           44         1\n2277   大智里           44         5\n2278   崇文里           44         3\n2279   崇成里           44         3\n2280   崇明里           44         5\n2281   大福里           44         0\n2282   崇德里           44         0\n2283   大德里           44         0\n2284   崇學里           44         0\n2285   和平里           44         9\n2286   崇善里           44        12\n2287   路東里           44         0\n2288   虎尾里           44         6\n2289   忠孝里           44         0\n2290   裕聖里           44         1\n2291   崇信里           44         4\n2292   德光里           44         4\n2293   復興里           44         0\n2294   自強里           44         7\n2295   文聖里           44         3\n2296   富裕里           44         7\n2297   龍山里           44         1\n2298   關聖里           44         4\n2299   新東里           44         0\n2300   富強里           44        15\n2301   泉南里           44         4\n2302   東聖里           44         2\n2303   東安里           44         2\n2304   大同里           44         0\n2305   衛國里           44         3\n2306   裕農里           44         8\n2307   南聖里           44         4\n2308   崇誨里           44         4\n2309   東門里           44         1\n2310   中西里           44         3\n2311   東明里           44         4\n2312   圍下里           44         2\n2313   東光里           44         9\n2314   後甲里           44        16\n2315   莊敬里           44         8\n2316   小東里           44        10\n2317   大學里           44         9\n2318   成大里           44        10\n2319   公園里           44         0\n2320   中樓里           44         1\n2321   賢北里           44        15\n2322   大豐里           44         3\n2323   大港里           44         7\n2324   正覺里           44        18\n2325   大和里           44         6\n2326   成功里           44        13\n2327   佛壇里           44         3\n2328   同安里           44         1\n2329   松安里           44         2\n2330   永寧里           44         1\n2331   喜南里           44         0\n2332   喜東里           44         1\n2333   喜北里           44         1\n2334   南都里           44         3\n2335   南華里           44         8\n2336   建南里           44         0\n2337   明興里           44         3\n2338   郡南里           44         3\n2339   開南里           44        10\n2340   明亮里           44         3\n2341   鯤鯓里           44         0\n2342   大忠里           44         6\n2343   光明里           44         0\n2344   府南里           44         4\n2345   大林里           44         0\n2346   國宅里           44         1\n2347   田寮里           44         2\n2348   新生里           44         0\n2349   竹溪里           44         1\n2350   明德里           44         0\n2351   再興里           44         9\n2352   彰南里           44         2\n2353   金華里           44         5\n2354   新興里           44        11\n2355   文南里           44         6\n2356   新昌里           44         5\n2357   廣州里           44         4\n2358   文華里           44         3\n2359   溪頂里           44         8\n2360   海佃里           44         3\n2361   溪東里           44         5\n2362   溪北里           44         6\n2363   溪墘里           44         0\n2364   安富里           44        13\n2365   塩田里           44         3\n2366   鳳凰里           44         3\n2367   公親里           44         0\n2368   砂崙里           44         0\n2369   文平里           44         3\n2370   國平里           44         5\n2371   育平里           44         6\n2372   華平里           44         3\n2373   怡平里           44         4\n2374   建平里           44         8\n2375   幸福里           44         4\n2376   上崙里           44         8\n2377   後壁里           44         3\n2378   仁和里           44         0\n2379   仁愛里           44         0\n2380   仁德里           44         0\n2381   興農里           44         2\n2382   省躬里           44         5\n2383   新田里           44         5\n2384   一甲里           44         0\n2385   德高里           44         2\n2386   中洲里           44         1\n2387   西灣里           44         2\n2388   甲頂里           44         2\n2389   永康里           44         3\n2390   正強里           44         8\n2391   漁光里           44         0\n2392   金城里           44         5\n2393   尚頂里           44         4\n2394   神洲里           44         0\n2395   復國里           44        13\n2396   三合里           44         3\n2397   復華里           44        19\n2398   二王里           44         3\n2399   東智里           44         4\n2400   大恩里           44        11\n2401   西湖里           44         6\n2402   平安里           44         6\n2403   西賢里           44         4\n2404   四草里           44         0\n2405   安東里           44         0\n2406   淵中里           44         1\n2407   城西里           44         0\n2408   佃東里           44         1\n2409   新順里           44         2\n2410   新樹里           44         1\n2411   塩行里           44         5\n2412   海西里           44         5\n2413   佃西里           44         0\n2414   文賢里           44        11\n2415   大光里           44         0\n2416   南美里           44         0\n2417   西和里           44         0\n2418   塩洲里           44         7\n2419   東興里           44         2\n2420   重興里           44         1\n2421   和順里           44         6\n2422   力行里           44         4\n2423   文成里           44         3\n2424   元寶里           44         3\n2425   開元里           44         1\n2426   成德里           44         4\n2427   永華里           44         3\n2428   郡王里           44         1\n2429   北灣里           44         3\n2430   龍潭里           44         5\n2431   埔園里           44        11\n2432   三民里           44         0\n2433   振興里           44         6\n2434   永祥里           44        13\n2435   文元里           44         6\n2436   開山里           44         5\n2437   大涼里           44         2\n2438   藥王里           44         6\n2439   光賢里           44         2\n2440   二行里           44         1\n2441   大甲里           44         1\n2442   仁義里           44        10\n2443   土庫里           44         0\n2444   太子里           44         5\n2445   安西里           44         0\n2446   大安里           44         6\n2447   安和里           44         7\n2448   理想里           44         6\n2449   安慶里           44         2\n2450   梅花里           44         5\n2451   頂安里           44         2\n2452   安順里           44         0\n2453   總頭里           44         0\n2454   原佃里           44         0\n2455   東和里           44         1\n2456   光復里           44         1\n2457   勝利里           44         0\n2458   建國里           44         2\n2459   六合里           44         8\n2460   淵西里           44         2\n2461   長安里           44        13\n2462   中華里           44         3\n2463   中興里           44         0\n2464   西勢里           44         0\n2465   蔦松里           44         1\n2466   顯宮里           44         0\n2467   州南里           44         0\n2468   布袋里           44         0\n2469   州北里           44         0\n2470   塭南里           44         0\n2471   公塭里           44         1\n2472   南興里           44         0\n2473   億載里           44         2\n2474   平通里           44         4\n2475   海東里           44         7\n2476   青草里           46         0\n2477   保安里           46         0\n2478   赤嵌里           46         9\n2479   大成里           46         1\n2480   城北里           46         0\n2481   城南里           46         0\n2482   法華里           46         3\n2483   海南里           46         0\n2484   國安里           46         0\n2485   溪心里           46         2\n2486   淵東里           46         1\n2487   城中里           46         0\n2488   城東里           46         0\n2489   學東里           46         0\n2490   東灣里           46         0\n2491   南灣里           46         2\n2492   崑山里           46         3\n2493   大灣里           46         0\n2494   五王里           46         2\n2495   安康里           46         0\n2496   西橋里           46         4\n2497   網寮里           46         1\n2498   大橋里           46         2\n2499   東橋里           46         0\n2500   烏竹里           46         0\n2501   王行里           46         0\n2502   大智里           46         1\n2503   崇文里           46         2\n2504   崇成里           46         0\n2505   崇明里           46         2\n2506   大福里           46         0\n2507   崇德里           46         0\n2508   大德里           46         0\n2509   崇學里           46         0\n2510   和平里           46         4\n2511   崇善里           46         4\n2512   路東里           46         0\n2513   虎尾里           46         4\n2514   忠孝里           46         0\n2515   裕聖里           46         1\n2516   崇信里           46         2\n2517   德光里           46         1\n2518   復興里           46         0\n2519   自強里           46         3\n2520   文聖里           46         3\n2521   富裕里           46         2\n2522   龍山里           46         1\n2523   關聖里           46         1\n2524   新東里           46         0\n2525   富強里           46         6\n2526   泉南里           46         4\n2527   東聖里           46         1\n2528   東安里           46         0\n2529   大同里           46         0\n2530   衛國里           46         1\n2531   裕農里           46         3\n2532   南聖里           46         3\n2533   崇誨里           46         4\n2534   東門里           46         0\n2535   中西里           46         1\n2536   東明里           46         4\n2537   圍下里           46         0\n2538   東光里           46         2\n2539   後甲里           46         9\n2540   莊敬里           46         4\n2541   小東里           46         5\n2542   大學里           46         0\n2543   成大里           46         4\n2544   公園里           46         1\n2545   中樓里           46         1\n2546   賢北里           46         7\n2547   大豐里           46         5\n2548   大港里           46         4\n2549   正覺里           46         7\n2550   大和里           46         2\n2551   成功里           46         0\n2552   佛壇里           46         5\n2553   同安里           46         1\n2554   松安里           46         2\n2555   永寧里           46         1\n2556   喜南里           46         2\n2557   喜東里           46         1\n2558   喜北里           46         1\n2559   南都里           46         1\n2560   南華里           46         0\n2561   建南里           46         0\n2562   明興里           46         1\n2563   郡南里           46         4\n2564   開南里           46         4\n2565   明亮里           46         3\n2566   鯤鯓里           46         0\n2567   大忠里           46         1\n2568   光明里           46         0\n2569   府南里           46         1\n2570   大林里           46         0\n2571   國宅里           46         0\n2572   田寮里           46         0\n2573   新生里           46         0\n2574   竹溪里           46         1\n2575   明德里           46         0\n2576   再興里           46         3\n2577   彰南里           46         2\n2578   金華里           46         3\n2579   新興里           46         3\n2580   文南里           46         4\n2581   新昌里           46         3\n2582   廣州里           46         4\n2583   文華里           46         0\n2584   溪頂里           46         1\n2585   海佃里           46         0\n2586   溪東里           46         0\n2587   溪北里           46         3\n2588   溪墘里           46         1\n2589   安富里           46         1\n2590   塩田里           46         0\n2591   鳳凰里           46         1\n2592   公親里           46         0\n2593   砂崙里           46         1\n2594   文平里           46         1\n2595   國平里           46         0\n2596   育平里           46         3\n2597   華平里           46         3\n2598   怡平里           46         1\n2599   建平里           46         1\n2600   幸福里           46         0\n2601   上崙里           46         0\n2602   後壁里           46         0\n2603   仁和里           46         5\n2604   仁愛里           46         0\n2605   仁德里           46         7\n2606   興農里           46         1\n2607   省躬里           46         1\n2608   新田里           46         2\n2609   一甲里           46         0\n2610   德高里           46         4\n2611   中洲里           46         3\n2612   西灣里           46         1\n2613   甲頂里           46         3\n2614   永康里           46         3\n2615   正強里           46         2\n2616   漁光里           46         1\n2617   金城里           46         0\n2618   尚頂里           46         3\n2619   神洲里           46         1\n2620   復國里           46         0\n2621   三合里           46         0\n2622   復華里           46         0\n2623   二王里           46         2\n2624   東智里           46         6\n2625   大恩里           46         2\n2626   西湖里           46         2\n2627   平安里           46         2\n2628   西賢里           46         3\n2629   四草里           46         0\n2630   安東里           46         0\n2631   淵中里           46         1\n2632   城西里           46         0\n2633   佃東里           46         7\n2634   新順里           46         0\n2635   新樹里           46         0\n2636   塩行里           46         4\n2637   海西里           46         2\n2638   佃西里           46         0\n2639   文賢里           46         0\n2640   大光里           46         0\n2641   南美里           46         0\n2642   西和里           46         0\n2643   塩洲里           46         2\n2644   東興里           46         3\n2645   重興里           46         4\n2646   和順里           46         2\n2647   力行里           46         2\n2648   文成里           46         2\n2649   元寶里           46         3\n2650   開元里           46         4\n2651   成德里           46         9\n2652   永華里           46         3\n2653   郡王里           46         1\n2654   北灣里           46         0\n2655   龍潭里           46         0\n2656   埔園里           46         1\n2657   三民里           46         0\n2658   振興里           46         0\n2659   永祥里           46         1\n2660   文元里           46         4\n2661   開山里           46         0\n2662   大涼里           46         3\n2663   藥王里           46         3\n2664   光賢里           46         2\n2665   二行里           46         0\n2666   大甲里           46         1\n2667   仁義里           46        16\n2668   土庫里           46         1\n2669   太子里           46         1\n2670   安西里           46         0\n2671   大安里           46         4\n2672   安和里           46         0\n2673   理想里           46         2\n2674   安慶里           46         7\n2675   梅花里           46         1\n2676   頂安里           46         2\n2677   安順里           46         1\n2678   總頭里           46         2\n2679   原佃里           46         1\n2680   東和里           46         0\n2681   光復里           46         3\n2682   勝利里           46         0\n2683   建國里           46         0\n2684   六合里           46         1\n2685   淵西里           46         0\n2686   長安里           46         0\n2687   中華里           46         0\n2688   中興里           46         1\n2689   西勢里           46         0\n2690   蔦松里           46         0\n2691   顯宮里           46         0\n2692   州南里           46         0\n2693   布袋里           46         0\n2694   州北里           46         0\n2695   塭南里           46         0\n2696   公塭里           46         0\n2697   南興里           46         0\n2698   億載里           46         0\n2699   平通里           46         1\n2700   海東里           46         4\n2701   青草里           48         0\n2702   保安里           48         0\n2703   赤嵌里           48         4\n2704   大成里           48         0\n2705   城北里           48         0\n2706   城南里           48         0\n2707   法華里           48         0\n2708   海南里           48         0\n2709   國安里           48         0\n2710   溪心里           48         0\n2711   淵東里           48         1\n2712   城中里           48         0\n2713   城東里           48         0\n2714   學東里           48         1\n2715   東灣里           48         0\n2716   南灣里           48         0\n2717   崑山里           48         1\n2718   大灣里           48         0\n2719   五王里           48         1\n2720   安康里           48         0\n2721   西橋里           48         0\n2722   網寮里           48         1\n2723   大橋里           48         1\n2724   東橋里           48         0\n2725   烏竹里           48         0\n2726   王行里           48         0\n2727   大智里           48         3\n2728   崇文里           48         0\n2729   崇成里           48         0\n2730   崇明里           48         0\n2731   大福里           48         0\n2732   崇德里           48         1\n2733   大德里           48         0\n2734   崇學里           48         3\n2735   和平里           48         1\n2736   崇善里           48         0\n2737   路東里           48         0\n2738   虎尾里           48         1\n2739   忠孝里           48         0\n2740   裕聖里           48         0\n2741   崇信里           48         0\n2742   德光里           48         0\n2743   復興里           48         0\n2744   自強里           48         1\n2745   文聖里           48         1\n2746   富裕里           48         0\n2747   龍山里           48         0\n2748   關聖里           48         1\n2749   新東里           48         0\n2750   富強里           48         1\n2751   泉南里           48         1\n2752   東聖里           48         1\n2753   東安里           48         0\n2754   大同里           48         4\n2755   衛國里           48         0\n2756   裕農里           48         0\n2757   南聖里           48         0\n2758   崇誨里           48         1\n2759   東門里           48         0\n2760   中西里           48         0\n2761   東明里           48         0\n2762   圍下里           48         0\n2763   東光里           48         0\n2764   後甲里           48         1\n2765   莊敬里           48         0\n2766   小東里           48         0\n2767   大學里           48         0\n2768   成大里           48         0\n2769   公園里           48         0\n2770   中樓里           48         1\n2771   賢北里           48         0\n2772   大豐里           48         0\n2773   大港里           48         0\n2774   正覺里           48         1\n2775   大和里           48         2\n2776   成功里           48         0\n2777   佛壇里           48         2\n2778   同安里           48         1\n2779   松安里           48         1\n2780   永寧里           48         0\n2781   喜南里           48         0\n2782   喜東里           48         0\n2783   喜北里           48         0\n2784   南都里           48         0\n2785   南華里           48         0\n2786   建南里           48         0\n2787   明興里           48         1\n2788   郡南里           48         0\n2789   開南里           48         0\n2790   明亮里           48         1\n2791   鯤鯓里           48         0\n2792   大忠里           48         1\n2793   光明里           48         0\n2794   府南里           48         0\n2795   大林里           48         0\n2796   國宅里           48         2\n2797   田寮里           48         1\n2798   新生里           48         1\n2799   竹溪里           48         1\n2800   明德里           48         0\n2801   再興里           48         1\n2802   彰南里           48         0\n2803   金華里           48         2\n2804   新興里           48         1\n2805   文南里           48         0\n2806   新昌里           48         0\n2807   廣州里           48         1\n2808   文華里           48         2\n2809   溪頂里           48         1\n2810   海佃里           48         1\n2811   溪東里           48         2\n2812   溪北里           48         0\n2813   溪墘里           48         1\n2814   安富里           48         0\n2815   塩田里           48         0\n2816   鳳凰里           48         0\n2817   公親里           48         0\n2818   砂崙里           48         0\n2819   文平里           48         1\n2820   國平里           48         0\n2821   育平里           48         1\n2822   華平里           48         1\n2823   怡平里           48         1\n2824   建平里           48         1\n2825   幸福里           48         1\n2826   上崙里           48         1\n2827   後壁里           48         0\n2828   仁和里           48         0\n2829   仁愛里           48         2\n2830   仁德里           48         1\n2831   興農里           48         1\n2832   省躬里           48         0\n2833   新田里           48         0\n2834   一甲里           48         0\n2835   德高里           48         1\n2836   中洲里           48         0\n2837   西灣里           48         0\n2838   甲頂里           48         1\n2839   永康里           48         0\n2840   正強里           48         0\n2841   漁光里           48         0\n2842   金城里           48         0\n2843   尚頂里           48         0\n2844   神洲里           48         0\n2845   復國里           48         2\n2846   三合里           48         0\n2847   復華里           48         1\n2848   二王里           48         0\n2849   東智里           48         2\n2850   大恩里           48         0\n2851   西湖里           48         0\n2852   平安里           48         1\n2853   西賢里           48         0\n2854   四草里           48         0\n2855   安東里           48         0\n2856   淵中里           48         1\n2857   城西里           48         0\n2858   佃東里           48         0\n2859   新順里           48         5\n2860   新樹里           48         0\n2861   塩行里           48         3\n2862   海西里           48         0\n2863   佃西里           48         0\n2864   文賢里           48         0\n2865   大光里           48         0\n2866   南美里           48         0\n2867   西和里           48         0\n2868   塩洲里           48         2\n2869   東興里           48         0\n2870   重興里           48         0\n2871   和順里           48         0\n2872   力行里           48         2\n2873   文成里           48         0\n2874   元寶里           48         2\n2875   開元里           48         0\n2876   成德里           48         1\n2877   永華里           48         1\n2878   郡王里           48         0\n2879   北灣里           48         0\n2880   龍潭里           48         1\n2881   埔園里           48         0\n2882   三民里           48         0\n2883   振興里           48         0\n2884   永祥里           48         0\n2885   文元里           48         1\n2886   開山里           48         1\n2887   大涼里           48         1\n2888   藥王里           48         0\n2889   光賢里           48         1\n2890   二行里           48         1\n2891   大甲里           48         0\n2892   仁義里           48         3\n2893   土庫里           48         1\n2894   太子里           48         0\n2895   安西里           48         0\n2896   大安里           48         2\n2897   安和里           48         0\n2898   理想里           48         1\n2899   安慶里           48         0\n2900   梅花里           48         0\n2901   頂安里           48         0\n2902   安順里           48         0\n2903   總頭里           48         0\n2904   原佃里           48         0\n2905   東和里           48         0\n2906   光復里           48         0\n2907   勝利里           48         1\n2908   建國里           48         0\n2909   六合里           48         0\n2910   淵西里           48         0\n2911   長安里           48         0\n2912   中華里           48         0\n2913   中興里           48         0\n2914   西勢里           48         0\n2915   蔦松里           48         0\n2916   顯宮里           48         0\n2917   州南里           48         1\n2918   布袋里           48         0\n2919   州北里           48         0\n2920   塭南里           48         0\n2921   公塭里           48         0\n2922   南興里           48         0\n2923   億載里           48         0\n2924   平通里           48         0\n2925   海東里           48         0\n2926   青草里           49         0\n2927   保安里           49         0\n2928   赤嵌里           49         4\n2929   大成里           49         0\n2930   城北里           49         0\n2931   城南里           49         0\n2932   法華里           49         1\n2933   海南里           49         0\n2934   國安里           49         0\n2935   溪心里           49         2\n2936   淵東里           49         0\n2937   城中里           49         0\n2938   城東里           49         0\n2939   學東里           49         0\n2940   東灣里           49         0\n2941   南灣里           49         0\n2942   崑山里           49         0\n2943   大灣里           49         0\n2944   五王里           49         0\n2945   安康里           49         1\n2946   西橋里           49         0\n2947   網寮里           49         0\n2948   大橋里           49         1\n2949   東橋里           49         1\n2950   烏竹里           49         0\n2951   王行里           49         1\n2952   大智里           49         0\n2953   崇文里           49         0\n2954   崇成里           49         0\n2955   崇明里           49         1\n2956   大福里           49         0\n2957   崇德里           49         1\n2958   大德里           49         0\n2959   崇學里           49         1\n2960   和平里           49         0\n2961   崇善里           49         1\n2962   路東里           49         0\n2963   虎尾里           49         0\n2964   忠孝里           49         0\n2965   裕聖里           49         0\n2966   崇信里           49         0\n2967   德光里           49         0\n2968   復興里           49         1\n2969   自強里           49         1\n2970   文聖里           49         0\n2971   富裕里           49         0\n2972   龍山里           49         1\n2973   關聖里           49         1\n2974   新東里           49         0\n2975   富強里           49         0\n2976   泉南里           49         0\n2977   東聖里           49         0\n2978   東安里           49         0\n2979   大同里           49         0\n2980   衛國里           49         0\n2981   裕農里           49         1\n2982   南聖里           49         0\n2983   崇誨里           49         0\n2984   東門里           49         0\n2985   中西里           49         0\n2986   東明里           49         0\n2987   圍下里           49         0\n2988   東光里           49         0\n2989   後甲里           49         0\n2990   莊敬里           49         0\n2991   小東里           49         1\n2992   大學里           49         0\n2993   成大里           49         0\n2994   公園里           49         0\n2995   中樓里           49         0\n2996   賢北里           49         1\n2997   大豐里           49         1\n2998   大港里           49         0\n2999   正覺里           49         0\n3000   大和里           49         1\n3001   成功里           49         0\n3002   佛壇里           49         0\n3003   同安里           49         0\n3004   松安里           49         1\n3005   永寧里           49         0\n3006   喜南里           49         0\n3007   喜東里           49         0\n3008   喜北里           49         0\n3009   南都里           49         0\n3010   南華里           49         0\n3011   建南里           49         0\n3012   明興里           49         1\n3013   郡南里           49         0\n3014   開南里           49         1\n3015   明亮里           49         1\n3016   鯤鯓里           49         0\n3017   大忠里           49         0\n3018   光明里           49         0\n3019   府南里           49         0\n3020   大林里           49         0\n3021   國宅里           49         1\n3022   田寮里           49         0\n3023   新生里           49         0\n3024   竹溪里           49         0\n3025   明德里           49         0\n3026   再興里           49         0\n3027   彰南里           49         0\n3028   金華里           49         1\n3029   新興里           49         2\n3030   文南里           49         1\n3031   新昌里           49         0\n3032   廣州里           49         1\n3033   文華里           49         0\n3034   溪頂里           49         0\n3035   海佃里           49         1\n3036   溪東里           49         0\n3037   溪北里           49         0\n3038   溪墘里           49         0\n3039   安富里           49         0\n3040   塩田里           49         0\n3041   鳳凰里           49         0\n3042   公親里           49         0\n3043   砂崙里           49         0\n3044   文平里           49         0\n3045   國平里           49         1\n3046   育平里           49         1\n3047   華平里           49         1\n3048   怡平里           49         4\n3049   建平里           49         0\n3050   幸福里           49         0\n3051   上崙里           49         0\n3052   後壁里           49         0\n3053   仁和里           49         0\n3054   仁愛里           49         0\n3055   仁德里           49         1\n3056   興農里           49         0\n3057   省躬里           49         0\n3058   新田里           49         0\n3059   一甲里           49         0\n3060   德高里           49         0\n3061   中洲里           49         0\n3062   西灣里           49         0\n3063   甲頂里           49         0\n3064   永康里           49         0\n3065   正強里           49         2\n3066   漁光里           49         0\n3067   金城里           49         0\n3068   尚頂里           49         0\n3069   神洲里           49         0\n3070   復國里           49         0\n3071   三合里           49         0\n3072   復華里           49         2\n3073   二王里           49         0\n3074   東智里           49         0\n3075   大恩里           49         0\n3076   西湖里           49         0\n3077   平安里           49         0\n3078   西賢里           49         0\n3079   四草里           49         0\n3080   安東里           49         0\n3081   淵中里           49         0\n3082   城西里           49         0\n3083   佃東里           49         0\n3084   新順里           49         1\n3085   新樹里           49         0\n3086   塩行里           49         1\n3087   海西里           49         1\n3088   佃西里           49         1\n3089   文賢里           49         0\n3090   大光里           49         0\n3091   南美里           49         0\n3092   西和里           49         0\n3093   塩洲里           49         1\n3094   東興里           49         0\n3095   重興里           49         0\n3096   和順里           49         0\n3097   力行里           49         1\n3098   文成里           49         0\n3099   元寶里           49         0\n3100   開元里           49         1\n3101   成德里           49         1\n3102   永華里           49         1\n3103   郡王里           49         0\n3104   北灣里           49         0\n3105   龍潭里           49         1\n3106   埔園里           49         0\n3107   三民里           49         0\n3108   振興里           49         1\n3109   永祥里           49         0\n3110   文元里           49         0\n3111   開山里           49         0\n3112   大涼里           49         0\n3113   藥王里           49         1\n3114   光賢里           49         1\n3115   二行里           49         0\n3116   大甲里           49         0\n3117   仁義里           49         2\n3118   土庫里           49         0\n3119   太子里           49         0\n3120   安西里           49         0\n3121   大安里           49         0\n3122   安和里           49         0\n3123   理想里           49         0\n3124   安慶里           49         1\n3125   梅花里           49         0\n3126   頂安里           49         0\n3127   安順里           49         1\n3128   總頭里           49         0\n3129   原佃里           49         0\n3130   東和里           49         1\n3131   光復里           49         0\n3132   勝利里           49         0\n3133   建國里           49         0\n3134   六合里           49         0\n3135   淵西里           49         0\n3136   長安里           49         2\n3137   中華里           49         0\n3138   中興里           49         0\n3139   西勢里           49         1\n3140   蔦松里           49         0\n3141   顯宮里           49         0\n3142   州南里           49         0\n3143   布袋里           49         0\n3144   州北里           49         0\n3145   塭南里           49         0\n3146   公塭里           49         0\n3147   南興里           49         0\n3148   億載里           49         0\n3149   平通里           49         0\n3150   海東里           49         0\n3151   青草里           43         0\n3152   保安里           43         0\n3153   赤嵌里           43         0\n3154   大成里           43         5\n3155   城北里           43         0\n3156   城南里           43         0\n3157   法華里           43         6\n3158   海南里           43         0\n3159   國安里           43         1\n3160   溪心里           43         3\n3161   淵東里           43         1\n3162   城中里           43         0\n3163   城東里           43         0\n3164   學東里           43         2\n3165   東灣里           43         3\n3166   南灣里           43         2\n3167   崑山里           43         4\n3168   大灣里           43         0\n3169   五王里           43         2\n3170   安康里           43        11\n3171   西橋里           43        11\n3172   網寮里           43         8\n3173   大橋里           43        10\n3174   東橋里           43         2\n3175   烏竹里           43         0\n3176   王行里           43         0\n3177   大智里           43         3\n3178   崇文里           43         2\n3179   崇成里           43         6\n3180   崇明里           43         1\n3181   大福里           43         1\n3182   崇德里           43         5\n3183   大德里           43         0\n3184   崇學里           43         3\n3185   和平里           43         9\n3186   崇善里           43         6\n3187   路東里           43         2\n3188   虎尾里           43         8\n3189   忠孝里           43         0\n3190   裕聖里           43         1\n3191   崇信里           43         5\n3192   德光里           43         1\n3193   復興里           43         0\n3194   自強里           43         6\n3195   文聖里           43         3\n3196   富裕里           43         4\n3197   龍山里           43         5\n3198   關聖里           43         6\n3199   新東里           43        10\n3200   富強里           43        15\n3201   泉南里           43        10\n3202   東聖里           43         6\n3203   東安里           43         2\n3204   大同里           43         9\n3205   衛國里           43         4\n3206   裕農里           43         4\n3207   南聖里           43         7\n3208   崇誨里           43         4\n3209   東門里           43         1\n3210   中西里           43         3\n3211   東明里           43         7\n3212   圍下里           43         1\n3213   東光里           43         3\n3214   後甲里           43        29\n3215   莊敬里           43         4\n3216   小東里           43        12\n3217   大學里           43         2\n3218   成大里           43         5\n3219   公園里           43         5\n3220   中樓里           43         4\n3221   賢北里           43         3\n3222   大豐里           43         9\n3223   大港里           43         8\n3224   正覺里           43        14\n3225   大和里           43         7\n3226   成功里           43         9\n3227   佛壇里           43         4\n3228   同安里           43         0\n3229   松安里           43         2\n3230   永寧里           43         0\n3231   喜南里           43         0\n3232   喜東里           43         1\n3233   喜北里           43         5\n3234   南都里           43         0\n3235   南華里           43         2\n3236   建南里           43         3\n3237   明興里           43         2\n3238   郡南里           43         1\n3239   開南里           43        11\n3240   明亮里           43         8\n3241   鯤鯓里           43         0\n3242   大忠里           43         3\n3243   光明里           43         5\n3244   府南里           43         5\n3245   大林里           43         3\n3246   國宅里           43         2\n3247   田寮里           43         5\n3248   新生里           43         0\n3249   竹溪里           43         1\n3250   明德里           43         0\n3251   再興里           43         7\n3252   彰南里           43         2\n3253   金華里           43         0\n3254   新興里           43         8\n3255   文南里           43         6\n3256   新昌里           43         6\n3257   廣州里           43         2\n3258   文華里           43         2\n3259   溪頂里           43         4\n3260   海佃里           43         3\n3261   溪東里           43         7\n3262   溪北里           43         3\n3263   溪墘里           43         0\n3264   安富里           43         8\n3265   塩田里           43         1\n3266   鳳凰里           43         6\n3267   公親里           43         0\n3268   砂崙里           43         0\n3269   文平里           43         4\n3270   國平里           43         3\n3271   育平里           43         7\n3272   華平里           43         7\n3273   怡平里           43         2\n3274   建平里           43         3\n3275   幸福里           43         2\n3276   上崙里           43         1\n3277   後壁里           43         2\n3278   仁和里           43         7\n3279   仁愛里           43         5\n3280   仁德里           43         5\n3281   興農里           43         0\n3282   省躬里           43         0\n3283   新田里           43         0\n3284   一甲里           43         4\n3285   德高里           43         6\n3286   中洲里           43         0\n3287   西灣里           43         7\n3288   甲頂里           43         4\n3289   永康里           43         1\n3290   正強里           43        10\n3291   漁光里           43         1\n3292   金城里           43         1\n3293   尚頂里           43         6\n3294   神洲里           43         0\n3295   復國里           43        14\n3296   三合里           43         2\n3297   復華里           43         6\n3298   二王里           43         0\n3299   東智里           43         5\n3300   大恩里           43         7\n3301   西湖里           43         3\n3302   平安里           43         2\n3303   西賢里           43         5\n3304   四草里           43         0\n3305   安東里           43         6\n3306   淵中里           43         3\n3307   城西里           43         0\n3308   佃東里           43         2\n3309   新順里           43         6\n3310   新樹里           43         0\n3311   塩行里           43         8\n3312   海西里           43         2\n3313   佃西里           43         0\n3314   文賢里           43         0\n3315   大光里           43         0\n3316   南美里           43         5\n3317   西和里           43         0\n3318   塩洲里           43         6\n3319   東興里           43         8\n3320   重興里           43         1\n3321   和順里           43         5\n3322   力行里           43         3\n3323   文成里           43         4\n3324   元寶里           43         8\n3325   開元里           43         3\n3326   成德里           43         2\n3327   永華里           43         4\n3328   郡王里           43         3\n3329   北灣里           43         1\n3330   龍潭里           43         3\n3331   埔園里           43         7\n3332   三民里           43         0\n3333   振興里           43         0\n3334   永祥里           43         6\n3335   文元里           43         5\n3336   開山里           43         5\n3337   大涼里           43         1\n3338   藥王里           43         3\n3339   光賢里           43         4\n3340   二行里           43         0\n3341   大甲里           43         0\n3342   仁義里           43        14\n3343   土庫里           43         1\n3344   太子里           43         4\n3345   安西里           43         9\n3346   大安里           43        13\n3347   安和里           43         0\n3348   理想里           43         2\n3349   安慶里           43         4\n3350   梅花里           43        18\n3351   頂安里           43         2\n3352   安順里           43         3\n3353   總頭里           43         1\n3354   原佃里           43         2\n3355   東和里           43         2\n3356   光復里           43         0\n3357   勝利里           43         0\n3358   建國里           43         2\n3359   六合里           43        10\n3360   淵西里           43         2\n3361   長安里           43         2\n3362   中華里           43         3\n3363   中興里           43         0\n3364   西勢里           43         5\n3365   蔦松里           43         2\n3366   顯宮里           43         0\n3367   州南里           43         2\n3368   布袋里           43         0\n3369   州北里           43         2\n3370   塭南里           43         2\n3371   公塭里           43         0\n3372   南興里           43         0\n3373   億載里           43         0\n3374   平通里           43         4\n3375   海東里           43        10\n3376   青草里           33         0\n3377   保安里           33         0\n3378   赤嵌里           33         0\n3379   大成里           33         0\n3380   城北里           33         0\n3381   城南里           33         1\n3382   法華里           33         0\n3383   海南里           33         1\n3384   國安里           33         4\n3385   溪心里           33         0\n3386   淵東里           33         1\n3387   城中里           33         0\n3388   城東里           33         0\n3389   學東里           33         0\n3390   東灣里           33         0\n3391   南灣里           33         0\n3392   崑山里           33         5\n3393   大灣里           33         0\n3394   五王里           33        11\n3395   安康里           33         1\n3396   西橋里           33         1\n3397   網寮里           33         0\n3398   大橋里           33         7\n3399   東橋里           33         7\n3400   烏竹里           33         0\n3401   王行里           33         0\n3402   大智里           33         2\n3403   崇文里           33         2\n3404   崇成里           33         1\n3405   崇明里           33         2\n3406   大福里           33         1\n3407   崇德里           33        12\n3408   大德里           33         0\n3409   崇學里           33        16\n3410   和平里           33         0\n3411   崇善里           33         4\n3412   路東里           33         0\n3413   虎尾里           33         5\n3414   忠孝里           33         3\n3415   裕聖里           33         1\n3416   崇信里           33         6\n3417   德光里           33        11\n3418   復興里           33         0\n3419   自強里           33         6\n3420   文聖里           33         0\n3421   富裕里           33         0\n3422   龍山里           33         2\n3423   關聖里           33         3\n3424   新東里           33         5\n3425   富強里           33         2\n3426   泉南里           33         2\n3427   東聖里           33         1\n3428   東安里           33         0\n3429   大同里           33         0\n3430   衛國里           33         1\n3431   裕農里           33         3\n3432   南聖里           33         2\n3433   崇誨里           33         0\n3434   東門里           33         0\n3435   中西里           33         1\n3436   東明里           33         0\n3437   圍下里           33         0\n3438   東光里           33         0\n3439   後甲里           33         1\n3440   莊敬里           33         2\n3441   小東里           33         3\n3442   大學里           33         0\n3443   成大里           33         0\n3444   公園里           33         2\n3445   中樓里           33         4\n3446   賢北里           33         1\n3447   大豐里           33         0\n3448   大港里           33         0\n3449   正覺里           33         0\n3450   大和里           33         1\n3451   成功里           33         0\n3452   佛壇里           33         0\n3453   同安里           33         0\n3454   松安里           33         0\n3455   永寧里           33         0\n3456   喜南里           33         0\n3457   喜東里           33         0\n3458   喜北里           33         0\n3459   南都里           33         1\n3460   南華里           33        13\n3461   建南里           33         1\n3462   明興里           33         3\n3463   郡南里           33         0\n3464   開南里           33         1\n3465   明亮里           33         3\n3466   鯤鯓里           33         0\n3467   大忠里           33         0\n3468   光明里           33         2\n3469   府南里           33         6\n3470   大林里           33         0\n3471   國宅里           33         1\n3472   田寮里           33         0\n3473   新生里           33         1\n3474   竹溪里           33         0\n3475   明德里           33         0\n3476   再興里           33         0\n3477   彰南里           33         0\n3478   金華里           33         0\n3479   新興里           33         0\n3480   文南里           33         0\n3481   新昌里           33         2\n3482   廣州里           33         0\n3483   文華里           33         0\n3484   溪頂里           33         3\n3485   海佃里           33         5\n3486   溪東里           33         1\n3487   溪北里           33         1\n3488   溪墘里           33        27\n3489   安富里           33        11\n3490   塩田里           33         0\n3491   鳳凰里           33         9\n3492   公親里           33         0\n3493   砂崙里           33         0\n3494   文平里           33         1\n3495   國平里           33         1\n3496   育平里           33         1\n3497   華平里           33         0\n3498   怡平里           33         1\n3499   建平里           33         0\n3500   幸福里           33        15\n3501   上崙里           33         0\n3502   後壁里           33         0\n3503   仁和里           33         0\n3504   仁愛里           33         1\n3505   仁德里           33         3\n3506   興農里           33         1\n3507   省躬里           33         0\n3508   新田里           33         0\n3509   一甲里           33         0\n3510   德高里           33         4\n3511   中洲里           33         0\n3512   西灣里           33         2\n3513   甲頂里           33         9\n3514   永康里           33         1\n3515   正強里           33         0\n3516   漁光里           33         0\n3517   金城里           33         0\n3518   尚頂里           33         3\n3519   神洲里           33         2\n3520   復國里           33         5\n3521   三合里           33         8\n3522   復華里           33        12\n3523   二王里           33        12\n3524   東智里           33         0\n3525   大恩里           33         2\n3526   西湖里           33         1\n3527   平安里           33         7\n3528   西賢里           33         1\n3529   四草里           33         1\n3530   安東里           33         2\n3531   淵中里           33         0\n3532   城西里           33         0\n3533   佃東里           33         0\n3534   新順里           33         0\n3535   新樹里           33         0\n3536   塩行里           33         3\n3537   海西里           33         0\n3538   佃西里           33         1\n3539   文賢里           33         0\n3540   大光里           33         0\n3541   南美里           33         0\n3542   西和里           33         0\n3543   塩洲里           33         0\n3544   東興里           33         1\n3545   重興里           33         0\n3546   和順里           33         0\n3547   力行里           33         2\n3548   文成里           33         0\n3549   元寶里           33         0\n3550   開元里           33         1\n3551   成德里           33         1\n3552   永華里           33         0\n3553   郡王里           33         2\n3554   北灣里           33         0\n3555   龍潭里           33         0\n3556   埔園里           33         1\n3557   三民里           33         0\n3558   振興里           33         2\n3559   永祥里           33         0\n3560   文元里           33         0\n3561   開山里           33         0\n3562   大涼里           33         0\n3563   藥王里           33         1\n3564   光賢里           33         2\n3565   二行里           33         1\n3566   大甲里           33         0\n3567   仁義里           33         7\n3568   土庫里           33         2\n3569   太子里           33         1\n3570   安西里           33         0\n3571   大安里           33         1\n3572   安和里           33         2\n3573   理想里           33         3\n3574   安慶里           33         0\n3575   梅花里           33         1\n3576   頂安里           33         2\n3577   安順里           33         1\n3578   總頭里           33         0\n3579   原佃里           33         2\n3580   東和里           33         0\n3581   光復里           33         0\n3582   勝利里           33        15\n3583   建國里           33         0\n3584   六合里           33         3\n3585   淵西里           33         0\n3586   長安里           33         0\n3587   中華里           33         2\n3588   中興里           33         0\n3589   西勢里           33         0\n3590   蔦松里           33         1\n3591   顯宮里           33         0\n3592   州南里           33         1\n3593   布袋里           33         0\n3594   州北里           33         0\n3595   塭南里           33         1\n3596   公塭里           33         0\n3597   南興里           33         0\n3598   億載里           33         0\n3599   平通里           33         0\n3600   海東里           33         0\n3601   青草里           50         0\n3602   保安里           50         0\n3603   赤嵌里           50         0\n3604   大成里           50         0\n3605   城北里           50         0\n3606   城南里           50         1\n3607   法華里           50         1\n3608   海南里           50         0\n3609   國安里           50         0\n3610   溪心里           50         0\n3611   淵東里           50         0\n3612   城中里           50         0\n3613   城東里           50         0\n3614   學東里           50         0\n3615   東灣里           50         0\n3616   南灣里           50         0\n3617   崑山里           50         0\n3618   大灣里           50         0\n3619   五王里           50         0\n3620   安康里           50         0\n3621   西橋里           50         0\n3622   網寮里           50         0\n3623   大橋里           50         0\n3624   東橋里           50         1\n3625   烏竹里           50         0\n3626   王行里           50         0\n3627   大智里           50         0\n3628   崇文里           50         0\n3629   崇成里           50         0\n3630   崇明里           50         0\n3631   大福里           50         0\n3632   崇德里           50         0\n3633   大德里           50         0\n3634   崇學里           50         0\n3635   和平里           50         0\n3636   崇善里           50         0\n3637   路東里           50         0\n3638   虎尾里           50         0\n3639   忠孝里           50         0\n3640   裕聖里           50         1\n3641   崇信里           50         0\n3642   德光里           50         0\n3643   復興里           50         0\n3644   自強里           50         0\n3645   文聖里           50         0\n3646   富裕里           50         0\n3647   龍山里           50         0\n3648   關聖里           50         1\n3649   新東里           50         0\n3650   富強里           50         3\n3651   泉南里           50         0\n3652   東聖里           50         0\n3653   東安里           50         0\n3654   大同里           50         0\n3655   衛國里           50         0\n3656   裕農里           50         0\n3657   南聖里           50         0\n3658   崇誨里           50         0\n3659   東門里           50         0\n3660   中西里           50         0\n3661   東明里           50         0\n3662   圍下里           50         0\n3663   東光里           50         0\n3664   後甲里           50         0\n3665   莊敬里           50         0\n3666   小東里           50         0\n3667   大學里           50         0\n3668   成大里           50         0\n3669   公園里           50         2\n3670   中樓里           50         1\n3671   賢北里           50         0\n3672   大豐里           50         0\n3673   大港里           50         0\n3674   正覺里           50         1\n3675   大和里           50         0\n3676   成功里           50         0\n3677   佛壇里           50         0\n3678   同安里           50         1\n3679   松安里           50         0\n3680   永寧里           50         0\n3681   喜南里           50         0\n3682   喜東里           50         0\n3683   喜北里           50         0\n3684   南都里           50         0\n3685   南華里           50         0\n3686   建南里           50         0\n3687   明興里           50         0\n3688   郡南里           50         0\n3689   開南里           50         0\n3690   明亮里           50         0\n3691   鯤鯓里           50         1\n3692   大忠里           50         0\n3693   光明里           50         0\n3694   府南里           50         0\n3695   大林里           50         0\n3696   國宅里           50         0\n3697   田寮里           50         0\n3698   新生里           50         0\n3699   竹溪里           50         0\n3700   明德里           50         0\n3701   再興里           50         0\n3702   彰南里           50         0\n3703   金華里           50         3\n3704   新興里           50         0\n3705   文南里           50         0\n3706   新昌里           50         0\n3707   廣州里           50         0\n3708   文華里           50         0\n3709   溪頂里           50         1\n3710   海佃里           50         0\n3711   溪東里           50         0\n3712   溪北里           50         0\n3713   溪墘里           50         0\n3714   安富里           50         0\n3715   塩田里           50         0\n3716   鳳凰里           50         0\n3717   公親里           50         0\n3718   砂崙里           50         0\n3719   文平里           50         0\n3720   國平里           50         0\n3721   育平里           50         0\n3722   華平里           50         0\n3723   怡平里           50         0\n3724   建平里           50         0\n3725   幸福里           50         0\n3726   上崙里           50         1\n3727   後壁里           50         0\n3728   仁和里           50         0\n3729   仁愛里           50         0\n3730   仁德里           50         0\n3731   興農里           50         0\n3732   省躬里           50         0\n3733   新田里           50         0\n3734   一甲里           50         0\n3735   德高里           50         0\n3736   中洲里           50         0\n3737   西灣里           50         1\n3738   甲頂里           50         0\n3739   永康里           50         0\n3740   正強里           50         0\n3741   漁光里           50         0\n3742   金城里           50         0\n3743   尚頂里           50         0\n3744   神洲里           50         0\n3745   復國里           50         0\n3746   三合里           50         1\n3747   復華里           50         0\n3748   二王里           50         1\n3749   東智里           50         0\n3750   大恩里           50         0\n3751   西湖里           50         2\n3752   平安里           50         0\n3753   西賢里           50         0\n3754   四草里           50         0\n3755   安東里           50         0\n3756   淵中里           50         0\n3757   城西里           50         0\n3758   佃東里           50         0\n3759   新順里           50         1\n3760   新樹里           50         0\n3761   塩行里           50         1\n3762   海西里           50         0\n3763   佃西里           50         0\n3764   文賢里           50         0\n3765   大光里           50         0\n3766   南美里           50         0\n3767   西和里           50         0\n3768   塩洲里           50         0\n3769   東興里           50         0\n3770   重興里           50         0\n3771   和順里           50         0\n3772   力行里           50         1\n3773   文成里           50         0\n3774   元寶里           50         0\n3775   開元里           50         1\n3776   成德里           50         0\n3777   永華里           50         0\n3778   郡王里           50         1\n3779   北灣里           50         0\n3780   龍潭里           50         0\n3781   埔園里           50         0\n3782   三民里           50         0\n3783   振興里           50         1\n3784   永祥里           50         0\n3785   文元里           50         1\n3786   開山里           50         0\n3787   大涼里           50         0\n3788   藥王里           50         0\n3789   光賢里           50         0\n3790   二行里           50         1\n3791   大甲里           50         0\n3792   仁義里           50         2\n3793   土庫里           50         0\n3794   太子里           50         0\n3795   安西里           50         0\n3796   大安里           50         0\n3797   安和里           50         0\n3798   理想里           50         0\n3799   安慶里           50         0\n3800   梅花里           50         1\n3801   頂安里           50         1\n3802   安順里           50         0\n3803   總頭里           50         0\n3804   原佃里           50         1\n3805   東和里           50         2\n3806   光復里           50         0\n3807   勝利里           50         0\n3808   建國里           50         0\n3809   六合里           50         0\n3810   淵西里           50         0\n3811   長安里           50         0\n3812   中華里           50         0\n3813   中興里           50         0\n3814   西勢里           50         0\n3815   蔦松里           50         0\n3816   顯宮里           50         0\n3817   州南里           50         0\n3818   布袋里           50         0\n3819   州北里           50         0\n3820   塭南里           50         0\n3821   公塭里           50         0\n3822   南興里           50         0\n3823   億載里           50         0\n3824   平通里           50         0\n3825   海東里           50         0\n3826   青草里           32         0\n3827   保安里           32         0\n3828   赤嵌里           32         0\n3829   大成里           32         0\n3830   城北里           32         0\n3831   城南里           32         0\n3832   法華里           32         1\n3833   海南里           32         0\n3834   國安里           32         3\n3835   溪心里           32         1\n3836   淵東里           32         2\n3837   城中里           32         0\n3838   城東里           32         0\n3839   學東里           32         0\n3840   東灣里           32         0\n3841   南灣里           32         1\n3842   崑山里           32         6\n3843   大灣里           32         0\n3844   五王里           32        29\n3845   安康里           32         1\n3846   西橋里           32         0\n3847   網寮里           32         1\n3848   大橋里           32         1\n3849   東橋里           32         6\n3850   烏竹里           32         0\n3851   王行里           32         0\n3852   大智里           32         6\n3853   崇文里           32         3\n3854   崇成里           32         0\n3855   崇明里           32         1\n3856   大福里           32         0\n3857   崇德里           32        19\n3858   大德里           32         3\n3859   崇學里           32         8\n3860   和平里           32         3\n3861   崇善里           32        10\n3862   路東里           32         0\n3863   虎尾里           32         3\n3864   忠孝里           32         1\n3865   裕聖里           32         1\n3866   崇信里           32         5\n3867   德光里           32         6\n3868   復興里           32         0\n3869   自強里           32         2\n3870   文聖里           32         0\n3871   富裕里           32         1\n3872   龍山里           32         4\n3873   關聖里           32         1\n3874   新東里           32         1\n3875   富強里           32         2\n3876   泉南里           32         4\n3877   東聖里           32         2\n3878   東安里           32         0\n3879   大同里           32         1\n3880   衛國里           32         0\n3881   裕農里           32         4\n3882   南聖里           32         0\n3883   崇誨里           32         1\n3884   東門里           32         0\n3885   中西里           32         3\n3886   東明里           32         0\n3887   圍下里           32         0\n3888   東光里           32         1\n3889   後甲里           32         1\n3890   莊敬里           32         4\n3891   小東里           32         4\n3892   大學里           32         1\n3893   成大里           32         1\n3894   公園里           32         2\n3895   中樓里           32         5\n3896   賢北里           32         0\n3897   大豐里           32         0\n3898   大港里           32         0\n3899   正覺里           32         3\n3900   大和里           32         0\n3901   成功里           32         0\n3902   佛壇里           32         2\n3903   同安里           32         0\n3904   松安里           32         0\n3905   永寧里           32         0\n3906   喜南里           32         0\n3907   喜東里           32         1\n3908   喜北里           32         1\n3909   南都里           32         0\n3910   南華里           32        12\n3911   建南里           32         0\n3912   明興里           32         2\n3913   郡南里           32         0\n3914   開南里           32         0\n3915   明亮里           32         1\n3916   鯤鯓里           32         0\n3917   大忠里           32         0\n3918   光明里           32         0\n3919   府南里           32         3\n3920   大林里           32         0\n3921   國宅里           32         0\n3922   田寮里           32         0\n3923   新生里           32         0\n3924   竹溪里           32         0\n3925   明德里           32         0\n3926   再興里           32         0\n3927   彰南里           32         0\n3928   金華里           32         0\n3929   新興里           32         0\n3930   文南里           32         2\n3931   新昌里           32         0\n3932   廣州里           32         0\n3933   文華里           32         0\n3934   溪頂里           32         3\n3935   海佃里           32        11\n3936   溪東里           32         6\n3937   溪北里           32         2\n3938   溪墘里           32         8\n3939   安富里           32        10\n3940   塩田里           32         0\n3941   鳳凰里           32         8\n3942   公親里           32         0\n3943   砂崙里           32         0\n3944   文平里           32         0\n3945   國平里           32         1\n3946   育平里           32         0\n3947   華平里           32         0\n3948   怡平里           32         0\n3949   建平里           32         1\n3950   幸福里           32         9\n3951   上崙里           32         1\n3952   後壁里           32         1\n3953   仁和里           32         3\n3954   仁愛里           32         1\n3955   仁德里           32         1\n3956   興農里           32         0\n3957   省躬里           32         1\n3958   新田里           32         0\n3959   一甲里           32         2\n3960   德高里           32         1\n3961   中洲里           32         2\n3962   西灣里           32         1\n3963   甲頂里           32         5\n3964   永康里           32         0\n3965   正強里           32         6\n3966   漁光里           32         0\n3967   金城里           32         0\n3968   尚頂里           32         0\n3969   神洲里           32         0\n3970   復國里           32         3\n3971   三合里           32         2\n3972   復華里           32         8\n3973   二王里           32        17\n3974   東智里           32         0\n3975   大恩里           32         0\n3976   西湖里           32         2\n3977   平安里           32         2\n3978   西賢里           32         1\n3979   四草里           32         0\n3980   安東里           32         0\n3981   淵中里           32         0\n3982   城西里           32         0\n3983   佃東里           32         0\n3984   新順里           32         0\n3985   新樹里           32         0\n3986   塩行里           32         2\n3987   海西里           32         2\n3988   佃西里           32         0\n3989   文賢里           32         0\n3990   大光里           32         0\n3991   南美里           32         0\n3992   西和里           32         0\n3993   塩洲里           32         1\n3994   東興里           32         1\n3995   重興里           32         5\n3996   和順里           32         0\n3997   力行里           32         1\n3998   文成里           32         0\n3999   元寶里           32         2\n4000   開元里           32         0\n4001   成德里           32         0\n4002   永華里           32         0\n4003   郡王里           32         1\n4004   北灣里           32         0\n4005   龍潭里           32         2\n4006   埔園里           32         0\n4007   三民里           32         0\n4008   振興里           32         0\n4009   永祥里           32         1\n4010   文元里           32         2\n4011   開山里           32         0\n4012   大涼里           32         0\n4013   藥王里           32         0\n4014   光賢里           32         2\n4015   二行里           32         1\n4016   大甲里           32         0\n4017   仁義里           32         1\n4018   土庫里           32         0\n4019   太子里           32         0\n4020   安西里           32         1\n4021   大安里           32         1\n4022   安和里           32         0\n4023   理想里           32         5\n4024   安慶里           32         0\n4025   梅花里           32         2\n4026   頂安里           32         0\n4027   安順里           32         1\n4028   總頭里           32         1\n4029   原佃里           32         0\n4030   東和里           32         0\n4031   光復里           32         0\n4032   勝利里           32         0\n4033   建國里           32         0\n4034   六合里           32         1\n4035   淵西里           32         0\n4036   長安里           32         0\n4037   中華里           32         6\n4038   中興里           32         1\n4039   西勢里           32         1\n4040   蔦松里           32         0\n4041   顯宮里           32         0\n4042   州南里           32         0\n4043   布袋里           32         0\n4044   州北里           32         1\n4045   塭南里           32         0\n4046   公塭里           32         0\n4047   南興里           32         0\n4048   億載里           32         0\n4049   平通里           32         0\n4050   海東里           32         0\n4051   青草里           34         0\n4052   保安里           34         0\n4053   赤嵌里           34         0\n4054   大成里           34         0\n4055   城北里           34         0\n4056   城南里           34         0\n4057   法華里           34         1\n4058   海南里           34         2\n4059   國安里           34        18\n4060   溪心里           34         4\n4061   淵東里           34         0\n4062   城中里           34         0\n4063   城東里           34         0\n4064   學東里           34         2\n4065   東灣里           34         3\n4066   南灣里           34         0\n4067   崑山里           34         7\n4068   大灣里           34         1\n4069   五王里           34        16\n4070   安康里           34         0\n4071   西橋里           34         0\n4072   網寮里           34         0\n4073   大橋里           34        12\n4074   東橋里           34         3\n4075   烏竹里           34         0\n4076   王行里           34         0\n4077   大智里           34         7\n4078   崇文里           34         3\n4079   崇成里           34         3\n4080   崇明里           34         2\n4081   大福里           34         0\n4082   崇德里           34        17\n4083   大德里           34         1\n4084   崇學里           34         2\n4085   和平里           34         5\n4086   崇善里           34        10\n4087   路東里           34         1\n4088   虎尾里           34         7\n4089   忠孝里           34         0\n4090   裕聖里           34         1\n4091   崇信里           34        10\n4092   德光里           34         6\n4093   復興里           34         4\n4094   自強里           34        14\n4095   文聖里           34         2\n4096   富裕里           34         1\n4097   龍山里           34         1\n4098   關聖里           34         1\n4099   新東里           34         7\n4100   富強里           34         5\n4101   泉南里           34         6\n4102   東聖里           34         2\n4103   東安里           34         0\n4104   大同里           34         1\n4105   衛國里           34         4\n4106   裕農里           34         6\n4107   南聖里           34         0\n4108   崇誨里           34         3\n4109   東門里           34         0\n4110   中西里           34         0\n4111   東明里           34         0\n4112   圍下里           34         1\n4113   東光里           34         1\n4114   後甲里           34         0\n4115   莊敬里           34         2\n4116   小東里           34         1\n4117   大學里           34         0\n4118   成大里           34         1\n4119   公園里           34         6\n4120   中樓里           34         6\n4121   賢北里           34         0\n4122   大豐里           34         0\n4123   大港里           34         1\n4124   正覺里           34         3\n4125   大和里           34         0\n4126   成功里           34         0\n4127   佛壇里           34         1\n4128   同安里           34         0\n4129   松安里           34         0\n4130   永寧里           34         1\n4131   喜南里           34         0\n4132   喜東里           34         0\n4133   喜北里           34         0\n4134   南都里           34         1\n4135   南華里           34         2\n4136   建南里           34         8\n4137   明興里           34         5\n4138   郡南里           34         4\n4139   開南里           34         4\n4140   明亮里           34        18\n4141   鯤鯓里           34         2\n4142   大忠里           34         1\n4143   光明里           34         4\n4144   府南里           34        20\n4145   大林里           34         0\n4146   國宅里           34         4\n4147   田寮里           34         3\n4148   新生里           34         3\n4149   竹溪里           34         0\n4150   明德里           34         0\n4151   再興里           34         0\n4152   彰南里           34         0\n4153   金華里           34         1\n4154   新興里           34         0\n4155   文南里           34         2\n4156   新昌里           34         1\n4157   廣州里           34         1\n4158   文華里           34         0\n4159   溪頂里           34         6\n4160   海佃里           34        23\n4161   溪東里           34        11\n4162   溪北里           34         4\n4163   溪墘里           34        48\n4164   安富里           34        31\n4165   塩田里           34         1\n4166   鳳凰里           34        11\n4167   公親里           34         0\n4168   砂崙里           34         0\n4169   文平里           34         0\n4170   國平里           34         2\n4171   育平里           34         1\n4172   華平里           34         0\n4173   怡平里           34         0\n4174   建平里           34         2\n4175   幸福里           34        33\n4176   上崙里           34         2\n4177   後壁里           34         1\n4178   仁和里           34         4\n4179   仁愛里           34         3\n4180   仁德里           34         9\n4181   興農里           34         0\n4182   省躬里           34         0\n4183   新田里           34         1\n4184   一甲里           34         2\n4185   德高里           34         7\n4186   中洲里           34         0\n4187   西灣里           34         0\n4188   甲頂里           34         3\n4189   永康里           34         8\n4190   正強里           34         7\n4191   漁光里           34         0\n4192   金城里           34         0\n4193   尚頂里           34         2\n4194   神洲里           34         0\n4195   復國里           34         0\n4196   三合里           34         3\n4197   復華里           34        17\n4198   二王里           34        12\n4199   東智里           34         0\n4200   大恩里           34         2\n4201   西湖里           34         0\n4202   平安里           34         0\n4203   西賢里           34         2\n4204   四草里           34         0\n4205   安東里           34         0\n4206   淵中里           34         0\n4207   城西里           34         0\n4208   佃東里           34         2\n4209   新順里           34         2\n4210   新樹里           34         0\n4211   塩行里           34         4\n4212   海西里           34         2\n4213   佃西里           34         1\n4214   文賢里           34         8\n4215   大光里           34         0\n4216   南美里           34         0\n4217   西和里           34         0\n4218   塩洲里           34         3\n4219   東興里           34         5\n4220   重興里           34         2\n4221   和順里           34         3\n4222   力行里           34         1\n4223   文成里           34         0\n4224   元寶里           34         1\n4225   開元里           34         2\n4226   成德里           34         5\n4227   永華里           34         1\n4228   郡王里           34         1\n4229   北灣里           34         1\n4230   龍潭里           34         0\n4231   埔園里           34         3\n4232   三民里           34         0\n4233   振興里           34         0\n4234   永祥里           34         0\n4235   文元里           34         1\n4236   開山里           34         0\n4237   大涼里           34         1\n4238   藥王里           34         1\n4239   光賢里           34         2\n4240   二行里           34         0\n4241   大甲里           34         0\n4242   仁義里           34         2\n4243   土庫里           34         0\n4244   太子里           34         1\n4245   安西里           34         0\n4246   大安里           34        10\n4247   安和里           34         4\n4248   理想里           34         5\n4249   安慶里           34         5\n4250   梅花里           34         4\n4251   頂安里           34         0\n4252   安順里           34         2\n4253   總頭里           34         3\n4254   原佃里           34         2\n4255   東和里           34         1\n4256   光復里           34         1\n4257   勝利里           34         9\n4258   建國里           34         0\n4259   六合里           34         2\n4260   淵西里           34         3\n4261   長安里           34         1\n4262   中華里           34         0\n4263   中興里           34         3\n4264   西勢里           34         3\n4265   蔦松里           34         1\n4266   顯宮里           34         0\n4267   州南里           34         0\n4268   布袋里           34         4\n4269   州北里           34         0\n4270   塭南里           34         0\n4271   公塭里           34         1\n4272   南興里           34         0\n4273   億載里           34         0\n4274   平通里           34         3\n4275   海東里           34         4\n4276   青草里           47         0\n4277   保安里           47         0\n4278   赤嵌里           47         0\n4279   大成里           47         0\n4280   城北里           47         0\n4281   城南里           47         0\n4282   法華里           47         1\n4283   海南里           47         0\n4284   國安里           47         0\n4285   溪心里           47         1\n4286   淵東里           47         0\n4287   城中里           47         0\n4288   城東里           47         0\n4289   學東里           47         0\n4290   東灣里           47         2\n4291   南灣里           47         0\n4292   崑山里           47         7\n4293   大灣里           47         0\n4294   五王里           47         2\n4295   安康里           47         5\n4296   西橋里           47         1\n4297   網寮里           47         3\n4298   大橋里           47         2\n4299   東橋里           47         0\n4300   烏竹里           47         0\n4301   王行里           47         0\n4302   大智里           47         2\n4303   崇文里           47         0\n4304   崇成里           47         0\n4305   崇明里           47         1\n4306   大福里           47         0\n4307   崇德里           47         1\n4308   大德里           47         0\n4309   崇學里           47         0\n4310   和平里           47         1\n4311   崇善里           47         2\n4312   路東里           47         1\n4313   虎尾里           47         2\n4314   忠孝里           47         0\n4315   裕聖里           47         0\n4316   崇信里           47         0\n4317   德光里           47         0\n4318   復興里           47         1\n4319   自強里           47         2\n4320   文聖里           47         1\n4321   富裕里           47         3\n4322   龍山里           47         1\n4323   關聖里           47         1\n4324   新東里           47         0\n4325   富強里           47         4\n4326   泉南里           47         4\n4327   東聖里           47         5\n4328   東安里           47         0\n4329   大同里           47         0\n4330   衛國里           47         0\n4331   裕農里           47         1\n4332   南聖里           47         0\n4333   崇誨里           47         0\n4334   東門里           47         1\n4335   中西里           47         0\n4336   東明里           47         0\n4337   圍下里           47         1\n4338   東光里           47         1\n4339   後甲里           47         4\n4340   莊敬里           47         4\n4341   小東里           47         3\n4342   大學里           47         1\n4343   成大里           47         0\n4344   公園里           47         0\n4345   中樓里           47         0\n4346   賢北里           47         1\n4347   大豐里           47         0\n4348   大港里           47         2\n4349   正覺里           47         4\n4350   大和里           47         0\n4351   成功里           47         0\n4352   佛壇里           47         0\n4353   同安里           47         2\n4354   松安里           47         2\n4355   永寧里           47         0\n4356   喜南里           47         0\n4357   喜東里           47         0\n4358   喜北里           47         0\n4359   南都里           47         1\n4360   南華里           47         0\n4361   建南里           47         0\n4362   明興里           47         0\n4363   郡南里           47         0\n4364   開南里           47         1\n4365   明亮里           47         0\n4366   鯤鯓里           47         0\n4367   大忠里           47         4\n4368   光明里           47         1\n4369   府南里           47         2\n4370   大林里           47         0\n4371   國宅里           47         1\n4372   田寮里           47         2\n4373   新生里           47         0\n4374   竹溪里           47         0\n4375   明德里           47         1\n4376   再興里           47         2\n4377   彰南里           47         0\n4378   金華里           47         5\n4379   新興里           47         2\n4380   文南里           47         5\n4381   新昌里           47         1\n4382   廣州里           47         0\n4383   文華里           47         0\n4384   溪頂里           47         1\n4385   海佃里           47         0\n4386   溪東里           47         0\n4387   溪北里           47         1\n4388   溪墘里           47         0\n4389   安富里           47         0\n4390   塩田里           47         0\n4391   鳳凰里           47         0\n4392   公親里           47         0\n4393   砂崙里           47         0\n4394   文平里           47         0\n4395   國平里           47         0\n4396   育平里           47         1\n4397   華平里           47         1\n4398   怡平里           47         2\n4399   建平里           47         1\n4400   幸福里           47         0\n4401   上崙里           47         1\n4402   後壁里           47         1\n4403   仁和里           47         0\n4404   仁愛里           47         2\n4405   仁德里           47         2\n4406   興農里           47         0\n4407   省躬里           47         0\n4408   新田里           47         1\n4409   一甲里           47         1\n4410   德高里           47         6\n4411   中洲里           47         3\n4412   西灣里           47         0\n4413   甲頂里           47         1\n4414   永康里           47         0\n4415   正強里           47         3\n4416   漁光里           47         0\n4417   金城里           47         0\n4418   尚頂里           47         0\n4419   神洲里           47         0\n4420   復國里           47         2\n4421   三合里           47         0\n4422   復華里           47         0\n4423   二王里           47         1\n4424   東智里           47         4\n4425   大恩里           47         0\n4426   西湖里           47         4\n4427   平安里           47         0\n4428   西賢里           47         3\n4429   四草里           47         0\n4430   安東里           47         4\n4431   淵中里           47         2\n4432   城西里           47         1\n4433   佃東里           47         0\n4434   新順里           47         0\n4435   新樹里           47         0\n4436   塩行里           47         2\n4437   海西里           47         0\n4438   佃西里           47         1\n4439   文賢里           47         0\n4440   大光里           47         0\n4441   南美里           47         5\n4442   西和里           47         0\n4443   塩洲里           47         1\n4444   東興里           47         0\n4445   重興里           47         0\n4446   和順里           47         3\n4447   力行里           47         2\n4448   文成里           47         2\n4449   元寶里           47         1\n4450   開元里           47         1\n4451   成德里           47         3\n4452   永華里           47         2\n4453   郡王里           47         0\n4454   北灣里           47         2\n4455   龍潭里           47         0\n4456   埔園里           47         3\n4457   三民里           47         0\n4458   振興里           47         0\n4459   永祥里           47         2\n4460   文元里           47         1\n4461   開山里           47         0\n4462   大涼里           47         1\n4463   藥王里           47         0\n4464   光賢里           47         0\n4465   二行里           47         3\n4466   大甲里           47         1\n4467   仁義里           47        12\n4468   土庫里           47         0\n4469   太子里           47         3\n4470   安西里           47         0\n4471   大安里           47         0\n4472   安和里           47         0\n4473   理想里           47         0\n4474   安慶里           47         2\n4475   梅花里           47         2\n4476   頂安里           47         1\n4477   安順里           47         1\n4478   總頭里           47         0\n4479   原佃里           47         0\n4480   東和里           47         1\n4481   光復里           47         0\n4482   勝利里           47         0\n4483   建國里           47         0\n4484   六合里           47         1\n4485   淵西里           47         0\n4486   長安里           47         0\n4487   中華里           47         1\n4488   中興里           47         0\n4489   西勢里           47         0\n4490   蔦松里           47         0\n4491   顯宮里           47         0\n4492   州南里           47         0\n4493   布袋里           47         0\n4494   州北里           47         0\n4495   塭南里           47         0\n4496   公塭里           47         0\n4497   南興里           47         0\n4498   億載里           47         0\n4499   平通里           47         0\n4500   海東里           47         1\n4501   青草里           51         0\n4502   保安里           51         0\n4503   赤嵌里           51         0\n4504   大成里           51         0\n4505   城北里           51         0\n4506   城南里           51         0\n4507   法華里           51         0\n4508   海南里           51         0\n4509   國安里           51         0\n4510   溪心里           51         0\n4511   淵東里           51         0\n4512   城中里           51         0\n4513   城東里           51         0\n4514   學東里           51         0\n4515   東灣里           51         0\n4516   南灣里           51         0\n4517   崑山里           51         0\n4518   大灣里           51         0\n4519   五王里           51         0\n4520   安康里           51         0\n4521   西橋里           51         0\n4522   網寮里           51         0\n4523   大橋里           51         0\n4524   東橋里           51         0\n4525   烏竹里           51         0\n4526   王行里           51         0\n4527   大智里           51         0\n4528   崇文里           51         0\n4529   崇成里           51         0\n4530   崇明里           51         0\n4531   大福里           51         0\n4532   崇德里           51         0\n4533   大德里           51         0\n4534   崇學里           51         0\n4535   和平里           51         0\n4536   崇善里           51         0\n4537   路東里           51         0\n4538   虎尾里           51         0\n4539   忠孝里           51         0\n4540   裕聖里           51         0\n4541   崇信里           51         0\n4542   德光里           51         0\n4543   復興里           51         0\n4544   自強里           51         0\n4545   文聖里           51         0\n4546   富裕里           51         0\n4547   龍山里           51         0\n4548   關聖里           51         0\n4549   新東里           51         0\n4550   富強里           51         0\n4551   泉南里           51         1\n4552   東聖里           51         0\n4553   東安里           51         0\n4554   大同里           51         0\n4555   衛國里           51         0\n4556   裕農里           51         0\n4557   南聖里           51         0\n4558   崇誨里           51         0\n4559   東門里           51         0\n4560   中西里           51         0\n4561   東明里           51         0\n4562   圍下里           51         0\n4563   東光里           51         0\n4564   後甲里           51         0\n4565   莊敬里           51         0\n4566   小東里           51         0\n4567   大學里           51         0\n4568   成大里           51         0\n4569   公園里           51         0\n4570   中樓里           51         0\n4571   賢北里           51         0\n4572   大豐里           51         0\n4573   大港里           51         0\n4574   正覺里           51         0\n4575   大和里           51         0\n4576   成功里           51         0\n4577   佛壇里           51         0\n4578   同安里           51         0\n4579   松安里           51         0\n4580   永寧里           51         0\n4581   喜南里           51         0\n4582   喜東里           51         0\n4583   喜北里           51         0\n4584   南都里           51         0\n4585   南華里           51         0\n4586   建南里           51         0\n4587   明興里           51         0\n4588   郡南里           51         0\n4589   開南里           51         0\n4590   明亮里           51         0\n4591   鯤鯓里           51         0\n4592   大忠里           51         0\n4593   光明里           51         0\n4594   府南里           51         0\n4595   大林里           51         0\n4596   國宅里           51         0\n4597   田寮里           51         0\n4598   新生里           51         0\n4599   竹溪里           51         0\n4600   明德里           51         0\n4601   再興里           51         0\n4602   彰南里           51         0\n4603   金華里           51         0\n4604   新興里           51         0\n4605   文南里           51         0\n4606   新昌里           51         0\n4607   廣州里           51         1\n4608   文華里           51         0\n4609   溪頂里           51         0\n4610   海佃里           51         0\n4611   溪東里           51         0\n4612   溪北里           51         0\n4613   溪墘里           51         0\n4614   安富里           51         0\n4615   塩田里           51         0\n4616   鳳凰里           51         0\n4617   公親里           51         0\n4618   砂崙里           51         0\n4619   文平里           51         0\n4620   國平里           51         0\n4621   育平里           51         0\n4622   華平里           51         0\n4623   怡平里           51         0\n4624   建平里           51         0\n4625   幸福里           51         0\n4626   上崙里           51         0\n4627   後壁里           51         0\n4628   仁和里           51         0\n4629   仁愛里           51         0\n4630   仁德里           51         0\n4631   興農里           51         0\n4632   省躬里           51         0\n4633   新田里           51         0\n4634   一甲里           51         0\n4635   德高里           51         0\n4636   中洲里           51         0\n4637   西灣里           51         0\n4638   甲頂里           51         0\n4639   永康里           51         0\n4640   正強里           51         0\n4641   漁光里           51         0\n4642   金城里           51         0\n4643   尚頂里           51         0\n4644   神洲里           51         0\n4645   復國里           51         0\n4646   三合里           51         0\n4647   復華里           51         0\n4648   二王里           51         0\n4649   東智里           51         0\n4650   大恩里           51         0\n4651   西湖里           51         0\n4652   平安里           51         0\n4653   西賢里           51         0\n4654   四草里           51         0\n4655   安東里           51         0\n4656   淵中里           51         0\n4657   城西里           51         0\n4658   佃東里           51         0\n4659   新順里           51         0\n4660   新樹里           51         0\n4661   塩行里           51         0\n4662   海西里           51         0\n4663   佃西里           51         0\n4664   文賢里           51         0\n4665   大光里           51         0\n4666   南美里           51         0\n4667   西和里           51         0\n4668   塩洲里           51         0\n4669   東興里           51         0\n4670   重興里           51         0\n4671   和順里           51         0\n4672   力行里           51         0\n4673   文成里           51         0\n4674   元寶里           51         0\n4675   開元里           51         0\n4676   成德里           51         0\n4677   永華里           51         0\n4678   郡王里           51         0\n4679   北灣里           51         0\n4680   龍潭里           51         0\n4681   埔園里           51         0\n4682   三民里           51         0\n4683   振興里           51         0\n4684   永祥里           51         0\n4685   文元里           51         0\n4686   開山里           51         0\n4687   大涼里           51         0\n4688   藥王里           51         0\n4689   光賢里           51         0\n4690   二行里           51         0\n4691   大甲里           51         0\n4692   仁義里           51         0\n4693   土庫里           51         0\n4694   太子里           51         0\n4695   安西里           51         0\n4696   大安里           51         0\n4697   安和里           51         0\n4698   理想里           51         0\n4699   安慶里           51         0\n4700   梅花里           51         0\n4701   頂安里           51         0\n4702   安順里           51         0\n4703   總頭里           51         0\n4704   原佃里           51         0\n4705   東和里           51         0\n4706   光復里           51         0\n4707   勝利里           51         0\n4708   建國里           51         0\n4709   六合里           51         0\n4710   淵西里           51         0\n4711   長安里           51         0\n4712   中華里           51         0\n4713   中興里           51         0\n4714   西勢里           51         0\n4715   蔦松里           51         0\n4716   顯宮里           51         0\n4717   州南里           51         0\n4718   布袋里           51         0\n4719   州北里           51         0\n4720   塭南里           51         0\n4721   公塭里           51         0\n4722   南興里           51         0\n4723   億載里           51         0\n4724   平通里           51         0\n4725   海東里           51         0\n\n\nLet’s check the number of rows and columns for our newly created dengue_st\n\n\n[1] 4725    3\n\n\nLet’s check if dengue_st is truly a spacetime_cube\n\n\n[1] TRUE\n\n\nWe will save dengue_st for Analysing Emerging Hotspot in 5.2."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#disclaimers",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#disclaimers",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "",
    "text": "Some parts of this document have hidden codes that are kept PRIVATE for now. They contain confidential codes. I will ONLY show these hidden codes on 1 March 2024 (week 9).\nI will ONLY provide explanations for the exercise right now, and it is subjected to change during the duration of this exercise.\nIt is important to be honest and fair in our work, and respect the privacy of the work of others, so as to uphold academic integrity throughout the duration of this take-home exercise."
  },
  {
    "objectID": "about.html#about-site",
    "href": "about.html#about-site",
    "title": "About Me",
    "section": "About Site",
    "text": "About Site\n\nThis is where I will be uploading my Hands-on, In-class and Take-home exercises, where I explore R programming language and build on my competencies in data analytics."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#disclaimer-read-this-before-you-scroll-down",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#disclaimer-read-this-before-you-scroll-down",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "",
    "text": "Some parts of this document have hidden codes that are kept PRIVATE for now. They contain confidential codes which I will ONLY be disclosing them on 1 March 2024 (week 9).\nI will ONLY provide explanations for the exercise right now, and it is subjected to change during the duration of this exercise.\nIt is important to be honest and fair in our work, and respect the privacy of the work of others, so as to uphold academic integrity throughout the duration of this take-home exercise."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "Welcome to IS415 Geospatial Analytics and Applications\nI am Gerald Lim and this is the course website of IS415 where I will be uploading my work. You will find my course work on this website too.\nClick here to know more about me"
  },
  {
    "objectID": "about.html#disclaimer",
    "href": "about.html#disclaimer",
    "title": "About Me",
    "section": "Disclaimer",
    "text": "Disclaimer\n\nThe codes and works on this page belong to me, Gerald Lim. They are for my learning purposes, and are meant for showcasing my work for my IS415 journey.\nPlease DO NOT copy or share any codes without seeking permission, and to uphold academic integrity.\nConstructive feedback is welcomed, but any misuse or misrepresentation of these materials, including mocking or using them to pass judgment, is strictly prohibited (let’s be real, everyone is in this module to learn).\nBy accessing this page, you agree to respect Gerald Lim’s ownership of the works on this site.\n\nThank you for your understanding and cooperation."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#hotspot-analysis-by-using-sfdep-methods",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#hotspot-analysis-by-using-sfdep-methods",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "5 Hotspot Analysis by using sfdep methods",
    "text": "5 Hotspot Analysis by using sfdep methods\nAfter performing the Global and Local Autocorrelation Analysis, let us move on to Analysing the Emerging Hotspots in our research in the dengue cases in Tainan City.\n\n5.1 Performing Hot Spot and Cold Spot Area Analysis (HCSA)\nIn the previous section, we have used Moran’s I to identify clusters and outliers.\nNow, we will use Gi*, which is a spatial autocorrelation statistic tool, to identify statistically hot (clusters of high values) or cold spots (clusters of low values) based on spatial weights.\n\n5.1.1 Computing spatial weights\nWe have to compute the spatial weights before we can proceed to computing the local Gi* statistics\n\n\n5.1.2 Computing local Gi* statistics\nNext, we will compute the local Gi* statistics\n\n\nSimple feature collection with 2885 features and 24 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  TWD97\n# A tibble: 2,885 × 25\n   gi_star     e_gi  var_gi p_value   p_sim p_folded_sim skewness kurtosis nb   \n     &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;nb&gt; \n 1  -2.67  0.000329 8.45e-9  -2.75  0.00592         0.02     0.01   0.424  &lt;int&gt;\n 2  -2.67  0.000315 9.20e-9  -2.50  0.0125          0.02     0.01   0.693  &lt;int&gt;\n 3  -2.16  0.000350 2.53e-9  -2.16  0.0304          0.02     0.01   0.248  &lt;int&gt;\n 4  -2.16  0.000350 1.76e-9  -2.60  0.00943         0.02     0.01   0.0297 &lt;int&gt;\n 5  -2.16  0.000353 2.61e-9  -2.19  0.0282          0.04     0.02   0.411  &lt;int&gt;\n 6  -2.16  0.000355 1.79e-9  -2.71  0.00674         0.02     0.01   0.252  &lt;int&gt;\n 7  -2.16  0.000352 2.18e-9  -2.38  0.0174          0.02     0.01   0.477  &lt;int&gt;\n 8  -0.485 0.000346 2.31e-9  -0.479 0.632           0.76     0.38   0.528  &lt;int&gt;\n 9  -0.485 0.000353 2.75e-9  -0.561 0.574           0.52     0.26   0.256  &lt;int&gt;\n10  -0.485 0.000348 2.28e-9  -0.514 0.607           0.62     0.31   0.475  &lt;int&gt;\n# ℹ 2,875 more rows\n# ℹ 16 more variables: wt &lt;list&gt;, VILLCODE &lt;chr&gt;, COUNTYNAME &lt;chr&gt;,\n#   TOWNNAME &lt;chr&gt;, VILLNAME &lt;chr&gt;, VILLENG &lt;chr&gt;, COUNTYID &lt;chr&gt;,\n#   COUNTYCODE &lt;chr&gt;, TOWNID &lt;chr&gt;, TOWNCODE &lt;chr&gt;, NOTE &lt;chr&gt;,\n#   epi_week_num &lt;dbl&gt;, Village &lt;chr&gt;, Num_Cases &lt;int&gt;, geometry &lt;POLYGON [°]&gt;,\n#   spatial_weights &lt;list&gt;\n\n\n\n\n5.1.3 Visualising Gi*\n\n\n\n\n\nFrom the above plot, we are able to see the spatial clustering pattern. We could see that most of the area have a lower density (in orange).\n\nThe areas with higher density (in light and dark green) towards the center of the map. The high density areas indicates that there are a high Gi* value, which relates to an obvious trend of clusters of dengue cases.\nThe areas with low density (in orange) indicates that there is a low Gi* value, which means that there might be a lower number of dengue clusters, or that there is randomness in the distribution of cases.\n\n\n\n5.1.4 Visualising p-value of HCSA\nLet’s plot the p-value of the areas to check the significance level\n\n\n\n\n\nWe can see that some areas have a higher significance level (in dark brown), while most of it have a lower significance level (in beige)\n\n\n5.1.4 Visualising Local HCSA\nNow, let’s put both maps (Gi* and p-value) side by side to make a comparison\n\n\n\n\n\nBased on the maps, we can see an obvious trend, which is that areas with lower density for Gi* (means lower number of dengue cluster) has a low p-value (0.001). This means that areas with lower number of dengue cluster has a higher significance level, and that indicates that the dengue cases are influenced by geographic proximity.\n\n\n5.1.5 Visualising hot spot and cold spot areas\nNow, we can plot the significant hotspot and coldspot (p-values less than 0.05)\n\n\n\n\n\nFrom the map, we can observe that:\n\nThere is 1 significant hotspot in the middle of the map (in dark green), with gi_star between 15-20, which indicates that it has a higher dengue cluster, and is surrounded by areas which are hotspots too.\n\nThis supports the findings from our LISA map and the initial distribution map, where the central area of Tainan City has a higher dengue cluster (higher number of dengue cases)\n\nThere are a few smaller hotspots (light green) surrounding the significant hotspot (dark green), as well as some other areas.\nThe areas towards the sides of the map has a number of coldspots (orange), with gi_star value between -5 to 0, which indicates there is a low dengue cluster.\n\nLet’s find the details of the hotspot and coldspot, which we will be using it in 5.2 in analysing emerging hotspots\n\n\nHotspot with the highest gi_star and p_sim &lt; 0.05: 溪墘里 溪墘里 溪墘里 溪墘里 溪墘里 溪墘里 溪墘里 溪墘里 溪墘里 溪墘里 溪墘里 溪墘里 溪墘里 溪墘里 溪墘里 \n\n\nSo, 大興里 is the hotspot. :)\n\n\n\n5.2 Analysing Emerging Hotspot\nSince we have computed the Gi* values, which shows us the Hotspots and Coldspots, we will move on to performing Mann-Kendall test to look for any trend in the spots.\nHowever, we need to compute the local Gi* statistics using the spacetime dataset, dengue_st, which we have created in 2.4.\n\n5.2.1 Computing Gi*\nWe will use dengue_st to compute the Gi*, where the geometry is in the spacetime dataset.\nLet’s look at the first 5 rows\n\n\n    VILLNAME epi_week_num Num_Cases                       nb\n451   青草里           31         0              6, 118, 157\n452   保安里           31         1       126, 136, 164, 190\n453   赤嵌里           31         0         68, 69, 166, 177\n454   大成里           31         0         94, 97, 100, 104\n455   城北里           31         0         12, 13, 216, 222\n456   城南里           31         0 1, 12, 13, 118, 157, 216\n                                                                  wt\n451                                  0.3730707, 0.5166453, 0.3002859\n452                       0.3310971, 0.3966444, 0.7717933, 0.8772257\n453                           1.223481, 1.545931, 1.357812, 1.700209\n454                           1.286031, 2.993138, 1.862438, 2.166602\n455                       1.4041477, 1.1310013, 0.6159622, 0.4135746\n456 0.3730707, 0.7009117, 0.4433391, 0.3101907, 0.3335912, 0.3828707\n\n\n\n\n5.2.2 Computing Local Gi*\nNow, we need to compute the Local Gi* for each villages, using the tainan_dengue_nb which we have created in 5.1.\n\n\n5.2.3 Computing Mann-Kendall Test\nNow, we will use Mann-Kendall Test to evaluate the trend of the hotspot. We have found that 大興里 is the hotspot when we were analysing HCSA in step 5.1.\nLet’s install Kendall\nLet’s plot the result using ggplot2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#conclusion",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#conclusion",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan",
    "section": "6 Conclusion",
    "text": "6 Conclusion\nIt is interesting to use the different tools such as Local and Global spatial autocorrelation to find the clusters or hotspots within the area of focus, in this case it is the dengue cases in Tainan City."
  }
]